<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1253" width="0.4" height="15.0" fill="rgb(217,187,7)" rx="2" ry="2" />
<text  x="130.89" y="1263.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.05%)</title><rect x="198.2" y="1701" width="0.5" height="15.0" fill="rgb(206,32,53)" rx="2" ry="2" />
<text  x="201.18" y="1711.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (29 samples, 0.46%)</title><rect x="412.0" y="1925" width="5.4" height="15.0" fill="rgb(227,128,22)" rx="2" ry="2" />
<text  x="415.01" y="1935.5" ></text>
</g>
<g >
<title>page_fault (46 samples, 0.72%)</title><rect x="425.0" y="1957" width="8.6" height="15.0" fill="rgb(217,87,34)" rx="2" ry="2" />
<text  x="428.03" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.08%)</title><rect x="188.7" y="1653" width="0.9" height="15.0" fill="rgb(235,46,8)" rx="2" ry="2" />
<text  x="191.69" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="533" width="0.2" height="15.0" fill="rgb(246,136,3)" rx="2" ry="2" />
<text  x="1170.69" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1173" width="0.2" height="15.0" fill="rgb(240,29,20)" rx="2" ry="2" />
<text  x="204.34" y="1183.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.03%)</title><rect x="862.0" y="2005" width="0.4" height="15.0" fill="rgb(216,51,14)" rx="2" ry="2" />
<text  x="864.99" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="933" width="0.2" height="15.0" fill="rgb(236,33,53)" rx="2" ry="2" />
<text  x="204.71" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (55 samples, 0.87%)</title><rect x="97.0" y="1749" width="10.2" height="15.0" fill="rgb(234,5,51)" rx="2" ry="2" />
<text  x="100.02" y="1759.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.03%)</title><rect x="423.5" y="1829" width="0.4" height="15.0" fill="rgb(216,108,34)" rx="2" ry="2" />
<text  x="426.54" y="1839.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (1 samples, 0.02%)</title><rect x="889.1" y="1893" width="0.2" height="15.0" fill="rgb(213,217,28)" rx="2" ry="2" />
<text  x="892.14" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="146.9" y="1685" width="0.1" height="15.0" fill="rgb(224,51,18)" rx="2" ry="2" />
<text  x="149.85" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1237" width="0.4" height="15.0" fill="rgb(239,35,12)" rx="2" ry="2" />
<text  x="130.89" y="1247.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (4 samples, 0.06%)</title><rect x="935.1" y="2053" width="0.7" height="15.0" fill="rgb(245,158,17)" rx="2" ry="2" />
<text  x="938.07" y="2063.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.05%)</title><rect x="213.1" y="1973" width="0.5" height="15.0" fill="rgb(219,125,12)" rx="2" ry="2" />
<text  x="216.05" y="1983.5" ></text>
</g>
<g >
<title>strcmp@plt (4 samples, 0.06%)</title><rect x="1187.6" y="2037" width="0.7" height="15.0" fill="rgb(216,143,17)" rx="2" ry="2" />
<text  x="1190.58" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1189" width="0.5" height="15.0" fill="rgb(236,157,46)" rx="2" ry="2" />
<text  x="75.66" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="309" width="0.2" height="15.0" fill="rgb(210,42,13)" rx="2" ry="2" />
<text  x="204.34" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1477" width="0.2" height="15.0" fill="rgb(229,95,35)" rx="2" ry="2" />
<text  x="1170.31" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (16 samples, 0.25%)</title><rect x="878.5" y="2037" width="3.0" height="15.0" fill="rgb(206,206,51)" rx="2" ry="2" />
<text  x="881.54" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1909" width="0.5" height="15.0" fill="rgb(216,117,17)" rx="2" ry="2" />
<text  x="1170.87" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="112.6" y="1685" width="0.2" height="15.0" fill="rgb(211,228,2)" rx="2" ry="2" />
<text  x="115.64" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="261" width="0.2" height="15.0" fill="rgb(206,19,24)" rx="2" ry="2" />
<text  x="204.71" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="997" width="0.2" height="15.0" fill="rgb(238,99,13)" rx="2" ry="2" />
<text  x="1170.69" y="1007.5" ></text>
</g>
<g >
<title>page_fault (12 samples, 0.19%)</title><rect x="30.1" y="2037" width="2.2" height="15.0" fill="rgb(238,108,33)" rx="2" ry="2" />
<text  x="33.08" y="2047.5" ></text>
</g>
<g >
<title>onmt::is_alphabet@plt (3 samples, 0.05%)</title><rect x="769.0" y="1893" width="0.6" height="15.0" fill="rgb(209,169,44)" rx="2" ry="2" />
<text  x="772.02" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="595.4" y="1973" width="0.1" height="15.0" fill="rgb(246,96,29)" rx="2" ry="2" />
<text  x="598.35" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1093" width="0.5" height="15.0" fill="rgb(215,179,22)" rx="2" ry="2" />
<text  x="75.66" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1301" width="0.4" height="15.0" fill="rgb(223,159,53)" rx="2" ry="2" />
<text  x="130.89" y="1311.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="117.7" y="1669" width="0.1" height="15.0" fill="rgb(230,189,26)" rx="2" ry="2" />
<text  x="120.66" y="1679.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 0.02%)</title><rect x="1189.4" y="2053" width="0.2" height="15.0" fill="rgb(253,23,3)" rx="2" ry="2" />
<text  x="1192.44" y="2063.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1122.9" y="2037" width="0.2" height="15.0" fill="rgb(221,95,10)" rx="2" ry="2" />
<text  x="1125.87" y="2047.5" ></text>
</g>
<g >
<title>__libc_start_main (2,778 samples, 43.78%)</title><rect x="79.4" y="2037" width="516.5" height="15.0" fill="rgb(211,145,8)" rx="2" ry="2" />
<text  x="82.36" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="869" width="0.5" height="15.0" fill="rgb(232,38,21)" rx="2" ry="2" />
<text  x="1170.87" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1637" width="0.2" height="15.0" fill="rgb(214,100,19)" rx="2" ry="2" />
<text  x="1170.31" y="1647.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="162.5" y="1589" width="0.2" height="15.0" fill="rgb(237,42,30)" rx="2" ry="2" />
<text  x="165.47" y="1599.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="319.6" y="1973" width="0.4" height="15.0" fill="rgb(220,49,19)" rx="2" ry="2" />
<text  x="322.60" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="1125.5" y="2053" width="0.2" height="15.0" fill="rgb(229,197,3)" rx="2" ry="2" />
<text  x="1128.48" y="2063.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="593.5" y="1877" width="0.2" height="15.0" fill="rgb(206,155,54)" rx="2" ry="2" />
<text  x="596.49" y="1887.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="152.1" y="1685" width="0.1" height="15.0" fill="rgb(241,136,34)" rx="2" ry="2" />
<text  x="155.06" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="156.5" y="1749" width="0.2" height="15.0" fill="rgb(236,74,27)" rx="2" ry="2" />
<text  x="159.52" y="1759.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="71.9" y="1941" width="0.2" height="15.0" fill="rgb(219,90,54)" rx="2" ry="2" />
<text  x="74.92" y="1951.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.05%)</title><rect x="431.9" y="1845" width="0.6" height="15.0" fill="rgb(244,138,47)" rx="2" ry="2" />
<text  x="434.91" y="1855.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="593.7" y="1989" width="0.2" height="15.0" fill="rgb(211,221,13)" rx="2" ry="2" />
<text  x="596.68" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1173" width="0.5" height="15.0" fill="rgb(254,83,24)" rx="2" ry="2" />
<text  x="1170.87" y="1183.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="1105.6" y="2053" width="0.4" height="15.0" fill="rgb(230,180,53)" rx="2" ry="2" />
<text  x="1108.58" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="757" width="0.2" height="15.0" fill="rgb(227,107,51)" rx="2" ry="2" />
<text  x="130.52" y="767.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="1051.1" y="2037" width="0.4" height="15.0" fill="rgb(235,149,30)" rx="2" ry="2" />
<text  x="1054.10" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="869" width="0.2" height="15.0" fill="rgb(245,99,52)" rx="2" ry="2" />
<text  x="130.52" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="1125" width="0.2" height="15.0" fill="rgb(237,13,44)" rx="2" ry="2" />
<text  x="204.89" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1093" width="0.5" height="15.0" fill="rgb(252,192,39)" rx="2" ry="2" />
<text  x="1170.87" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="357" width="0.2" height="15.0" fill="rgb(244,175,14)" rx="2" ry="2" />
<text  x="131.07" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1269" width="0.2" height="15.0" fill="rgb(252,81,53)" rx="2" ry="2" />
<text  x="1170.31" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="157.3" y="1525" width="0.3" height="15.0" fill="rgb(237,66,16)" rx="2" ry="2" />
<text  x="160.27" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="117" width="0.2" height="15.0" fill="rgb(241,119,27)" rx="2" ry="2" />
<text  x="204.89" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (29 samples, 0.46%)</title><rect x="112.6" y="1781" width="5.4" height="15.0" fill="rgb(226,216,9)" rx="2" ry="2" />
<text  x="115.64" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1221" width="0.2" height="15.0" fill="rgb(242,201,36)" rx="2" ry="2" />
<text  x="1170.69" y="1231.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (1 samples, 0.02%)</title><rect x="594.4" y="1781" width="0.2" height="15.0" fill="rgb(212,141,47)" rx="2" ry="2" />
<text  x="597.42" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="645" width="0.2" height="15.0" fill="rgb(226,169,18)" rx="2" ry="2" />
<text  x="1170.69" y="655.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="202.3" y="1973" width="0.2" height="15.0" fill="rgb(229,99,36)" rx="2" ry="2" />
<text  x="205.27" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="156.9" y="1893" width="0.7" height="15.0" fill="rgb(233,201,27)" rx="2" ry="2" />
<text  x="159.90" y="1903.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="117.1" y="1653" width="0.2" height="15.0" fill="rgb(215,152,6)" rx="2" ry="2" />
<text  x="120.10" y="1663.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="73.2" y="2005" width="0.2" height="15.0" fill="rgb(232,60,46)" rx="2" ry="2" />
<text  x="76.22" y="2015.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="1188.3" y="2053" width="0.2" height="15.0" fill="rgb(249,122,25)" rx="2" ry="2" />
<text  x="1191.33" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1237" width="0.2" height="15.0" fill="rgb(231,56,46)" rx="2" ry="2" />
<text  x="1170.31" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="128.4" y="1925" width="0.2" height="15.0" fill="rgb(240,58,23)" rx="2" ry="2" />
<text  x="131.45" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="197" width="0.2" height="15.0" fill="rgb(228,211,54)" rx="2" ry="2" />
<text  x="204.34" y="207.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (1,373 samples, 21.64%)</title><rect x="600.9" y="1941" width="255.3" height="15.0" fill="rgb(222,76,44)" rx="2" ry="2" />
<text  x="603.93" y="1951.5" >onmt::ITokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.50%)</title><rect x="134.6" y="1717" width="5.9" height="15.0" fill="rgb(254,130,24)" rx="2" ry="2" />
<text  x="137.58" y="1727.5" ></text>
</g>
<g >
<title>__pthread_once (1 samples, 0.02%)</title><rect x="34.9" y="2021" width="0.2" height="15.0" fill="rgb(212,141,4)" rx="2" ry="2" />
<text  x="37.92" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="965" width="0.2" height="15.0" fill="rgb(232,9,10)" rx="2" ry="2" />
<text  x="1170.50" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (49 samples, 0.77%)</title><rect x="191.1" y="1717" width="9.1" height="15.0" fill="rgb(222,161,43)" rx="2" ry="2" />
<text  x="194.11" y="1727.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (67 samples, 1.06%)</title><rect x="636.6" y="1877" width="12.5" height="15.0" fill="rgb(210,69,28)" rx="2" ry="2" />
<text  x="639.63" y="1887.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 0.02%)</title><rect x="175.5" y="1701" width="0.2" height="15.0" fill="rgb(205,28,43)" rx="2" ry="2" />
<text  x="178.49" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="789" width="0.2" height="15.0" fill="rgb(207,103,16)" rx="2" ry="2" />
<text  x="1170.69" y="799.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="69" width="0.4" height="15.0" fill="rgb(225,121,6)" rx="2" ry="2" />
<text  x="75.85" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="389" width="0.2" height="15.0" fill="rgb(236,143,3)" rx="2" ry="2" />
<text  x="204.71" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="149" width="0.2" height="15.0" fill="rgb(230,1,38)" rx="2" ry="2" />
<text  x="204.89" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1317" width="0.1" height="15.0" fill="rgb(222,143,51)" rx="2" ry="2" />
<text  x="204.15" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="85" width="0.2" height="15.0" fill="rgb(212,134,20)" rx="2" ry="2" />
<text  x="1170.31" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="1173" width="0.2" height="15.0" fill="rgb(245,43,44)" rx="2" ry="2" />
<text  x="204.71" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="126.6" y="1797" width="0.2" height="15.0" fill="rgb(243,166,28)" rx="2" ry="2" />
<text  x="129.59" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="341" width="0.2" height="15.0" fill="rgb(235,205,51)" rx="2" ry="2" />
<text  x="1170.50" y="351.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1989" width="0.2" height="15.0" fill="rgb(230,81,0)" rx="2" ry="2" />
<text  x="75.48" y="1999.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="834.5" y="1797" width="0.2" height="15.0" fill="rgb(240,202,7)" rx="2" ry="2" />
<text  x="837.48" y="1807.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (139 samples, 2.19%)</title><rect x="624.4" y="1893" width="25.8" height="15.0" fill="rgb(248,4,48)" rx="2" ry="2" />
<text  x="627.36" y="1903.5" >o..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (27 samples, 0.43%)</title><rect x="97.2" y="1637" width="5.0" height="15.0" fill="rgb(229,4,51)" rx="2" ry="2" />
<text  x="100.21" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="885" width="0.2" height="15.0" fill="rgb(253,38,43)" rx="2" ry="2" />
<text  x="1170.31" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="981" width="0.2" height="15.0" fill="rgb(223,29,47)" rx="2" ry="2" />
<text  x="204.89" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1013" width="0.5" height="15.0" fill="rgb(213,217,28)" rx="2" ry="2" />
<text  x="1170.87" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="127.1" y="1765" width="0.6" height="15.0" fill="rgb(251,48,10)" rx="2" ry="2" />
<text  x="130.14" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1429" width="0.1" height="15.0" fill="rgb(250,100,7)" rx="2" ry="2" />
<text  x="160.45" y="1439.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="188.1" y="1653" width="0.4" height="15.0" fill="rgb(216,163,24)" rx="2" ry="2" />
<text  x="191.13" y="1663.5" ></text>
</g>
<g >
<title>std::locale::~locale (4 samples, 0.06%)</title><rect x="590.7" y="1973" width="0.7" height="15.0" fill="rgb(232,68,26)" rx="2" ry="2" />
<text  x="593.70" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (31 samples, 0.49%)</title><rect x="134.8" y="1621" width="5.7" height="15.0" fill="rgb(216,148,49)" rx="2" ry="2" />
<text  x="137.77" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="229" width="0.2" height="15.0" fill="rgb(210,92,5)" rx="2" ry="2" />
<text  x="204.34" y="239.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="101.9" y="1589" width="0.3" height="15.0" fill="rgb(252,176,38)" rx="2" ry="2" />
<text  x="104.86" y="1599.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (262 samples, 4.13%)</title><rect x="1002.8" y="2053" width="48.7" height="15.0" fill="rgb(211,168,18)" rx="2" ry="2" />
<text  x="1005.75" y="2063.5" >fast..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="357" width="0.4" height="15.0" fill="rgb(214,60,14)" rx="2" ry="2" />
<text  x="75.85" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="245" width="0.5" height="15.0" fill="rgb(214,78,27)" rx="2" ry="2" />
<text  x="1170.87" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1909" width="0.2" height="15.0" fill="rgb(215,55,51)" rx="2" ry="2" />
<text  x="1170.50" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="933" width="0.1" height="15.0" fill="rgb(206,88,36)" rx="2" ry="2" />
<text  x="160.45" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1237" width="0.2" height="15.0" fill="rgb(247,137,46)" rx="2" ry="2" />
<text  x="130.52" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="405" width="0.2" height="15.0" fill="rgb(220,52,7)" rx="2" ry="2" />
<text  x="131.07" y="415.5" ></text>
</g>
<g >
<title>std::__merge_without_buffer&lt;__gnu_cxx::__normal_iterator&lt;TWeightedDoc*, std::vector&lt;TWeightedDoc, std::allocator&lt;TWeightedDoc&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;TNewsCluster::SortByWeights (107 samples, 1.69%)</title><rect x="1168.4" y="2053" width="19.9" height="15.0" fill="rgb(249,129,42)" rx="2" ry="2" />
<text  x="1171.43" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.50%)</title><rect x="140.5" y="1701" width="6.0" height="15.0" fill="rgb(245,197,31)" rx="2" ry="2" />
<text  x="143.53" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1397" width="0.2" height="15.0" fill="rgb(208,23,47)" rx="2" ry="2" />
<text  x="1170.69" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="549" width="0.2" height="15.0" fill="rgb(215,213,34)" rx="2" ry="2" />
<text  x="204.89" y="559.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (1 samples, 0.02%)</title><rect x="34.2" y="2005" width="0.2" height="15.0" fill="rgb(228,161,25)" rx="2" ry="2" />
<text  x="37.17" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1925" width="0.5" height="15.0" fill="rgb(228,143,37)" rx="2" ry="2" />
<text  x="75.66" y="1935.5" ></text>
</g>
<g >
<title>__do_page_fault (46 samples, 0.72%)</title><rect x="425.0" y="1925" width="8.6" height="15.0" fill="rgb(247,12,19)" rx="2" ry="2" />
<text  x="428.03" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28 samples, 0.44%)</title><rect x="97.0" y="1717" width="5.2" height="15.0" fill="rgb(238,63,31)" rx="2" ry="2" />
<text  x="100.02" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="261" width="0.2" height="15.0" fill="rgb(217,49,30)" rx="2" ry="2" />
<text  x="1170.31" y="271.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="166.9" y="1589" width="0.2" height="15.0" fill="rgb(226,158,2)" rx="2" ry="2" />
<text  x="169.94" y="1599.5" ></text>
</g>
<g >
<title>generic_file_read_iter (6 samples, 0.09%)</title><rect x="78.2" y="1893" width="1.2" height="15.0" fill="rgb(210,101,53)" rx="2" ry="2" />
<text  x="81.24" y="1903.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="339.3" y="1989" width="0.2" height="15.0" fill="rgb(251,19,36)" rx="2" ry="2" />
<text  x="342.31" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="805" width="0.2" height="15.0" fill="rgb(243,1,48)" rx="2" ry="2" />
<text  x="1170.31" y="815.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (3 samples, 0.05%)</title><rect x="199.7" y="1701" width="0.5" height="15.0" fill="rgb(245,132,40)" rx="2" ry="2" />
<text  x="202.66" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (221 samples, 3.48%)</title><rect x="159.9" y="1957" width="41.1" height="15.0" fill="rgb(236,66,5)" rx="2" ry="2" />
<text  x="162.87" y="1967.5" >std..</text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="593.5" y="1909" width="0.2" height="15.0" fill="rgb(229,122,3)" rx="2" ry="2" />
<text  x="596.49" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="773" width="0.2" height="15.0" fill="rgb(222,82,49)" rx="2" ry="2" />
<text  x="1170.50" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1077" width="0.2" height="15.0" fill="rgb(228,70,32)" rx="2" ry="2" />
<text  x="130.52" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="437" width="0.2" height="15.0" fill="rgb(209,185,43)" rx="2" ry="2" />
<text  x="204.34" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1333" width="0.2" height="15.0" fill="rgb(252,180,34)" rx="2" ry="2" />
<text  x="160.08" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (10 samples, 0.16%)</title><rect x="148.0" y="1653" width="1.8" height="15.0" fill="rgb(232,27,26)" rx="2" ry="2" />
<text  x="150.97" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="112.3" y="1701" width="0.2" height="15.0" fill="rgb(206,156,38)" rx="2" ry="2" />
<text  x="115.27" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="1093" width="0.2" height="15.0" fill="rgb(237,168,43)" rx="2" ry="2" />
<text  x="204.89" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1605" width="0.5" height="15.0" fill="rgb(223,128,26)" rx="2" ry="2" />
<text  x="1170.87" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.49%)</title><rect x="134.8" y="1669" width="5.7" height="15.0" fill="rgb(206,170,53)" rx="2" ry="2" />
<text  x="137.77" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1333" width="0.2" height="15.0" fill="rgb(217,151,51)" rx="2" ry="2" />
<text  x="1170.50" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="1093" width="0.2" height="15.0" fill="rgb(244,167,41)" rx="2" ry="2" />
<text  x="204.71" y="1103.5" ></text>
</g>
<g >
<title>std::__future_base::_Result&lt;boost::optional&lt;TDocument&gt; &gt;::~_Result (1 samples, 0.02%)</title><rect x="95.2" y="1957" width="0.1" height="15.0" fill="rgb(248,136,49)" rx="2" ry="2" />
<text  x="98.16" y="1967.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number@plt (1 samples, 0.02%)</title><rect x="825.9" y="1893" width="0.2" height="15.0" fill="rgb(238,99,41)" rx="2" ry="2" />
<text  x="828.92" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.06%)</title><rect x="116.0" y="1653" width="0.7" height="15.0" fill="rgb(228,174,25)" rx="2" ry="2" />
<text  x="118.99" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="229" width="0.2" height="15.0" fill="rgb(243,156,29)" rx="2" ry="2" />
<text  x="1170.69" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (43 samples, 0.68%)</title><rect x="176.0" y="1701" width="8.0" height="15.0" fill="rgb(210,204,48)" rx="2" ry="2" />
<text  x="179.05" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="613" width="0.2" height="15.0" fill="rgb(243,105,32)" rx="2" ry="2" />
<text  x="131.07" y="623.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1525" width="0.2" height="15.0" fill="rgb(215,206,31)" rx="2" ry="2" />
<text  x="75.48" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1045" width="0.2" height="15.0" fill="rgb(227,43,2)" rx="2" ry="2" />
<text  x="160.08" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="645" width="0.2" height="15.0" fill="rgb(216,60,39)" rx="2" ry="2" />
<text  x="130.52" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1029" width="0.2" height="15.0" fill="rgb(224,169,44)" rx="2" ry="2" />
<text  x="1170.31" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="773" width="0.2" height="15.0" fill="rgb(217,115,11)" rx="2" ry="2" />
<text  x="204.34" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="1189.6" y="2053" width="0.2" height="15.0" fill="rgb(215,193,4)" rx="2" ry="2" />
<text  x="1192.63" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="629" width="0.2" height="15.0" fill="rgb(254,6,37)" rx="2" ry="2" />
<text  x="204.89" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="888.0" y="2021" width="0.2" height="15.0" fill="rgb(239,205,15)" rx="2" ry="2" />
<text  x="891.03" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="2021" width="0.2" height="15.0" fill="rgb(214,44,34)" rx="2" ry="2" />
<text  x="1170.50" y="2031.5" ></text>
</g>
<g >
<title>Rank (333 samples, 5.25%)</title><rect x="96.3" y="2005" width="61.9" height="15.0" fill="rgb(236,19,18)" rx="2" ry="2" />
<text  x="99.28" y="2015.5" >Rank</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="597" width="0.4" height="15.0" fill="rgb(216,178,14)" rx="2" ry="2" />
<text  x="75.85" y="607.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="593.5" y="1941" width="0.2" height="15.0" fill="rgb(224,99,28)" rx="2" ry="2" />
<text  x="596.49" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (18 samples, 0.28%)</title><rect x="147.0" y="1685" width="3.4" height="15.0" fill="rgb(235,221,8)" rx="2" ry="2" />
<text  x="150.04" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="127.7" y="1717" width="0.6" height="15.0" fill="rgb(248,182,15)" rx="2" ry="2" />
<text  x="130.70" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="37" width="0.2" height="15.0" fill="rgb(208,163,20)" rx="2" ry="2" />
<text  x="1170.69" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="629" width="0.2" height="15.0" fill="rgb(222,166,24)" rx="2" ry="2" />
<text  x="204.71" y="639.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="197" width="0.4" height="15.0" fill="rgb(228,192,48)" rx="2" ry="2" />
<text  x="75.85" y="207.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="1188.3" y="2037" width="0.2" height="15.0" fill="rgb(248,209,20)" rx="2" ry="2" />
<text  x="1191.33" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="53" width="0.4" height="15.0" fill="rgb(244,57,6)" rx="2" ry="2" />
<text  x="75.85" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1045" width="0.1" height="15.0" fill="rgb(222,39,40)" rx="2" ry="2" />
<text  x="204.15" y="1055.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="764.9" y="1845" width="0.4" height="15.0" fill="rgb(249,135,34)" rx="2" ry="2" />
<text  x="767.93" y="1855.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="152.4" y="1685" width="0.2" height="15.0" fill="rgb(224,162,22)" rx="2" ry="2" />
<text  x="155.43" y="1695.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (23 samples, 0.36%)</title><rect x="325.5" y="1989" width="4.3" height="15.0" fill="rgb(209,151,35)" rx="2" ry="2" />
<text  x="328.55" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1509" width="0.5" height="15.0" fill="rgb(227,117,21)" rx="2" ry="2" />
<text  x="75.66" y="1519.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="186.6" y="1669" width="0.4" height="15.0" fill="rgb(241,111,35)" rx="2" ry="2" />
<text  x="189.65" y="1679.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (4 samples, 0.06%)</title><rect x="138.5" y="1589" width="0.7" height="15.0" fill="rgb(228,63,9)" rx="2" ry="2" />
<text  x="141.49" y="1599.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (2 samples, 0.03%)</title><rect x="145.9" y="1621" width="0.4" height="15.0" fill="rgb(216,6,43)" rx="2" ry="2" />
<text  x="148.92" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="501" width="0.2" height="15.0" fill="rgb(212,37,43)" rx="2" ry="2" />
<text  x="204.34" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1269" width="0.2" height="15.0" fill="rgb(244,1,11)" rx="2" ry="2" />
<text  x="160.08" y="1279.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="934.7" y="2005" width="0.2" height="15.0" fill="rgb(224,63,3)" rx="2" ry="2" />
<text  x="937.70" y="2015.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="125.8" y="1701" width="0.2" height="15.0" fill="rgb(218,113,38)" rx="2" ry="2" />
<text  x="128.84" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1365" width="0.2" height="15.0" fill="rgb(234,68,27)" rx="2" ry="2" />
<text  x="204.34" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1125" width="0.2" height="15.0" fill="rgb(210,194,34)" rx="2" ry="2" />
<text  x="160.08" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;@plt (2 samples, 0.03%)</title><rect x="873.7" y="2037" width="0.4" height="15.0" fill="rgb(209,190,47)" rx="2" ry="2" />
<text  x="876.71" y="2047.5" ></text>
</g>
<g >
<title>get_vma_policy.part.36 (1 samples, 0.02%)</title><rect x="423.4" y="1861" width="0.1" height="15.0" fill="rgb(238,225,50)" rx="2" ry="2" />
<text  x="426.35" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="594.4" y="1765" width="0.2" height="15.0" fill="rgb(232,97,17)" rx="2" ry="2" />
<text  x="597.42" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="933" width="0.2" height="15.0" fill="rgb(208,78,9)" rx="2" ry="2" />
<text  x="204.34" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="200.4" y="1861" width="0.2" height="15.0" fill="rgb(213,163,6)" rx="2" ry="2" />
<text  x="203.41" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1253" width="0.2" height="15.0" fill="rgb(246,107,26)" rx="2" ry="2" />
<text  x="160.08" y="1263.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="190.2" y="1669" width="0.2" height="15.0" fill="rgb(214,4,15)" rx="2" ry="2" />
<text  x="193.18" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="126.4" y="1845" width="0.4" height="15.0" fill="rgb(232,12,28)" rx="2" ry="2" />
<text  x="129.40" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1813" width="0.5" height="15.0" fill="rgb(252,73,25)" rx="2" ry="2" />
<text  x="1170.87" y="1823.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1605" width="0.2" height="15.0" fill="rgb(225,73,45)" rx="2" ry="2" />
<text  x="75.48" y="1615.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="141.5" y="1621" width="0.1" height="15.0" fill="rgb(248,50,47)" rx="2" ry="2" />
<text  x="144.46" y="1631.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="719.4" y="1861" width="0.2" height="15.0" fill="rgb(248,101,48)" rx="2" ry="2" />
<text  x="722.38" y="1871.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="120.1" y="1701" width="0.2" height="15.0" fill="rgb(233,213,30)" rx="2" ry="2" />
<text  x="123.08" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="581" width="0.5" height="15.0" fill="rgb(221,176,48)" rx="2" ry="2" />
<text  x="1170.87" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="141.6" y="1621" width="0.2" height="15.0" fill="rgb(238,132,9)" rx="2" ry="2" />
<text  x="144.65" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.57%)</title><rect x="168.6" y="1733" width="6.7" height="15.0" fill="rgb(225,108,29)" rx="2" ry="2" />
<text  x="171.61" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="183.7" y="1637" width="0.2" height="15.0" fill="rgb(241,59,1)" rx="2" ry="2" />
<text  x="186.67" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (85 samples, 1.34%)</title><rect x="160.1" y="1765" width="15.8" height="15.0" fill="rgb(207,86,4)" rx="2" ry="2" />
<text  x="163.06" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31 samples, 0.49%)</title><rect x="134.8" y="1685" width="5.7" height="15.0" fill="rgb(246,62,40)" rx="2" ry="2" />
<text  x="137.77" y="1695.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (12 samples, 0.19%)</title><rect x="876.3" y="2005" width="2.2" height="15.0" fill="rgb(224,206,23)" rx="2" ry="2" />
<text  x="879.31" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="69" width="0.2" height="15.0" fill="rgb(236,187,0)" rx="2" ry="2" />
<text  x="1170.69" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1253" width="0.5" height="15.0" fill="rgb(236,82,18)" rx="2" ry="2" />
<text  x="1170.87" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="1253" width="0.2" height="15.0" fill="rgb(227,14,42)" rx="2" ry="2" />
<text  x="204.71" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="789" width="0.2" height="15.0" fill="rgb(250,93,15)" rx="2" ry="2" />
<text  x="1170.50" y="799.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1122.9" y="2021" width="0.2" height="15.0" fill="rgb(224,77,52)" rx="2" ry="2" />
<text  x="1125.87" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="661" width="0.2" height="15.0" fill="rgb(251,102,47)" rx="2" ry="2" />
<text  x="204.89" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="741" width="0.2" height="15.0" fill="rgb(223,119,42)" rx="2" ry="2" />
<text  x="204.71" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="156.9" y="1813" width="0.7" height="15.0" fill="rgb(235,42,37)" rx="2" ry="2" />
<text  x="159.90" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1461" width="0.5" height="15.0" fill="rgb(220,39,19)" rx="2" ry="2" />
<text  x="1170.87" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="533" width="0.2" height="15.0" fill="rgb(218,214,36)" rx="2" ry="2" />
<text  x="130.52" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1781" width="0.2" height="15.0" fill="rgb(253,182,23)" rx="2" ry="2" />
<text  x="1170.31" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (44 samples, 0.69%)</title><rect x="118.0" y="1749" width="8.2" height="15.0" fill="rgb(239,179,27)" rx="2" ry="2" />
<text  x="121.03" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="168.4" y="1621" width="0.2" height="15.0" fill="rgb(224,67,10)" rx="2" ry="2" />
<text  x="171.42" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="981" width="0.5" height="15.0" fill="rgb(232,110,31)" rx="2" ry="2" />
<text  x="1170.87" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="581" width="0.2" height="15.0" fill="rgb(213,153,35)" rx="2" ry="2" />
<text  x="1170.69" y="591.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="149.5" y="1637" width="0.3" height="15.0" fill="rgb(238,196,53)" rx="2" ry="2" />
<text  x="152.46" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="757" width="0.2" height="15.0" fill="rgb(229,123,2)" rx="2" ry="2" />
<text  x="204.89" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1813" width="0.2" height="15.0" fill="rgb(222,49,1)" rx="2" ry="2" />
<text  x="1170.69" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.2" y="1525" width="0.3" height="15.0" fill="rgb(254,149,50)" rx="2" ry="2" />
<text  x="204.15" y="1535.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="445.9" y="1957" width="0.1" height="15.0" fill="rgb(227,90,11)" rx="2" ry="2" />
<text  x="448.85" y="1967.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="594.4" y="1925" width="0.2" height="15.0" fill="rgb(224,56,53)" rx="2" ry="2" />
<text  x="597.42" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1429" width="0.5" height="15.0" fill="rgb(209,111,52)" rx="2" ry="2" />
<text  x="1170.87" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1413" width="0.4" height="15.0" fill="rgb(218,25,31)" rx="2" ry="2" />
<text  x="130.89" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1749" width="0.2" height="15.0" fill="rgb(234,220,3)" rx="2" ry="2" />
<text  x="1170.69" y="1759.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1893" width="0.2" height="15.0" fill="rgb(244,118,39)" rx="2" ry="2" />
<text  x="75.48" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1669" width="0.2" height="15.0" fill="rgb(236,207,30)" rx="2" ry="2" />
<text  x="1170.50" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1493" width="0.2" height="15.0" fill="rgb(219,140,6)" rx="2" ry="2" />
<text  x="1170.50" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="2021" width="0.2" height="15.0" fill="rgb(216,206,30)" rx="2" ry="2" />
<text  x="1170.31" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="757" width="0.4" height="15.0" fill="rgb(207,172,46)" rx="2" ry="2" />
<text  x="75.85" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="1125" width="0.2" height="15.0" fill="rgb(239,117,2)" rx="2" ry="2" />
<text  x="204.71" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="997" width="0.1" height="15.0" fill="rgb(229,140,7)" rx="2" ry="2" />
<text  x="160.45" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1333" width="0.1" height="15.0" fill="rgb(237,109,19)" rx="2" ry="2" />
<text  x="160.45" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.03%)</title><rect x="175.3" y="1733" width="0.4" height="15.0" fill="rgb(209,91,11)" rx="2" ry="2" />
<text  x="178.30" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1285" width="0.2" height="15.0" fill="rgb(215,136,21)" rx="2" ry="2" />
<text  x="160.27" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="309" width="0.2" height="15.0" fill="rgb(252,76,1)" rx="2" ry="2" />
<text  x="131.07" y="319.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1269" width="0.5" height="15.0" fill="rgb(224,62,1)" rx="2" ry="2" />
<text  x="75.66" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="1333" width="0.2" height="15.0" fill="rgb(233,199,54)" rx="2" ry="2" />
<text  x="204.71" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1237" width="0.1" height="15.0" fill="rgb(220,164,5)" rx="2" ry="2" />
<text  x="160.45" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (35 samples, 0.55%)</title><rect x="881.5" y="2021" width="6.5" height="15.0" fill="rgb(252,112,48)" rx="2" ry="2" />
<text  x="884.52" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="645" width="0.2" height="15.0" fill="rgb(225,171,1)" rx="2" ry="2" />
<text  x="204.34" y="655.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.03%)</title><rect x="450.3" y="1909" width="0.4" height="15.0" fill="rgb(247,28,11)" rx="2" ry="2" />
<text  x="453.32" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1349" width="0.1" height="15.0" fill="rgb(241,128,54)" rx="2" ry="2" />
<text  x="160.45" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1925" width="0.2" height="15.0" fill="rgb(213,71,8)" rx="2" ry="2" />
<text  x="1170.31" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="517" width="0.2" height="15.0" fill="rgb(215,196,46)" rx="2" ry="2" />
<text  x="1170.31" y="527.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (1 samples, 0.02%)</title><rect x="592.0" y="1861" width="0.2" height="15.0" fill="rgb(219,99,44)" rx="2" ry="2" />
<text  x="595.00" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1429" width="0.2" height="15.0" fill="rgb(220,108,23)" rx="2" ry="2" />
<text  x="160.08" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1445" width="0.1" height="15.0" fill="rgb(250,28,48)" rx="2" ry="2" />
<text  x="160.45" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::value (2 samples, 0.03%)</title><rect x="175.3" y="1717" width="0.4" height="15.0" fill="rgb(245,68,34)" rx="2" ry="2" />
<text  x="178.30" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1589" width="0.2" height="15.0" fill="rgb(240,62,20)" rx="2" ry="2" />
<text  x="1170.50" y="1599.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (64 samples, 1.01%)</title><rect x="83.1" y="1941" width="11.9" height="15.0" fill="rgb(229,172,36)" rx="2" ry="2" />
<text  x="86.08" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1109" width="0.2" height="15.0" fill="rgb(241,35,28)" rx="2" ry="2" />
<text  x="160.08" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (1 samples, 0.02%)</title><rect x="129.0" y="1605" width="0.2" height="15.0" fill="rgb(248,143,43)" rx="2" ry="2" />
<text  x="132.00" y="1615.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1493" width="0.2" height="15.0" fill="rgb(250,91,22)" rx="2" ry="2" />
<text  x="75.48" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1653" width="0.5" height="15.0" fill="rgb(219,98,11)" rx="2" ry="2" />
<text  x="1170.87" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (28 samples, 0.44%)</title><rect x="112.6" y="1717" width="5.2" height="15.0" fill="rgb(225,47,1)" rx="2" ry="2" />
<text  x="115.64" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1205" width="0.2" height="15.0" fill="rgb(230,190,32)" rx="2" ry="2" />
<text  x="1170.31" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1557" width="0.2" height="15.0" fill="rgb(250,4,36)" rx="2" ry="2" />
<text  x="1170.69" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="229" width="0.2" height="15.0" fill="rgb(253,73,40)" rx="2" ry="2" />
<text  x="131.07" y="239.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="79.9" y="1941" width="0.2" height="15.0" fill="rgb(208,115,5)" rx="2" ry="2" />
<text  x="82.91" y="1951.5" ></text>
</g>
<g >
<title>__handle_mm_fault (34 samples, 0.54%)</title><rect x="426.9" y="1893" width="6.3" height="15.0" fill="rgb(214,161,43)" rx="2" ry="2" />
<text  x="429.89" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="901" width="0.2" height="15.0" fill="rgb(216,186,46)" rx="2" ry="2" />
<text  x="1170.50" y="911.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::type_to_char (1 samples, 0.02%)</title><rect x="604.5" y="1893" width="0.1" height="15.0" fill="rgb(246,93,16)" rx="2" ry="2" />
<text  x="607.46" y="1903.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="121.9" y="1685" width="0.6" height="15.0" fill="rgb(240,57,46)" rx="2" ry="2" />
<text  x="124.94" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (64 samples, 1.01%)</title><rect x="128.6" y="1749" width="11.9" height="15.0" fill="rgb(240,61,15)" rx="2" ry="2" />
<text  x="131.63" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1125" width="0.5" height="15.0" fill="rgb(245,17,16)" rx="2" ry="2" />
<text  x="75.66" y="1135.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="71.9" y="1909" width="0.2" height="15.0" fill="rgb(239,212,42)" rx="2" ry="2" />
<text  x="74.92" y="1919.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="424.8" y="1813" width="0.2" height="15.0" fill="rgb(213,73,42)" rx="2" ry="2" />
<text  x="427.84" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="30.8" y="1957" width="0.2" height="15.0" fill="rgb(221,140,28)" rx="2" ry="2" />
<text  x="33.83" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="773" width="0.2" height="15.0" fill="rgb(239,71,24)" rx="2" ry="2" />
<text  x="204.71" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1429" width="0.2" height="15.0" fill="rgb(251,104,18)" rx="2" ry="2" />
<text  x="204.34" y="1439.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="424.8" y="1829" width="0.2" height="15.0" fill="rgb(245,190,40)" rx="2" ry="2" />
<text  x="427.84" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (149 samples, 2.35%)</title><rect x="128.6" y="1861" width="27.7" height="15.0" fill="rgb(227,39,26)" rx="2" ry="2" />
<text  x="131.63" y="1871.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="901" width="0.2" height="15.0" fill="rgb(226,128,20)" rx="2" ry="2" />
<text  x="130.52" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="501" width="0.5" height="15.0" fill="rgb(213,97,39)" rx="2" ry="2" />
<text  x="1170.87" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (32 samples, 0.50%)</title><rect x="140.5" y="1669" width="6.0" height="15.0" fill="rgb(243,73,24)" rx="2" ry="2" />
<text  x="143.53" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (12 samples, 0.19%)</title><rect x="859.2" y="2037" width="2.2" height="15.0" fill="rgb(217,202,35)" rx="2" ry="2" />
<text  x="862.21" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (20 samples, 0.32%)</title><rect x="874.8" y="2037" width="3.7" height="15.0" fill="rgb(242,69,46)" rx="2" ry="2" />
<text  x="877.83" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="549" width="0.2" height="15.0" fill="rgb(238,153,40)" rx="2" ry="2" />
<text  x="1170.31" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="127.1" y="1653" width="0.6" height="15.0" fill="rgb(251,57,32)" rx="2" ry="2" />
<text  x="130.14" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1541" width="0.2" height="15.0" fill="rgb(241,206,8)" rx="2" ry="2" />
<text  x="130.52" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.7" y="1349" width="0.4" height="15.0" fill="rgb(220,174,51)" rx="2" ry="2" />
<text  x="204.71" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="725" width="0.5" height="15.0" fill="rgb(254,8,29)" rx="2" ry="2" />
<text  x="1170.87" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.50%)</title><rect x="140.5" y="1685" width="6.0" height="15.0" fill="rgb(235,192,46)" rx="2" ry="2" />
<text  x="143.53" y="1695.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.03%)</title><rect x="423.5" y="1845" width="0.4" height="15.0" fill="rgb(236,77,0)" rx="2" ry="2" />
<text  x="426.54" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="341" width="0.4" height="15.0" fill="rgb(206,38,14)" rx="2" ry="2" />
<text  x="75.85" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1557" width="0.4" height="15.0" fill="rgb(235,83,27)" rx="2" ry="2" />
<text  x="130.89" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="693" width="0.2" height="15.0" fill="rgb(232,107,2)" rx="2" ry="2" />
<text  x="204.89" y="703.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="120.3" y="1701" width="0.2" height="15.0" fill="rgb(216,43,20)" rx="2" ry="2" />
<text  x="123.26" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="837" width="0.4" height="15.0" fill="rgb(206,29,3)" rx="2" ry="2" />
<text  x="75.85" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="156.9" y="1877" width="0.7" height="15.0" fill="rgb(231,158,22)" rx="2" ry="2" />
<text  x="159.90" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1845" width="0.5" height="15.0" fill="rgb(208,139,24)" rx="2" ry="2" />
<text  x="75.66" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1077" width="0.1" height="15.0" fill="rgb(241,57,4)" rx="2" ry="2" />
<text  x="204.15" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1893" width="0.2" height="15.0" fill="rgb(248,161,40)" rx="2" ry="2" />
<text  x="1170.31" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1093" width="0.4" height="15.0" fill="rgb(250,196,6)" rx="2" ry="2" />
<text  x="130.89" y="1103.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (19 samples, 0.30%)</title><rect x="571.4" y="1973" width="3.5" height="15.0" fill="rgb(219,99,52)" rx="2" ry="2" />
<text  x="574.36" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="73.0" y="37" width="0.2" height="15.0" fill="rgb(216,219,32)" rx="2" ry="2" />
<text  x="76.03" y="47.5" ></text>
</g>
<g >
<title>RunFasttextClf (2 samples, 0.03%)</title><rect x="598.1" y="1957" width="0.4" height="15.0" fill="rgb(216,132,42)" rx="2" ry="2" />
<text  x="601.14" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1525" width="0.4" height="15.0" fill="rgb(238,70,50)" rx="2" ry="2" />
<text  x="130.89" y="1535.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.08%)</title><rect x="424.1" y="1845" width="0.9" height="15.0" fill="rgb(247,140,30)" rx="2" ry="2" />
<text  x="427.10" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="175.1" y="1701" width="0.2" height="15.0" fill="rgb(243,45,20)" rx="2" ry="2" />
<text  x="178.12" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="126.4" y="1861" width="0.4" height="15.0" fill="rgb(225,199,41)" rx="2" ry="2" />
<text  x="129.40" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (20 samples, 0.32%)</title><rect x="146.7" y="1749" width="3.7" height="15.0" fill="rgb(223,131,52)" rx="2" ry="2" />
<text  x="149.67" y="1759.5" ></text>
</g>
<g >
<title>std::locale::~locale (8 samples, 0.13%)</title><rect x="337.1" y="1989" width="1.5" height="15.0" fill="rgb(233,125,46)" rx="2" ry="2" />
<text  x="340.08" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="934.9" y="2053" width="0.2" height="15.0" fill="rgb(206,32,29)" rx="2" ry="2" />
<text  x="937.88" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1061" width="0.2" height="15.0" fill="rgb(231,77,26)" rx="2" ry="2" />
<text  x="1170.50" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="757" width="0.2" height="15.0" fill="rgb(248,195,54)" rx="2" ry="2" />
<text  x="204.71" y="767.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.06%)</title><rect x="102.2" y="1621" width="0.8" height="15.0" fill="rgb(222,140,21)" rx="2" ry="2" />
<text  x="105.23" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="901" width="0.2" height="15.0" fill="rgb(212,81,22)" rx="2" ry="2" />
<text  x="204.89" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1637" width="0.2" height="15.0" fill="rgb(254,120,47)" rx="2" ry="2" />
<text  x="1170.50" y="1647.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="155.6" y="1685" width="0.4" height="15.0" fill="rgb(247,57,54)" rx="2" ry="2" />
<text  x="158.59" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="127.1" y="1749" width="0.6" height="15.0" fill="rgb(231,55,34)" rx="2" ry="2" />
<text  x="130.14" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1205" width="0.2" height="15.0" fill="rgb(209,162,9)" rx="2" ry="2" />
<text  x="160.08" y="1215.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="79.4" y="2021" width="0.1" height="15.0" fill="rgb(210,225,4)" rx="2" ry="2" />
<text  x="82.36" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="2037" width="0.2" height="15.0" fill="rgb(225,84,2)" rx="2" ry="2" />
<text  x="1170.69" y="2047.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="152.2" y="1685" width="0.2" height="15.0" fill="rgb(214,164,33)" rx="2" ry="2" />
<text  x="155.25" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="709" width="0.2" height="15.0" fill="rgb(210,112,31)" rx="2" ry="2" />
<text  x="130.52" y="719.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="35.7" y="1925" width="0.1" height="15.0" fill="rgb(250,74,34)" rx="2" ry="2" />
<text  x="38.66" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="341" width="0.2" height="15.0" fill="rgb(229,209,12)" rx="2" ry="2" />
<text  x="204.89" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="453" width="0.2" height="15.0" fill="rgb(224,111,13)" rx="2" ry="2" />
<text  x="131.07" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="156.3" y="1877" width="0.4" height="15.0" fill="rgb(233,170,48)" rx="2" ry="2" />
<text  x="159.34" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="901" width="0.2" height="15.0" fill="rgb(205,10,21)" rx="2" ry="2" />
<text  x="131.07" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="565" width="0.2" height="15.0" fill="rgb(246,171,0)" rx="2" ry="2" />
<text  x="131.07" y="575.5" ></text>
</g>
<g >
<title>memcpy@plt (5 samples, 0.08%)</title><rect x="1121.8" y="2053" width="0.9" height="15.0" fill="rgb(205,18,38)" rx="2" ry="2" />
<text  x="1124.76" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1237" width="0.1" height="15.0" fill="rgb(208,169,47)" rx="2" ry="2" />
<text  x="204.15" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1653" width="0.5" height="15.0" fill="rgb(231,62,13)" rx="2" ry="2" />
<text  x="75.66" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="181" width="0.2" height="15.0" fill="rgb(239,203,5)" rx="2" ry="2" />
<text  x="204.34" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1301" width="0.2" height="15.0" fill="rgb(241,130,6)" rx="2" ry="2" />
<text  x="160.08" y="1311.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.08%)</title><rect x="71.2" y="2005" width="0.9" height="15.0" fill="rgb(230,188,34)" rx="2" ry="2" />
<text  x="74.18" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="2005" width="0.2" height="15.0" fill="rgb(211,176,1)" rx="2" ry="2" />
<text  x="1170.50" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (27 samples, 0.43%)</title><rect x="107.2" y="1701" width="5.1" height="15.0" fill="rgb(218,208,34)" rx="2" ry="2" />
<text  x="110.25" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="357" width="0.2" height="15.0" fill="rgb(251,184,28)" rx="2" ry="2" />
<text  x="204.71" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="594.4" y="1797" width="0.2" height="15.0" fill="rgb(234,168,28)" rx="2" ry="2" />
<text  x="597.42" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (4 samples, 0.06%)</title><rect x="180.1" y="1621" width="0.8" height="15.0" fill="rgb(241,144,43)" rx="2" ry="2" />
<text  x="183.14" y="1631.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1589" width="0.2" height="15.0" fill="rgb(235,69,45)" rx="2" ry="2" />
<text  x="75.48" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1173" width="0.2" height="15.0" fill="rgb(221,93,33)" rx="2" ry="2" />
<text  x="160.08" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="789" width="0.2" height="15.0" fill="rgb(246,159,20)" rx="2" ry="2" />
<text  x="204.34" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="357" width="0.2" height="15.0" fill="rgb(206,4,15)" rx="2" ry="2" />
<text  x="1170.31" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="501" width="0.2" height="15.0" fill="rgb(229,211,29)" rx="2" ry="2" />
<text  x="131.07" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="293" width="0.5" height="15.0" fill="rgb(244,187,13)" rx="2" ry="2" />
<text  x="1170.87" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="741" width="0.2" height="15.0" fill="rgb(236,100,35)" rx="2" ry="2" />
<text  x="130.52" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1189" width="0.2" height="15.0" fill="rgb(214,195,15)" rx="2" ry="2" />
<text  x="160.27" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.2" y="1573" width="0.3" height="15.0" fill="rgb(215,149,8)" rx="2" ry="2" />
<text  x="204.15" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1173" width="0.1" height="15.0" fill="rgb(214,99,50)" rx="2" ry="2" />
<text  x="160.45" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1333" width="0.1" height="15.0" fill="rgb(237,72,42)" rx="2" ry="2" />
<text  x="204.15" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="405" width="0.2" height="15.0" fill="rgb(207,46,3)" rx="2" ry="2" />
<text  x="1170.50" y="415.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1119.5" y="2021" width="0.2" height="15.0" fill="rgb(238,223,39)" rx="2" ry="2" />
<text  x="1122.53" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.32%)</title><rect x="874.8" y="2021" width="3.7" height="15.0" fill="rgb(213,215,28)" rx="2" ry="2" />
<text  x="877.83" y="2031.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="595.7" y="2021" width="0.2" height="15.0" fill="rgb(221,94,0)" rx="2" ry="2" />
<text  x="598.72" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1717" width="0.5" height="15.0" fill="rgb(224,28,51)" rx="2" ry="2" />
<text  x="1170.87" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="437" width="0.2" height="15.0" fill="rgb(244,147,33)" rx="2" ry="2" />
<text  x="204.89" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="127.1" y="1813" width="1.2" height="15.0" fill="rgb(238,30,13)" rx="2" ry="2" />
<text  x="130.14" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="128.3" y="1925" width="0.1" height="15.0" fill="rgb(246,55,39)" rx="2" ry="2" />
<text  x="131.26" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1173" width="0.2" height="15.0" fill="rgb(219,25,13)" rx="2" ry="2" />
<text  x="1170.69" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="821" width="0.4" height="15.0" fill="rgb(230,112,42)" rx="2" ry="2" />
<text  x="75.85" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="597" width="0.2" height="15.0" fill="rgb(208,22,37)" rx="2" ry="2" />
<text  x="131.07" y="607.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="101" width="0.4" height="15.0" fill="rgb(208,224,54)" rx="2" ry="2" />
<text  x="75.85" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="245" width="0.2" height="15.0" fill="rgb(242,167,26)" rx="2" ry="2" />
<text  x="1170.31" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (37 samples, 0.58%)</title><rect x="184.0" y="1749" width="6.9" height="15.0" fill="rgb(226,229,47)" rx="2" ry="2" />
<text  x="187.04" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="517" width="0.2" height="15.0" fill="rgb(231,96,43)" rx="2" ry="2" />
<text  x="131.07" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="201.0" y="1781" width="1.1" height="15.0" fill="rgb(252,55,31)" rx="2" ry="2" />
<text  x="203.96" y="1791.5" ></text>
</g>
<g >
<title>pte_alloc_one (1 samples, 0.02%)</title><rect x="862.2" y="1925" width="0.2" height="15.0" fill="rgb(246,68,13)" rx="2" ry="2" />
<text  x="865.18" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1045" width="0.1" height="15.0" fill="rgb(214,84,18)" rx="2" ry="2" />
<text  x="160.45" y="1055.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (1 samples, 0.02%)</title><rect x="598.5" y="1957" width="0.2" height="15.0" fill="rgb(244,59,39)" rx="2" ry="2" />
<text  x="601.51" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1317" width="0.2" height="15.0" fill="rgb(232,22,4)" rx="2" ry="2" />
<text  x="130.52" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="709" width="0.5" height="15.0" fill="rgb(245,10,5)" rx="2" ry="2" />
<text  x="1170.87" y="719.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1,373 samples, 21.64%)</title><rect x="600.9" y="1925" width="255.3" height="15.0" fill="rgb(246,21,16)" rx="2" ry="2" />
<text  x="603.93" y="1935.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="147.2" y="1653" width="0.4" height="15.0" fill="rgb(238,7,41)" rx="2" ry="2" />
<text  x="150.23" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1333" width="0.5" height="15.0" fill="rgb(249,215,39)" rx="2" ry="2" />
<text  x="75.66" y="1343.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="159.3" y="1973" width="0.2" height="15.0" fill="rgb(251,42,40)" rx="2" ry="2" />
<text  x="162.31" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="869" width="0.2" height="15.0" fill="rgb(241,60,33)" rx="2" ry="2" />
<text  x="1170.69" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="202.5" y="1973" width="0.1" height="15.0" fill="rgb(206,135,38)" rx="2" ry="2" />
<text  x="205.45" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (28 samples, 0.44%)</title><rect x="329.8" y="1989" width="5.2" height="15.0" fill="rgb(240,96,13)" rx="2" ry="2" />
<text  x="332.82" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="581" width="0.2" height="15.0" fill="rgb(213,109,30)" rx="2" ry="2" />
<text  x="130.52" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.2" y="1701" width="0.3" height="15.0" fill="rgb(209,34,19)" rx="2" ry="2" />
<text  x="204.15" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="421" width="0.4" height="15.0" fill="rgb(235,146,47)" rx="2" ry="2" />
<text  x="75.85" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (2 samples, 0.03%)</title><rect x="156.3" y="1861" width="0.4" height="15.0" fill="rgb(237,225,37)" rx="2" ry="2" />
<text  x="159.34" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="85" width="0.5" height="15.0" fill="rgb(216,118,5)" rx="2" ry="2" />
<text  x="1170.87" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="293" width="0.2" height="15.0" fill="rgb(228,195,8)" rx="2" ry="2" />
<text  x="204.89" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="677" width="0.2" height="15.0" fill="rgb(240,65,20)" rx="2" ry="2" />
<text  x="1170.31" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream (1 samples, 0.02%)</title><rect x="888.0" y="2005" width="0.2" height="15.0" fill="rgb(249,41,50)" rx="2" ry="2" />
<text  x="891.03" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1077" width="0.2" height="15.0" fill="rgb(253,124,22)" rx="2" ry="2" />
<text  x="1170.50" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1413" width="0.2" height="15.0" fill="rgb(224,59,28)" rx="2" ry="2" />
<text  x="160.27" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="157.1" y="1797" width="0.5" height="15.0" fill="rgb(205,111,30)" rx="2" ry="2" />
<text  x="160.08" y="1807.5" ></text>
</g>
<g >
<title>Annotate (90 samples, 1.42%)</title><rect x="79.5" y="2005" width="16.8" height="15.0" fill="rgb(221,60,21)" rx="2" ry="2" />
<text  x="82.54" y="2015.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.08%)</title><rect x="71.2" y="1989" width="0.9" height="15.0" fill="rgb(216,47,5)" rx="2" ry="2" />
<text  x="74.18" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="593.5" y="1797" width="0.2" height="15.0" fill="rgb(249,112,40)" rx="2" ry="2" />
<text  x="596.49" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="156.9" y="1845" width="0.7" height="15.0" fill="rgb(228,111,34)" rx="2" ry="2" />
<text  x="159.90" y="1855.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="159.7" y="1941" width="0.2" height="15.0" fill="rgb(245,89,52)" rx="2" ry="2" />
<text  x="162.68" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.06%)</title><rect x="888.4" y="2021" width="0.7" height="15.0" fill="rgb(234,196,44)" rx="2" ry="2" />
<text  x="891.40" y="2031.5" ></text>
</g>
<g >
<title>copy_page_to_iter (5 samples, 0.08%)</title><rect x="78.2" y="1877" width="1.0" height="15.0" fill="rgb(213,221,54)" rx="2" ry="2" />
<text  x="81.24" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="773" width="0.2" height="15.0" fill="rgb(210,223,34)" rx="2" ry="2" />
<text  x="131.07" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="180.9" y="1621" width="0.5" height="15.0" fill="rgb(248,69,2)" rx="2" ry="2" />
<text  x="183.88" y="1631.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="111.9" y="1637" width="0.4" height="15.0" fill="rgb(216,102,30)" rx="2" ry="2" />
<text  x="114.90" y="1647.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="862.2" y="1957" width="0.2" height="15.0" fill="rgb(237,14,7)" rx="2" ry="2" />
<text  x="865.18" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1285" width="0.2" height="15.0" fill="rgb(207,177,50)" rx="2" ry="2" />
<text  x="160.08" y="1295.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="597.2" y="1957" width="0.2" height="15.0" fill="rgb(208,156,12)" rx="2" ry="2" />
<text  x="600.21" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.7" y="1493" width="0.4" height="15.0" fill="rgb(245,65,20)" rx="2" ry="2" />
<text  x="204.71" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1749" width="0.5" height="15.0" fill="rgb(241,1,24)" rx="2" ry="2" />
<text  x="75.66" y="1759.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (1 samples, 0.02%)</title><rect x="1188.7" y="2053" width="0.2" height="15.0" fill="rgb(239,10,17)" rx="2" ry="2" />
<text  x="1191.70" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="201.0" y="1925" width="1.1" height="15.0" fill="rgb(236,171,5)" rx="2" ry="2" />
<text  x="203.96" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (46 samples, 0.72%)</title><rect x="425.0" y="1941" width="8.6" height="15.0" fill="rgb(238,63,19)" rx="2" ry="2" />
<text  x="428.03" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="200.4" y="1893" width="0.4" height="15.0" fill="rgb(241,173,10)" rx="2" ry="2" />
<text  x="203.41" y="1903.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.09%)</title><rect x="150.9" y="1685" width="1.2" height="15.0" fill="rgb(207,31,35)" rx="2" ry="2" />
<text  x="153.95" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1461" width="0.2" height="15.0" fill="rgb(246,20,5)" rx="2" ry="2" />
<text  x="204.34" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (149 samples, 2.35%)</title><rect x="128.6" y="1829" width="27.7" height="15.0" fill="rgb(215,126,34)" rx="2" ry="2" />
<text  x="131.63" y="1839.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="157.1" y="1701" width="0.5" height="15.0" fill="rgb(209,168,15)" rx="2" ry="2" />
<text  x="160.08" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="293" width="0.2" height="15.0" fill="rgb(250,216,54)" rx="2" ry="2" />
<text  x="1170.31" y="303.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="71.7" y="1941" width="0.2" height="15.0" fill="rgb(249,144,33)" rx="2" ry="2" />
<text  x="74.73" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="156.3" y="1845" width="0.4" height="15.0" fill="rgb(222,78,37)" rx="2" ry="2" />
<text  x="159.34" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1189" width="0.2" height="15.0" fill="rgb(227,77,20)" rx="2" ry="2" />
<text  x="130.52" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="126.2" y="1829" width="0.2" height="15.0" fill="rgb(244,85,44)" rx="2" ry="2" />
<text  x="129.21" y="1839.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="862.0" y="1989" width="0.4" height="15.0" fill="rgb(218,184,40)" rx="2" ry="2" />
<text  x="864.99" y="1999.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.08%)</title><rect x="71.2" y="2021" width="0.9" height="15.0" fill="rgb(245,11,29)" rx="2" ry="2" />
<text  x="74.18" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="597" width="0.2" height="15.0" fill="rgb(217,226,38)" rx="2" ry="2" />
<text  x="1170.31" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="709" width="0.2" height="15.0" fill="rgb(234,127,11)" rx="2" ry="2" />
<text  x="204.34" y="719.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::initNgrams (1 samples, 0.02%)</title><rect x="859.0" y="2037" width="0.2" height="15.0" fill="rgb(237,170,7)" rx="2" ry="2" />
<text  x="862.02" y="2047.5" ></text>
</g>
<g >
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="79.2" y="1861" width="0.2" height="15.0" fill="rgb(223,96,11)" rx="2" ry="2" />
<text  x="82.17" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1429" width="0.5" height="15.0" fill="rgb(252,191,26)" rx="2" ry="2" />
<text  x="75.66" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="325" width="0.2" height="15.0" fill="rgb(240,95,33)" rx="2" ry="2" />
<text  x="1170.31" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1765" width="0.5" height="15.0" fill="rgb(223,157,15)" rx="2" ry="2" />
<text  x="1170.87" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="95.5" y="1957" width="0.6" height="15.0" fill="rgb(221,47,40)" rx="2" ry="2" />
<text  x="98.53" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1877" width="0.2" height="15.0" fill="rgb(208,153,17)" rx="2" ry="2" />
<text  x="1170.69" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1285" width="0.2" height="15.0" fill="rgb(244,112,7)" rx="2" ry="2" />
<text  x="1170.50" y="1295.5" ></text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.02%)</title><rect x="35.7" y="1909" width="0.1" height="15.0" fill="rgb(252,19,47)" rx="2" ry="2" />
<text  x="38.66" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="127.7" y="1749" width="0.6" height="15.0" fill="rgb(213,132,20)" rx="2" ry="2" />
<text  x="130.70" y="1759.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::PlainObjectBase&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="159.3" y="1989" width="0.2" height="15.0" fill="rgb(226,199,46)" rx="2" ry="2" />
<text  x="162.31" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="229" width="0.2" height="15.0" fill="rgb(250,141,52)" rx="2" ry="2" />
<text  x="1170.50" y="239.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="1051.1" y="2005" width="0.4" height="15.0" fill="rgb(250,67,19)" rx="2" ry="2" />
<text  x="1054.10" y="2015.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="719.4" y="1797" width="0.2" height="15.0" fill="rgb(215,196,53)" rx="2" ry="2" />
<text  x="722.38" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1541" width="0.2" height="15.0" fill="rgb(210,220,21)" rx="2" ry="2" />
<text  x="1170.50" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.7" y="1429" width="0.4" height="15.0" fill="rgb(231,182,3)" rx="2" ry="2" />
<text  x="204.71" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="997" width="0.5" height="15.0" fill="rgb(216,3,27)" rx="2" ry="2" />
<text  x="75.66" y="1007.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="192.8" y="1701" width="0.2" height="15.0" fill="rgb(241,113,30)" rx="2" ry="2" />
<text  x="195.78" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="117" width="0.2" height="15.0" fill="rgb(229,132,35)" rx="2" ry="2" />
<text  x="1170.69" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="213" width="0.2" height="15.0" fill="rgb(226,102,9)" rx="2" ry="2" />
<text  x="1170.69" y="223.5" ></text>
</g>
<g >
<title>__libc_read (6 samples, 0.09%)</title><rect x="78.2" y="2037" width="1.2" height="15.0" fill="rgb(216,143,29)" rx="2" ry="2" />
<text  x="81.24" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1253" width="0.5" height="15.0" fill="rgb(253,98,8)" rx="2" ry="2" />
<text  x="75.66" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1845" width="0.2" height="15.0" fill="rgb(236,181,49)" rx="2" ry="2" />
<text  x="1170.31" y="1855.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (1 samples, 0.02%)</title><rect x="159.3" y="1941" width="0.2" height="15.0" fill="rgb(242,93,0)" rx="2" ry="2" />
<text  x="162.31" y="1951.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="80.7" y="1893" width="0.1" height="15.0" fill="rgb(222,68,50)" rx="2" ry="2" />
<text  x="83.66" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (28 samples, 0.44%)</title><rect x="129.2" y="1669" width="5.2" height="15.0" fill="rgb(223,63,28)" rx="2" ry="2" />
<text  x="132.19" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (5 samples, 0.08%)</title><rect x="568.4" y="1973" width="0.9" height="15.0" fill="rgb(217,208,10)" rx="2" ry="2" />
<text  x="571.39" y="1983.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.02%)</title><rect x="95.0" y="1989" width="0.2" height="15.0" fill="rgb(211,205,47)" rx="2" ry="2" />
<text  x="97.98" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="485" width="0.2" height="15.0" fill="rgb(206,164,43)" rx="2" ry="2" />
<text  x="204.89" y="495.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1605" width="0.5" height="15.0" fill="rgb(249,131,22)" rx="2" ry="2" />
<text  x="75.66" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="405" width="0.2" height="15.0" fill="rgb(227,141,21)" rx="2" ry="2" />
<text  x="1170.69" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (1 samples, 0.02%)</title><rect x="95.2" y="1973" width="0.1" height="15.0" fill="rgb(250,90,4)" rx="2" ry="2" />
<text  x="98.16" y="1983.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (4 samples, 0.06%)</title><rect x="770.9" y="1893" width="0.7" height="15.0" fill="rgb(220,180,53)" rx="2" ry="2" />
<text  x="773.88" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (15 samples, 0.24%)</title><rect x="881.5" y="1973" width="2.8" height="15.0" fill="rgb(211,117,2)" rx="2" ry="2" />
<text  x="884.52" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1061" width="0.2" height="15.0" fill="rgb(216,33,3)" rx="2" ry="2" />
<text  x="1170.31" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="917" width="0.2" height="15.0" fill="rgb(231,136,49)" rx="2" ry="2" />
<text  x="160.08" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="309" width="0.2" height="15.0" fill="rgb(225,176,28)" rx="2" ry="2" />
<text  x="204.71" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1861" width="0.5" height="15.0" fill="rgb(246,180,19)" rx="2" ry="2" />
<text  x="1170.87" y="1871.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="175.7" y="1733" width="0.2" height="15.0" fill="rgb(244,116,22)" rx="2" ry="2" />
<text  x="178.68" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="156.3" y="1749" width="0.2" height="15.0" fill="rgb(225,67,14)" rx="2" ry="2" />
<text  x="159.34" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1301" width="0.5" height="15.0" fill="rgb(246,19,34)" rx="2" ry="2" />
<text  x="1170.87" y="1311.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="198.7" y="1701" width="0.2" height="15.0" fill="rgb(234,187,48)" rx="2" ry="2" />
<text  x="201.73" y="1711.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="200.4" y="1765" width="0.2" height="15.0" fill="rgb(247,204,50)" rx="2" ry="2" />
<text  x="203.41" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="319.6" y="1925" width="0.4" height="15.0" fill="rgb(250,103,39)" rx="2" ry="2" />
<text  x="322.60" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1829" width="0.2" height="15.0" fill="rgb(237,39,15)" rx="2" ry="2" />
<text  x="1170.31" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="126.4" y="1893" width="0.4" height="15.0" fill="rgb(218,40,39)" rx="2" ry="2" />
<text  x="129.40" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="144.4" y="1605" width="0.2" height="15.0" fill="rgb(216,101,51)" rx="2" ry="2" />
<text  x="147.44" y="1615.5" ></text>
</g>
<g >
<title>main (2,776 samples, 43.74%)</title><rect x="79.5" y="2021" width="516.2" height="15.0" fill="rgb(249,34,22)" rx="2" ry="2" />
<text  x="82.54" y="2031.5" >main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="201.0" y="1877" width="1.1" height="15.0" fill="rgb(223,207,17)" rx="2" ry="2" />
<text  x="203.96" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="693" width="0.2" height="15.0" fill="rgb(242,47,6)" rx="2" ry="2" />
<text  x="1170.69" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1167.3" y="2037" width="0.4" height="15.0" fill="rgb(207,23,28)" rx="2" ry="2" />
<text  x="1170.31" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.52%)</title><rect x="140.5" y="1749" width="6.2" height="15.0" fill="rgb(217,176,13)" rx="2" ry="2" />
<text  x="143.53" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="725" width="0.2" height="15.0" fill="rgb(236,87,6)" rx="2" ry="2" />
<text  x="1170.69" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="127.7" y="1701" width="0.6" height="15.0" fill="rgb(236,31,52)" rx="2" ry="2" />
<text  x="130.70" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="168.8" y="1637" width="0.2" height="15.0" fill="rgb(246,21,51)" rx="2" ry="2" />
<text  x="171.80" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="453" width="0.2" height="15.0" fill="rgb(248,57,11)" rx="2" ry="2" />
<text  x="204.34" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1365" width="0.2" height="15.0" fill="rgb(237,93,27)" rx="2" ry="2" />
<text  x="1170.31" y="1375.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="131.2" y="1573" width="0.2" height="15.0" fill="rgb(231,205,46)" rx="2" ry="2" />
<text  x="134.24" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="69" width="0.2" height="15.0" fill="rgb(207,169,1)" rx="2" ry="2" />
<text  x="1170.50" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.7" y="1413" width="0.4" height="15.0" fill="rgb(208,134,19)" rx="2" ry="2" />
<text  x="204.71" y="1423.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::has_features (1 samples, 0.02%)</title><rect x="601.9" y="1909" width="0.1" height="15.0" fill="rgb(221,38,0)" rx="2" ry="2" />
<text  x="604.86" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="1045" width="0.2" height="15.0" fill="rgb(251,221,53)" rx="2" ry="2" />
<text  x="204.89" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (49 samples, 0.77%)</title><rect x="840.8" y="1893" width="9.1" height="15.0" fill="rgb(235,174,23)" rx="2" ry="2" />
<text  x="843.80" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="853" width="0.5" height="15.0" fill="rgb(222,217,5)" rx="2" ry="2" />
<text  x="1170.87" y="863.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1749" width="0.2" height="15.0" fill="rgb(211,55,42)" rx="2" ry="2" />
<text  x="75.48" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="821" width="0.2" height="15.0" fill="rgb(226,156,50)" rx="2" ry="2" />
<text  x="1170.31" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (35 samples, 0.55%)</title><rect x="168.6" y="1669" width="6.5" height="15.0" fill="rgb(205,58,5)" rx="2" ry="2" />
<text  x="171.61" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (35 samples, 0.55%)</title><rect x="184.4" y="1685" width="6.5" height="15.0" fill="rgb(219,98,47)" rx="2" ry="2" />
<text  x="187.42" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1541" width="0.5" height="15.0" fill="rgb(254,78,5)" rx="2" ry="2" />
<text  x="75.66" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1221" width="0.1" height="15.0" fill="rgb(251,155,42)" rx="2" ry="2" />
<text  x="160.45" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1093" width="0.2" height="15.0" fill="rgb(207,191,22)" rx="2" ry="2" />
<text  x="1170.50" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="197" width="0.2" height="15.0" fill="rgb(211,157,10)" rx="2" ry="2" />
<text  x="204.89" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1477" width="0.2" height="15.0" fill="rgb(226,62,34)" rx="2" ry="2" />
<text  x="1170.50" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="325" width="0.4" height="15.0" fill="rgb(208,77,46)" rx="2" ry="2" />
<text  x="75.85" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="373" width="0.5" height="15.0" fill="rgb(246,160,33)" rx="2" ry="2" />
<text  x="1170.87" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="389" width="0.2" height="15.0" fill="rgb(226,141,30)" rx="2" ry="2" />
<text  x="204.34" y="399.5" ></text>
</g>
<g >
<title>ksys_read (4 samples, 0.06%)</title><rect x="910.5" y="1989" width="0.8" height="15.0" fill="rgb(215,128,50)" rx="2" ry="2" />
<text  x="913.53" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="981" width="0.2" height="15.0" fill="rgb(240,95,34)" rx="2" ry="2" />
<text  x="160.08" y="991.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="319.6" y="1957" width="0.4" height="15.0" fill="rgb(218,33,4)" rx="2" ry="2" />
<text  x="322.60" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="165" width="0.2" height="15.0" fill="rgb(205,196,48)" rx="2" ry="2" />
<text  x="1170.69" y="175.5" ></text>
</g>
<g >
<title>clear_page_erms (9 samples, 0.14%)</title><rect x="719.9" y="1749" width="1.7" height="15.0" fill="rgb(218,135,42)" rx="2" ry="2" />
<text  x="722.93" y="1759.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (5 samples, 0.08%)</title><rect x="851.6" y="1893" width="0.9" height="15.0" fill="rgb(213,96,39)" rx="2" ry="2" />
<text  x="854.58" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="805" width="0.2" height="15.0" fill="rgb(242,43,53)" rx="2" ry="2" />
<text  x="131.07" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (43 samples, 0.68%)</title><rect x="160.6" y="1685" width="8.0" height="15.0" fill="rgb(224,202,30)" rx="2" ry="2" />
<text  x="163.61" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1333" width="0.2" height="15.0" fill="rgb(249,41,16)" rx="2" ry="2" />
<text  x="1170.31" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (29 samples, 0.46%)</title><rect x="150.8" y="1701" width="5.4" height="15.0" fill="rgb(206,131,17)" rx="2" ry="2" />
<text  x="153.76" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (28 samples, 0.44%)</title><rect x="112.6" y="1765" width="5.2" height="15.0" fill="rgb(241,133,33)" rx="2" ry="2" />
<text  x="115.64" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (12 samples, 0.19%)</title><rect x="172.0" y="1621" width="2.2" height="15.0" fill="rgb(219,215,15)" rx="2" ry="2" />
<text  x="174.96" y="1631.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="144.6" y="1605" width="0.6" height="15.0" fill="rgb(208,109,50)" rx="2" ry="2" />
<text  x="147.62" y="1615.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="178.7" y="1637" width="0.1" height="15.0" fill="rgb(238,215,11)" rx="2" ry="2" />
<text  x="181.65" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="741" width="0.2" height="15.0" fill="rgb(216,110,35)" rx="2" ry="2" />
<text  x="1170.31" y="751.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="116.7" y="1653" width="0.4" height="15.0" fill="rgb(210,53,10)" rx="2" ry="2" />
<text  x="119.73" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1221" width="0.2" height="15.0" fill="rgb(217,200,44)" rx="2" ry="2" />
<text  x="204.34" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.05%)</title><rect x="160.1" y="1685" width="0.5" height="15.0" fill="rgb(228,140,4)" rx="2" ry="2" />
<text  x="163.06" y="1695.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="432.8" y="1861" width="0.2" height="15.0" fill="rgb(222,165,32)" rx="2" ry="2" />
<text  x="435.84" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="101" width="0.2" height="15.0" fill="rgb(250,59,53)" rx="2" ry="2" />
<text  x="1170.69" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="469" width="0.2" height="15.0" fill="rgb(205,123,33)" rx="2" ry="2" />
<text  x="204.89" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="127.1" y="1797" width="1.2" height="15.0" fill="rgb(247,18,4)" rx="2" ry="2" />
<text  x="130.14" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.11%)</title><rect x="127.0" y="1941" width="1.3" height="15.0" fill="rgb(236,219,50)" rx="2" ry="2" />
<text  x="129.96" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (216 samples, 3.40%)</title><rect x="160.1" y="1861" width="40.1" height="15.0" fill="rgb(223,168,36)" rx="2" ry="2" />
<text  x="163.06" y="1871.5" >std..</text>
</g>
<g >
<title>touch_atime (1 samples, 0.02%)</title><rect x="79.2" y="1877" width="0.2" height="15.0" fill="rgb(207,166,2)" rx="2" ry="2" />
<text  x="82.17" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="325" width="0.2" height="15.0" fill="rgb(235,34,0)" rx="2" ry="2" />
<text  x="204.89" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1317" width="0.2" height="15.0" fill="rgb(214,218,8)" rx="2" ry="2" />
<text  x="204.34" y="1327.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1941" width="0.2" height="15.0" fill="rgb(232,138,15)" rx="2" ry="2" />
<text  x="75.48" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1909" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="75.66" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="357" width="0.2" height="15.0" fill="rgb(207,193,28)" rx="2" ry="2" />
<text  x="204.34" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="373" width="0.2" height="15.0" fill="rgb(251,126,45)" rx="2" ry="2" />
<text  x="1170.50" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1365" width="0.4" height="15.0" fill="rgb(232,71,18)" rx="2" ry="2" />
<text  x="130.89" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="581" width="0.2" height="15.0" fill="rgb(254,81,42)" rx="2" ry="2" />
<text  x="1170.31" y="591.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append@plt (1 samples, 0.02%)</title><rect x="622.9" y="1893" width="0.2" height="15.0" fill="rgb(240,51,4)" rx="2" ry="2" />
<text  x="625.87" y="1903.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="197.2" y="1685" width="0.6" height="15.0" fill="rgb(234,8,1)" rx="2" ry="2" />
<text  x="200.25" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1717" width="0.2" height="15.0" fill="rgb(231,215,50)" rx="2" ry="2" />
<text  x="1170.69" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="156.3" y="1829" width="0.4" height="15.0" fill="rgb(248,25,33)" rx="2" ry="2" />
<text  x="159.34" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="837" width="0.2" height="15.0" fill="rgb(209,173,30)" rx="2" ry="2" />
<text  x="1170.50" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="453" width="0.2" height="15.0" fill="rgb(215,70,16)" rx="2" ry="2" />
<text  x="1170.50" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="156.5" y="1781" width="0.2" height="15.0" fill="rgb(218,136,0)" rx="2" ry="2" />
<text  x="159.52" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;onmt::AnnotatedToken, std::allocator&lt;onmt::AnnotatedToken&gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="852.7" y="1893" width="0.2" height="15.0" fill="rgb(223,122,13)" rx="2" ry="2" />
<text  x="855.70" y="1903.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="592.2" y="1861" width="0.2" height="15.0" fill="rgb(212,206,26)" rx="2" ry="2" />
<text  x="595.19" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (20 samples, 0.32%)</title><rect x="103.5" y="1621" width="3.7" height="15.0" fill="rgb(250,101,14)" rx="2" ry="2" />
<text  x="106.53" y="1631.5" ></text>
</g>
<g >
<title>std::istream::peek (1 samples, 0.02%)</title><rect x="598.7" y="1957" width="0.2" height="15.0" fill="rgb(208,171,19)" rx="2" ry="2" />
<text  x="601.70" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="837" width="0.2" height="15.0" fill="rgb(223,166,44)" rx="2" ry="2" />
<text  x="1170.69" y="847.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1957" width="0.2" height="15.0" fill="rgb(252,100,39)" rx="2" ry="2" />
<text  x="75.48" y="1967.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.7" y="869" width="0.1" height="15.0" fill="rgb(231,185,27)" rx="2" ry="2" />
<text  x="75.66" y="879.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="335.0" y="1989" width="0.2" height="15.0" fill="rgb(223,85,7)" rx="2" ry="2" />
<text  x="338.03" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="837" width="0.2" height="15.0" fill="rgb(238,126,39)" rx="2" ry="2" />
<text  x="204.34" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="933" width="0.2" height="15.0" fill="rgb(250,150,31)" rx="2" ry="2" />
<text  x="160.08" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="165" width="0.2" height="15.0" fill="rgb(212,140,32)" rx="2" ry="2" />
<text  x="1170.31" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="201.5" y="1685" width="0.6" height="15.0" fill="rgb(241,117,49)" rx="2" ry="2" />
<text  x="204.52" y="1695.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::at (2 samples, 0.03%)</title><rect x="79.9" y="1957" width="0.4" height="15.0" fill="rgb(226,71,54)" rx="2" ry="2" />
<text  x="82.91" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (2 samples, 0.03%)</title><rect x="150.4" y="1701" width="0.4" height="15.0" fill="rgb(232,150,48)" rx="2" ry="2" />
<text  x="153.39" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1621" width="0.5" height="15.0" fill="rgb(251,92,41)" rx="2" ry="2" />
<text  x="75.66" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="517" width="0.2" height="15.0" fill="rgb(251,94,23)" rx="2" ry="2" />
<text  x="1170.50" y="527.5" ></text>
</g>
<g >
<title>__strxfrm_l (44 samples, 0.69%)</title><rect x="1159.1" y="2037" width="8.2" height="15.0" fill="rgb(216,83,29)" rx="2" ry="2" />
<text  x="1162.13" y="2047.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (1 samples, 0.02%)</title><rect x="159.7" y="1957" width="0.2" height="15.0" fill="rgb(215,178,2)" rx="2" ry="2" />
<text  x="162.68" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.57%)</title><rect x="184.2" y="1733" width="6.7" height="15.0" fill="rgb(247,37,30)" rx="2" ry="2" />
<text  x="187.23" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="757" width="0.2" height="15.0" fill="rgb(218,100,51)" rx="2" ry="2" />
<text  x="1170.69" y="767.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="645" width="0.4" height="15.0" fill="rgb(205,97,14)" rx="2" ry="2" />
<text  x="75.85" y="655.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="148.9" y="1637" width="0.4" height="15.0" fill="rgb(231,153,43)" rx="2" ry="2" />
<text  x="151.90" y="1647.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="183.3" y="1637" width="0.2" height="15.0" fill="rgb(230,19,3)" rx="2" ry="2" />
<text  x="186.30" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1413" width="0.2" height="15.0" fill="rgb(232,35,1)" rx="2" ry="2" />
<text  x="204.34" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (5 samples, 0.08%)</title><rect x="872.8" y="2037" width="0.9" height="15.0" fill="rgb(210,83,1)" rx="2" ry="2" />
<text  x="875.78" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="405" width="0.2" height="15.0" fill="rgb(215,179,43)" rx="2" ry="2" />
<text  x="204.34" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1557" width="0.2" height="15.0" fill="rgb(207,71,4)" rx="2" ry="2" />
<text  x="160.08" y="1567.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="589.8" y="1973" width="0.2" height="15.0" fill="rgb(205,163,21)" rx="2" ry="2" />
<text  x="592.77" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="693" width="0.2" height="15.0" fill="rgb(235,145,18)" rx="2" ry="2" />
<text  x="1170.31" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="821" width="0.2" height="15.0" fill="rgb(244,107,51)" rx="2" ry="2" />
<text  x="204.89" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="133" width="0.2" height="15.0" fill="rgb(219,6,53)" rx="2" ry="2" />
<text  x="1170.69" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="156.5" y="1765" width="0.2" height="15.0" fill="rgb(253,0,28)" rx="2" ry="2" />
<text  x="159.52" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="719.4" y="1733" width="0.2" height="15.0" fill="rgb(205,75,31)" rx="2" ry="2" />
<text  x="722.38" y="1743.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (543 samples, 8.56%)</title><rect x="219.0" y="1989" width="101.0" height="15.0" fill="rgb(224,157,52)" rx="2" ry="2" />
<text  x="222.00" y="1999.5" >fasttext::De..</text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (71 samples, 1.12%)</title><rect x="81.8" y="1957" width="13.2" height="15.0" fill="rgb(222,0,9)" rx="2" ry="2" />
<text  x="84.77" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (6 samples, 0.09%)</title><rect x="1145.9" y="2053" width="1.1" height="15.0" fill="rgb(247,53,32)" rx="2" ry="2" />
<text  x="1148.93" y="2063.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1781" width="0.2" height="15.0" fill="rgb(209,10,30)" rx="2" ry="2" />
<text  x="75.48" y="1791.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.08%)</title><rect x="599.3" y="1941" width="0.9" height="15.0" fill="rgb(240,51,38)" rx="2" ry="2" />
<text  x="602.26" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="853" width="0.2" height="15.0" fill="rgb(211,32,50)" rx="2" ry="2" />
<text  x="131.07" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="661" width="0.2" height="15.0" fill="rgb(235,20,47)" rx="2" ry="2" />
<text  x="204.71" y="671.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="171.2" y="1621" width="0.4" height="15.0" fill="rgb(244,173,9)" rx="2" ry="2" />
<text  x="174.21" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="183.7" y="1653" width="0.2" height="15.0" fill="rgb(236,66,5)" rx="2" ry="2" />
<text  x="186.67" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1189" width="0.5" height="15.0" fill="rgb(214,19,13)" rx="2" ry="2" />
<text  x="1170.87" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1301" width="0.2" height="15.0" fill="rgb(246,74,42)" rx="2" ry="2" />
<text  x="130.52" y="1311.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="105.0" y="1605" width="0.4" height="15.0" fill="rgb(216,66,30)" rx="2" ry="2" />
<text  x="108.02" y="1615.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="108.9" y="1637" width="0.4" height="15.0" fill="rgb(246,168,37)" rx="2" ry="2" />
<text  x="111.92" y="1647.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (25 samples, 0.39%)</title><rect x="67.6" y="2037" width="4.7" height="15.0" fill="rgb(240,134,6)" rx="2" ry="2" />
<text  x="70.64" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1381" width="0.2" height="15.0" fill="rgb(228,152,20)" rx="2" ry="2" />
<text  x="1170.50" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="997" width="0.4" height="15.0" fill="rgb(221,129,4)" rx="2" ry="2" />
<text  x="130.89" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1941" width="0.2" height="15.0" fill="rgb(214,220,13)" rx="2" ry="2" />
<text  x="1170.69" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1045" width="0.2" height="15.0" fill="rgb(237,85,13)" rx="2" ry="2" />
<text  x="130.52" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="693" width="0.2" height="15.0" fill="rgb(247,130,51)" rx="2" ry="2" />
<text  x="204.34" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="965" width="0.2" height="15.0" fill="rgb(211,79,34)" rx="2" ry="2" />
<text  x="1170.69" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="889.1" y="1989" width="0.2" height="15.0" fill="rgb(228,21,34)" rx="2" ry="2" />
<text  x="892.14" y="1999.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="133.7" y="1557" width="0.1" height="15.0" fill="rgb(239,8,18)" rx="2" ry="2" />
<text  x="136.65" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1029" width="0.4" height="15.0" fill="rgb(244,136,46)" rx="2" ry="2" />
<text  x="130.89" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1285" width="0.2" height="15.0" fill="rgb(217,145,22)" rx="2" ry="2" />
<text  x="130.52" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="453" width="0.2" height="15.0" fill="rgb(218,167,16)" rx="2" ry="2" />
<text  x="1170.31" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="1317" width="0.2" height="15.0" fill="rgb(220,187,50)" rx="2" ry="2" />
<text  x="204.71" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="933" width="0.2" height="15.0" fill="rgb(215,187,21)" rx="2" ry="2" />
<text  x="1170.31" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1557" width="0.2" height="15.0" fill="rgb(212,182,34)" rx="2" ry="2" />
<text  x="1170.31" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="709" width="0.2" height="15.0" fill="rgb(235,8,13)" rx="2" ry="2" />
<text  x="131.07" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="53" width="0.5" height="15.0" fill="rgb(250,98,49)" rx="2" ry="2" />
<text  x="1170.87" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1061" width="0.2" height="15.0" fill="rgb(247,227,13)" rx="2" ry="2" />
<text  x="130.52" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1189" width="0.4" height="15.0" fill="rgb(208,107,24)" rx="2" ry="2" />
<text  x="130.89" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="156.3" y="1765" width="0.2" height="15.0" fill="rgb(221,66,4)" rx="2" ry="2" />
<text  x="159.34" y="1775.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.03%)</title><rect x="592.0" y="1893" width="0.4" height="15.0" fill="rgb(237,208,10)" rx="2" ry="2" />
<text  x="595.00" y="1903.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="423.7" y="1813" width="0.2" height="15.0" fill="rgb(232,42,53)" rx="2" ry="2" />
<text  x="426.73" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="821" width="0.5" height="15.0" fill="rgb(240,207,9)" rx="2" ry="2" />
<text  x="1170.87" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="709" width="0.2" height="15.0" fill="rgb(249,82,51)" rx="2" ry="2" />
<text  x="1170.69" y="719.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="581" width="0.4" height="15.0" fill="rgb(221,42,42)" rx="2" ry="2" />
<text  x="75.85" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="127.1" y="1829" width="1.2" height="15.0" fill="rgb(220,103,16)" rx="2" ry="2" />
<text  x="130.14" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1477" width="0.2" height="15.0" fill="rgb(215,129,53)" rx="2" ry="2" />
<text  x="160.08" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.3" y="1333" width="0.2" height="15.0" fill="rgb(250,146,3)" rx="2" ry="2" />
<text  x="160.27" y="1343.5" ></text>
</g>
<g >
<title>__x64_sys_read (4 samples, 0.06%)</title><rect x="910.5" y="2005" width="0.8" height="15.0" fill="rgb(237,62,11)" rx="2" ry="2" />
<text  x="913.53" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.7" y="1397" width="0.4" height="15.0" fill="rgb(227,214,17)" rx="2" ry="2" />
<text  x="204.71" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="629" width="0.2" height="15.0" fill="rgb(217,216,29)" rx="2" ry="2" />
<text  x="1170.69" y="639.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="764.9" y="1829" width="0.4" height="15.0" fill="rgb(229,212,33)" rx="2" ry="2" />
<text  x="767.93" y="1839.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="450.3" y="1941" width="0.4" height="15.0" fill="rgb(237,101,12)" rx="2" ry="2" />
<text  x="453.32" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1365" width="0.2" height="15.0" fill="rgb(254,40,17)" rx="2" ry="2" />
<text  x="1170.50" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1973" width="0.5" height="15.0" fill="rgb(211,211,47)" rx="2" ry="2" />
<text  x="1170.87" y="1983.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="190.4" y="1669" width="0.2" height="15.0" fill="rgb(215,111,51)" rx="2" ry="2" />
<text  x="193.37" y="1679.5" ></text>
</g>
<g >
<title>std::istream::_M_extract&lt;long&gt; (1 samples, 0.02%)</title><rect x="175.3" y="1701" width="0.2" height="15.0" fill="rgb(214,166,32)" rx="2" ry="2" />
<text  x="178.30" y="1711.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="648.0" y="1861" width="0.5" height="15.0" fill="rgb(247,14,22)" rx="2" ry="2" />
<text  x="650.97" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1349" width="0.2" height="15.0" fill="rgb(230,2,7)" rx="2" ry="2" />
<text  x="160.27" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (6 samples, 0.09%)</title><rect x="201.0" y="1957" width="1.1" height="15.0" fill="rgb(233,63,29)" rx="2" ry="2" />
<text  x="203.96" y="1967.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (5 samples, 0.08%)</title><rect x="94.0" y="1909" width="1.0" height="15.0" fill="rgb(236,90,6)" rx="2" ry="2" />
<text  x="97.05" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1093" width="0.2" height="15.0" fill="rgb(224,171,45)" rx="2" ry="2" />
<text  x="160.08" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1125" width="0.2" height="15.0" fill="rgb(240,78,33)" rx="2" ry="2" />
<text  x="1170.31" y="1135.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (4 samples, 0.06%)</title><rect x="335.2" y="1989" width="0.8" height="15.0" fill="rgb(253,93,11)" rx="2" ry="2" />
<text  x="338.22" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (1 samples, 0.02%)</title><rect x="1133.5" y="2053" width="0.2" height="15.0" fill="rgb(253,88,43)" rx="2" ry="2" />
<text  x="1136.47" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (11 samples, 0.17%)</title><rect x="109.5" y="1637" width="2.0" height="15.0" fill="rgb(205,195,34)" rx="2" ry="2" />
<text  x="112.48" y="1647.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="126.0" y="1701" width="0.2" height="15.0" fill="rgb(244,129,17)" rx="2" ry="2" />
<text  x="129.03" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="645" width="0.2" height="15.0" fill="rgb(215,168,33)" rx="2" ry="2" />
<text  x="1170.31" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1685" width="0.2" height="15.0" fill="rgb(249,175,9)" rx="2" ry="2" />
<text  x="1170.50" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (167 samples, 2.63%)</title><rect x="160.1" y="1813" width="31.0" height="15.0" fill="rgb(223,116,15)" rx="2" ry="2" />
<text  x="163.06" y="1823.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1141" width="0.2" height="15.0" fill="rgb(244,223,23)" rx="2" ry="2" />
<text  x="1170.69" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="981" width="0.5" height="15.0" fill="rgb(224,206,18)" rx="2" ry="2" />
<text  x="75.66" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1509" width="0.1" height="15.0" fill="rgb(233,27,32)" rx="2" ry="2" />
<text  x="204.15" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.3" y="1573" width="0.4" height="15.0" fill="rgb(220,109,33)" rx="2" ry="2" />
<text  x="130.33" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1621" width="0.2" height="15.0" fill="rgb(226,137,24)" rx="2" ry="2" />
<text  x="1170.50" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="693" width="0.2" height="15.0" fill="rgb(229,224,12)" rx="2" ry="2" />
<text  x="130.52" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="126.4" y="1781" width="0.2" height="15.0" fill="rgb(220,149,15)" rx="2" ry="2" />
<text  x="129.40" y="1791.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="934.7" y="2037" width="0.2" height="15.0" fill="rgb(222,17,11)" rx="2" ry="2" />
<text  x="937.70" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (27 samples, 0.43%)</title><rect x="102.2" y="1685" width="5.0" height="15.0" fill="rgb(239,133,54)" rx="2" ry="2" />
<text  x="105.23" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (221 samples, 3.48%)</title><rect x="159.9" y="1941" width="41.1" height="15.0" fill="rgb(209,176,8)" rx="2" ry="2" />
<text  x="162.87" y="1951.5" >std..</text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1221" width="0.5" height="15.0" fill="rgb(254,92,5)" rx="2" ry="2" />
<text  x="75.66" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1493" width="0.2" height="15.0" fill="rgb(243,145,47)" rx="2" ry="2" />
<text  x="1170.31" y="1503.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_number (1 samples, 0.02%)</title><rect x="82.9" y="1941" width="0.2" height="15.0" fill="rgb(219,92,39)" rx="2" ry="2" />
<text  x="85.89" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (28 samples, 0.44%)</title><rect x="112.6" y="1733" width="5.2" height="15.0" fill="rgb(242,183,8)" rx="2" ry="2" />
<text  x="115.64" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="549" width="0.2" height="15.0" fill="rgb(254,22,29)" rx="2" ry="2" />
<text  x="130.52" y="559.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (32 samples, 0.50%)</title><rect x="85.7" y="1925" width="5.9" height="15.0" fill="rgb(249,189,7)" rx="2" ry="2" />
<text  x="88.68" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="773" width="0.2" height="15.0" fill="rgb(243,222,28)" rx="2" ry="2" />
<text  x="130.52" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1381" width="0.2" height="15.0" fill="rgb(237,116,21)" rx="2" ry="2" />
<text  x="130.52" y="1391.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (2 samples, 0.03%)</title><rect x="75.8" y="2021" width="0.4" height="15.0" fill="rgb(240,189,47)" rx="2" ry="2" />
<text  x="78.82" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="594.4" y="1813" width="0.2" height="15.0" fill="rgb(234,22,24)" rx="2" ry="2" />
<text  x="597.42" y="1823.5" ></text>
</g>
<g >
<title>__x64_sys_futex (10 samples, 0.16%)</title><rect x="35.7" y="1973" width="1.8" height="15.0" fill="rgb(218,78,30)" rx="2" ry="2" />
<text  x="38.66" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="949" width="0.2" height="15.0" fill="rgb(244,83,24)" rx="2" ry="2" />
<text  x="1170.50" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="181" width="0.2" height="15.0" fill="rgb(229,134,3)" rx="2" ry="2" />
<text  x="204.89" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="997" width="0.2" height="15.0" fill="rgb(214,14,11)" rx="2" ry="2" />
<text  x="1170.50" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1141" width="0.1" height="15.0" fill="rgb(250,186,37)" rx="2" ry="2" />
<text  x="204.15" y="1151.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (67 samples, 1.06%)</title><rect x="433.6" y="1973" width="12.4" height="15.0" fill="rgb(218,228,50)" rx="2" ry="2" />
<text  x="436.58" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="261" width="0.2" height="15.0" fill="rgb(245,137,6)" rx="2" ry="2" />
<text  x="204.89" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="373" width="0.2" height="15.0" fill="rgb(215,11,15)" rx="2" ry="2" />
<text  x="1170.31" y="383.5" ></text>
</g>
<g >
<title>memcmp@plt (1 samples, 0.02%)</title><rect x="686.8" y="1877" width="0.2" height="15.0" fill="rgb(242,24,31)" rx="2" ry="2" />
<text  x="689.84" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.50%)</title><rect x="128.6" y="1717" width="6.0" height="15.0" fill="rgb(224,174,0)" rx="2" ry="2" />
<text  x="131.63" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (217 samples, 3.42%)</title><rect x="160.1" y="1893" width="40.3" height="15.0" fill="rgb(223,23,1)" rx="2" ry="2" />
<text  x="163.06" y="1903.5" >std..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (27 samples, 0.43%)</title><rect x="102.2" y="1669" width="5.0" height="15.0" fill="rgb(235,19,41)" rx="2" ry="2" />
<text  x="105.23" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1413" width="0.1" height="15.0" fill="rgb(233,10,31)" rx="2" ry="2" />
<text  x="204.15" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1605" width="0.2" height="15.0" fill="rgb(239,199,54)" rx="2" ry="2" />
<text  x="1170.31" y="1615.5" ></text>
</g>
<g >
<title>generic_write_end (1 samples, 0.02%)</title><rect x="889.1" y="1845" width="0.2" height="15.0" fill="rgb(206,44,48)" rx="2" ry="2" />
<text  x="892.14" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="117" width="0.5" height="15.0" fill="rgb(221,87,13)" rx="2" ry="2" />
<text  x="1170.87" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="1077" width="0.2" height="15.0" fill="rgb(233,104,24)" rx="2" ry="2" />
<text  x="204.71" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="200.4" y="1829" width="0.2" height="15.0" fill="rgb(236,5,21)" rx="2" ry="2" />
<text  x="203.41" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1061" width="0.2" height="15.0" fill="rgb(219,168,1)" rx="2" ry="2" />
<text  x="204.34" y="1071.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (1,356 samples, 21.37%)</title><rect x="340.2" y="2005" width="252.2" height="15.0" fill="rgb(231,72,12)" rx="2" ry="2" />
<text  x="343.24" y="2015.5" >TSlinkClustering::Cluster</text>
</g>
<g >
<title>malloc@plt (3 samples, 0.05%)</title><rect x="1119.7" y="2053" width="0.6" height="15.0" fill="rgb(223,183,28)" rx="2" ry="2" />
<text  x="1122.71" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1125" width="0.2" height="15.0" fill="rgb(236,67,6)" rx="2" ry="2" />
<text  x="1170.69" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="157.1" y="1653" width="0.5" height="15.0" fill="rgb(236,134,49)" rx="2" ry="2" />
<text  x="160.08" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.24%)</title><rect x="881.5" y="2005" width="2.8" height="15.0" fill="rgb(218,17,49)" rx="2" ry="2" />
<text  x="884.52" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (43 samples, 0.68%)</title><rect x="160.6" y="1669" width="8.0" height="15.0" fill="rgb(243,37,8)" rx="2" ry="2" />
<text  x="163.61" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (27 samples, 0.43%)</title><rect x="97.2" y="1669" width="5.0" height="15.0" fill="rgb(250,193,31)" rx="2" ry="2" />
<text  x="100.21" y="1679.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="145.2" y="1605" width="0.4" height="15.0" fill="rgb(238,155,19)" rx="2" ry="2" />
<text  x="148.18" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1221" width="0.1" height="15.0" fill="rgb(228,91,35)" rx="2" ry="2" />
<text  x="204.15" y="1231.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="588.3" y="1973" width="0.2" height="15.0" fill="rgb(235,120,54)" rx="2" ry="2" />
<text  x="591.29" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1445" width="0.2" height="15.0" fill="rgb(226,126,49)" rx="2" ry="2" />
<text  x="1170.31" y="1455.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="100.6" y="1573" width="0.3" height="15.0" fill="rgb(223,219,47)" rx="2" ry="2" />
<text  x="103.55" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="661" width="0.2" height="15.0" fill="rgb(251,121,18)" rx="2" ry="2" />
<text  x="130.52" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1269" width="0.1" height="15.0" fill="rgb(243,150,35)" rx="2" ry="2" />
<text  x="160.45" y="1279.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (1 samples, 0.02%)</title><rect x="128.3" y="1941" width="0.1" height="15.0" fill="rgb(220,56,31)" rx="2" ry="2" />
<text  x="131.26" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1157" width="0.2" height="15.0" fill="rgb(244,31,52)" rx="2" ry="2" />
<text  x="204.34" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="165" width="0.4" height="15.0" fill="rgb(226,95,6)" rx="2" ry="2" />
<text  x="75.85" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1957" width="0.2" height="15.0" fill="rgb(213,11,38)" rx="2" ry="2" />
<text  x="1170.50" y="1967.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (18 samples, 0.28%)</title><rect x="765.7" y="1893" width="3.3" height="15.0" fill="rgb(223,212,15)" rx="2" ry="2" />
<text  x="768.68" y="1903.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 48, 4, false, false&gt;::operator (1 samples, 0.02%)</title><rect x="159.3" y="1925" width="0.2" height="15.0" fill="rgb(247,105,3)" rx="2" ry="2" />
<text  x="162.31" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (17 samples, 0.27%)</title><rect x="147.2" y="1669" width="3.2" height="15.0" fill="rgb(248,126,21)" rx="2" ry="2" />
<text  x="150.23" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1237" width="0.2" height="15.0" fill="rgb(213,43,36)" rx="2" ry="2" />
<text  x="204.34" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="725" width="0.2" height="15.0" fill="rgb(219,96,8)" rx="2" ry="2" />
<text  x="1170.50" y="735.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.14%)</title><rect x="72.7" y="2021" width="1.6" height="15.0" fill="rgb(232,55,15)" rx="2" ry="2" />
<text  x="75.66" y="2031.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.06%)</title><rect x="198.9" y="1701" width="0.8" height="15.0" fill="rgb(252,24,19)" rx="2" ry="2" />
<text  x="201.92" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.7" y="1525" width="0.4" height="15.0" fill="rgb(213,132,31)" rx="2" ry="2" />
<text  x="204.71" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="453" width="0.2" height="15.0" fill="rgb(205,165,24)" rx="2" ry="2" />
<text  x="1170.69" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1429" width="0.2" height="15.0" fill="rgb(214,84,38)" rx="2" ry="2" />
<text  x="1170.50" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.02%)</title><rect x="858.1" y="1973" width="0.2" height="15.0" fill="rgb(250,192,13)" rx="2" ry="2" />
<text  x="861.09" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="917" width="0.2" height="15.0" fill="rgb(240,85,3)" rx="2" ry="2" />
<text  x="1170.69" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="853" width="0.2" height="15.0" fill="rgb(233,99,0)" rx="2" ry="2" />
<text  x="130.52" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="133" width="0.2" height="15.0" fill="rgb(242,192,8)" rx="2" ry="2" />
<text  x="1170.31" y="143.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.03%)</title><rect x="81.4" y="1989" width="0.4" height="15.0" fill="rgb(248,132,1)" rx="2" ry="2" />
<text  x="84.40" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1989" width="0.2" height="15.0" fill="rgb(250,169,43)" rx="2" ry="2" />
<text  x="1170.31" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="917" width="0.5" height="15.0" fill="rgb(211,7,3)" rx="2" ry="2" />
<text  x="75.66" y="927.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="261" width="0.4" height="15.0" fill="rgb(232,59,0)" rx="2" ry="2" />
<text  x="75.85" y="271.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="549" width="0.4" height="15.0" fill="rgb(223,199,18)" rx="2" ry="2" />
<text  x="75.85" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="889.1" y="2021" width="0.2" height="15.0" fill="rgb(245,9,19)" rx="2" ry="2" />
<text  x="892.14" y="2031.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="37.5" y="1925" width="0.2" height="15.0" fill="rgb(241,46,7)" rx="2" ry="2" />
<text  x="40.52" y="1935.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="183.1" y="1637" width="0.2" height="15.0" fill="rgb(226,58,34)" rx="2" ry="2" />
<text  x="186.11" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="773" width="0.2" height="15.0" fill="rgb(209,184,20)" rx="2" ry="2" />
<text  x="204.89" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1109" width="0.2" height="15.0" fill="rgb(230,54,6)" rx="2" ry="2" />
<text  x="130.52" y="1119.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (1 samples, 0.02%)</title><rect x="82.9" y="1925" width="0.2" height="15.0" fill="rgb(221,216,18)" rx="2" ry="2" />
<text  x="85.89" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="933" width="0.5" height="15.0" fill="rgb(207,211,35)" rx="2" ry="2" />
<text  x="75.66" y="943.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (1 samples, 0.02%)</title><rect x="1105.4" y="2053" width="0.2" height="15.0" fill="rgb(236,47,13)" rx="2" ry="2" />
<text  x="1108.40" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (106 samples, 1.67%)</title><rect x="1147.6" y="2053" width="19.7" height="15.0" fill="rgb(229,56,39)" rx="2" ry="2" />
<text  x="1150.60" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1253" width="0.2" height="15.0" fill="rgb(213,116,45)" rx="2" ry="2" />
<text  x="130.52" y="1263.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="934.9" y="1925" width="0.2" height="15.0" fill="rgb(224,74,24)" rx="2" ry="2" />
<text  x="937.88" y="1935.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="95.5" y="1941" width="0.2" height="15.0" fill="rgb(242,7,49)" rx="2" ry="2" />
<text  x="98.53" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1381" width="0.1" height="15.0" fill="rgb(252,99,31)" rx="2" ry="2" />
<text  x="160.45" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate@plt (1 samples, 0.02%)</title><rect x="1135.5" y="2053" width="0.2" height="15.0" fill="rgb(208,50,26)" rx="2" ry="2" />
<text  x="1138.52" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1461" width="0.1" height="15.0" fill="rgb(229,118,23)" rx="2" ry="2" />
<text  x="204.15" y="1471.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1122.9" y="2005" width="0.2" height="15.0" fill="rgb(231,157,32)" rx="2" ry="2" />
<text  x="1125.87" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="405" width="0.5" height="15.0" fill="rgb(208,127,49)" rx="2" ry="2" />
<text  x="1170.87" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.7" y="1461" width="0.4" height="15.0" fill="rgb(251,189,39)" rx="2" ry="2" />
<text  x="204.71" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="1133.7" y="2053" width="0.1" height="15.0" fill="rgb(253,129,48)" rx="2" ry="2" />
<text  x="1136.66" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1557" width="0.5" height="15.0" fill="rgb(219,77,15)" rx="2" ry="2" />
<text  x="75.66" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="981" width="0.2" height="15.0" fill="rgb(216,141,49)" rx="2" ry="2" />
<text  x="1170.50" y="991.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="80.3" y="1893" width="0.4" height="15.0" fill="rgb(207,95,47)" rx="2" ry="2" />
<text  x="83.29" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="885" width="0.2" height="15.0" fill="rgb(209,221,35)" rx="2" ry="2" />
<text  x="204.71" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="837" width="0.2" height="15.0" fill="rgb(237,30,49)" rx="2" ry="2" />
<text  x="204.89" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="261" width="0.2" height="15.0" fill="rgb(230,71,1)" rx="2" ry="2" />
<text  x="204.34" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_vma (12 samples, 0.19%)</title><rect x="421.1" y="1861" width="2.3" height="15.0" fill="rgb(233,39,6)" rx="2" ry="2" />
<text  x="424.12" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1701" width="0.5" height="15.0" fill="rgb(216,4,53)" rx="2" ry="2" />
<text  x="1170.87" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="127.1" y="1845" width="1.2" height="15.0" fill="rgb(240,66,50)" rx="2" ry="2" />
<text  x="130.14" y="1855.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::should_preserve (2 samples, 0.03%)</title><rect x="602.6" y="1909" width="0.4" height="15.0" fill="rgb(248,113,17)" rx="2" ry="2" />
<text  x="605.60" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="805" width="0.2" height="15.0" fill="rgb(224,77,53)" rx="2" ry="2" />
<text  x="1170.50" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1109" width="0.1" height="15.0" fill="rgb(234,193,24)" rx="2" ry="2" />
<text  x="204.15" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="53" width="0.2" height="15.0" fill="rgb(237,223,29)" rx="2" ry="2" />
<text  x="1170.31" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="821" width="0.2" height="15.0" fill="rgb(205,208,16)" rx="2" ry="2" />
<text  x="130.52" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1861" width="0.2" height="15.0" fill="rgb(231,167,13)" rx="2" ry="2" />
<text  x="1170.50" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="821" width="0.2" height="15.0" fill="rgb(211,97,36)" rx="2" ry="2" />
<text  x="204.34" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1621" width="0.2" height="15.0" fill="rgb(252,61,43)" rx="2" ry="2" />
<text  x="1170.31" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="357" width="0.5" height="15.0" fill="rgb(243,197,0)" rx="2" ry="2" />
<text  x="1170.87" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="593.5" y="1989" width="0.2" height="15.0" fill="rgb(228,54,39)" rx="2" ry="2" />
<text  x="596.49" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1621" width="0.2" height="15.0" fill="rgb(244,198,37)" rx="2" ry="2" />
<text  x="1170.69" y="1631.5" ></text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.14%)</title><rect x="169.5" y="1621" width="1.7" height="15.0" fill="rgb(249,100,48)" rx="2" ry="2" />
<text  x="172.54" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="949" width="0.2" height="15.0" fill="rgb(247,143,29)" rx="2" ry="2" />
<text  x="204.71" y="959.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="182.0" y="1621" width="0.2" height="15.0" fill="rgb(222,228,51)" rx="2" ry="2" />
<text  x="185.00" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (32 samples, 0.50%)</title><rect x="834.7" y="1893" width="5.9" height="15.0" fill="rgb(248,69,47)" rx="2" ry="2" />
<text  x="837.66" y="1903.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="159.3" y="1957" width="0.2" height="15.0" fill="rgb(206,192,2)" rx="2" ry="2" />
<text  x="162.31" y="1967.5" ></text>
</g>
<g >
<title>GetHost (229 samples, 3.61%)</title><rect x="159.5" y="1973" width="42.6" height="15.0" fill="rgb(222,212,7)" rx="2" ry="2" />
<text  x="162.50" y="1983.5" >GetH..</text>
</g>
<g >
<title>std::istream::sentry::sentry (5 samples, 0.08%)</title><rect x="588.7" y="1973" width="0.9" height="15.0" fill="rgb(243,26,2)" rx="2" ry="2" />
<text  x="591.66" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="661" width="0.2" height="15.0" fill="rgb(230,203,27)" rx="2" ry="2" />
<text  x="1170.31" y="671.5" ></text>
</g>
<g >
<title>do_page_fault (30 samples, 0.47%)</title><rect x="419.4" y="1925" width="5.6" height="15.0" fill="rgb(254,208,30)" rx="2" ry="2" />
<text  x="422.45" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="501" width="0.2" height="15.0" fill="rgb(251,205,4)" rx="2" ry="2" />
<text  x="1170.50" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1285" width="0.1" height="15.0" fill="rgb(229,140,19)" rx="2" ry="2" />
<text  x="160.45" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="389" width="0.2" height="15.0" fill="rgb(249,42,13)" rx="2" ry="2" />
<text  x="1170.50" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1141" width="0.1" height="15.0" fill="rgb(237,46,34)" rx="2" ry="2" />
<text  x="160.45" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="885" width="0.5" height="15.0" fill="rgb(206,68,1)" rx="2" ry="2" />
<text  x="75.66" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="200.4" y="1781" width="0.2" height="15.0" fill="rgb(226,72,36)" rx="2" ry="2" />
<text  x="203.41" y="1791.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.11%)</title><rect x="134.8" y="1605" width="1.3" height="15.0" fill="rgb(231,129,15)" rx="2" ry="2" />
<text  x="137.77" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1637" width="0.5" height="15.0" fill="rgb(233,126,8)" rx="2" ry="2" />
<text  x="1170.87" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1285" width="0.2" height="15.0" fill="rgb(210,26,0)" rx="2" ry="2" />
<text  x="1170.31" y="1295.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (26 samples, 0.41%)</title><rect x="213.6" y="1989" width="4.8" height="15.0" fill="rgb(227,172,51)" rx="2" ry="2" />
<text  x="216.61" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (4 samples, 0.06%)</title><rect x="850.7" y="1893" width="0.7" height="15.0" fill="rgb(206,159,27)" rx="2" ry="2" />
<text  x="853.65" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1333" width="0.2" height="15.0" fill="rgb(233,219,34)" rx="2" ry="2" />
<text  x="1170.69" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="629" width="0.2" height="15.0" fill="rgb(207,12,12)" rx="2" ry="2" />
<text  x="130.52" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve@plt (1 samples, 0.02%)</title><rect x="851.4" y="1893" width="0.2" height="15.0" fill="rgb(233,102,50)" rx="2" ry="2" />
<text  x="854.40" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1589" width="0.2" height="15.0" fill="rgb(222,8,36)" rx="2" ry="2" />
<text  x="1170.69" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1541" width="0.4" height="15.0" fill="rgb(232,105,1)" rx="2" ry="2" />
<text  x="130.89" y="1551.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (59 samples, 0.93%)</title><rect x="202.6" y="1989" width="11.0" height="15.0" fill="rgb(232,157,47)" rx="2" ry="2" />
<text  x="205.64" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (20 samples, 0.32%)</title><rect x="146.7" y="1733" width="3.7" height="15.0" fill="rgb(243,179,15)" rx="2" ry="2" />
<text  x="149.67" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (36 samples, 0.57%)</title><rect x="184.2" y="1701" width="6.7" height="15.0" fill="rgb(212,224,8)" rx="2" ry="2" />
<text  x="187.23" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1221" width="0.2" height="15.0" fill="rgb(241,19,30)" rx="2" ry="2" />
<text  x="160.27" y="1231.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="98.5" y="1589" width="0.4" height="15.0" fill="rgb(220,163,16)" rx="2" ry="2" />
<text  x="101.51" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="127.7" y="1733" width="0.6" height="15.0" fill="rgb(225,27,21)" rx="2" ry="2" />
<text  x="130.70" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1301" width="0.1" height="15.0" fill="rgb(241,157,10)" rx="2" ry="2" />
<text  x="204.15" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="341" width="0.2" height="15.0" fill="rgb(224,36,16)" rx="2" ry="2" />
<text  x="204.34" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="901" width="0.2" height="15.0" fill="rgb(208,201,48)" rx="2" ry="2" />
<text  x="160.08" y="911.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="857.9" y="1973" width="0.2" height="15.0" fill="rgb(231,128,15)" rx="2" ry="2" />
<text  x="860.90" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="917" width="0.2" height="15.0" fill="rgb(231,50,49)" rx="2" ry="2" />
<text  x="1170.31" y="927.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="852.5" y="1893" width="0.2" height="15.0" fill="rgb(226,147,32)" rx="2" ry="2" />
<text  x="855.51" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (43 samples, 0.68%)</title><rect x="118.2" y="1717" width="8.0" height="15.0" fill="rgb(213,91,15)" rx="2" ry="2" />
<text  x="121.22" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.3" y="1237" width="0.2" height="15.0" fill="rgb(215,133,5)" rx="2" ry="2" />
<text  x="160.27" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="172.9" y="1605" width="0.4" height="15.0" fill="rgb(207,169,15)" rx="2" ry="2" />
<text  x="175.89" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1205" width="0.1" height="15.0" fill="rgb(207,159,36)" rx="2" ry="2" />
<text  x="160.45" y="1215.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.03%)</title><rect x="594.0" y="2005" width="0.4" height="15.0" fill="rgb(215,174,15)" rx="2" ry="2" />
<text  x="597.05" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1445" width="0.4" height="15.0" fill="rgb(234,54,12)" rx="2" ry="2" />
<text  x="130.89" y="1455.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="592.2" y="1877" width="0.2" height="15.0" fill="rgb(225,1,19)" rx="2" ry="2" />
<text  x="595.19" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1877" width="0.5" height="15.0" fill="rgb(214,74,10)" rx="2" ry="2" />
<text  x="75.66" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="757" width="0.2" height="15.0" fill="rgb(233,171,50)" rx="2" ry="2" />
<text  x="131.07" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="201.5" y="1717" width="0.6" height="15.0" fill="rgb(219,85,2)" rx="2" ry="2" />
<text  x="204.52" y="1727.5" ></text>
</g>
<g >
<title>__dynamic_cast (10 samples, 0.16%)</title><rect x="118.2" y="1701" width="1.9" height="15.0" fill="rgb(219,117,54)" rx="2" ry="2" />
<text  x="121.22" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1253" width="0.2" height="15.0" fill="rgb(231,100,30)" rx="2" ry="2" />
<text  x="1170.50" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="853" width="0.2" height="15.0" fill="rgb(222,67,11)" rx="2" ry="2" />
<text  x="204.34" y="863.5" ></text>
</g>
<g >
<title>TDocument::FromJson (2 samples, 0.03%)</title><rect x="79.9" y="1973" width="0.4" height="15.0" fill="rgb(253,136,28)" rx="2" ry="2" />
<text  x="82.91" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1189" width="0.2" height="15.0" fill="rgb(233,9,28)" rx="2" ry="2" />
<text  x="160.08" y="1199.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.03%)</title><rect x="72.3" y="2021" width="0.4" height="15.0" fill="rgb(246,202,29)" rx="2" ry="2" />
<text  x="75.29" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream (1 samples, 0.02%)</title><rect x="76.9" y="2021" width="0.2" height="15.0" fill="rgb(209,109,26)" rx="2" ry="2" />
<text  x="79.94" y="2031.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.03%)</title><rect x="592.0" y="1925" width="0.4" height="15.0" fill="rgb(213,112,14)" rx="2" ry="2" />
<text  x="595.00" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1381" width="0.5" height="15.0" fill="rgb(246,72,37)" rx="2" ry="2" />
<text  x="75.66" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="981" width="0.2" height="15.0" fill="rgb(229,8,2)" rx="2" ry="2" />
<text  x="1170.69" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1429" width="0.1" height="15.0" fill="rgb(216,30,7)" rx="2" ry="2" />
<text  x="204.15" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="869" width="0.2" height="15.0" fill="rgb(242,76,26)" rx="2" ry="2" />
<text  x="204.71" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="901" width="0.2" height="15.0" fill="rgb(209,38,9)" rx="2" ry="2" />
<text  x="204.71" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="213" width="0.2" height="15.0" fill="rgb(231,73,53)" rx="2" ry="2" />
<text  x="204.71" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.7" y="1541" width="0.4" height="15.0" fill="rgb(231,197,10)" rx="2" ry="2" />
<text  x="204.71" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1429" width="0.2" height="15.0" fill="rgb(230,62,4)" rx="2" ry="2" />
<text  x="1170.69" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.2" y="1685" width="0.3" height="15.0" fill="rgb(242,114,48)" rx="2" ry="2" />
<text  x="204.15" y="1695.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="95.7" y="1829" width="0.4" height="15.0" fill="rgb(227,67,43)" rx="2" ry="2" />
<text  x="98.72" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1957" width="0.5" height="15.0" fill="rgb(233,151,24)" rx="2" ry="2" />
<text  x="75.66" y="1967.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (5 samples, 0.08%)</title><rect x="95.2" y="1989" width="0.9" height="15.0" fill="rgb(221,114,32)" rx="2" ry="2" />
<text  x="98.16" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1061" width="0.1" height="15.0" fill="rgb(250,195,22)" rx="2" ry="2" />
<text  x="160.45" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (42 samples, 0.66%)</title><rect x="160.6" y="1637" width="7.8" height="15.0" fill="rgb(218,169,4)" rx="2" ry="2" />
<text  x="163.61" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="127.7" y="1765" width="0.6" height="15.0" fill="rgb(253,122,28)" rx="2" ry="2" />
<text  x="130.70" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="565" width="0.2" height="15.0" fill="rgb(251,35,26)" rx="2" ry="2" />
<text  x="1170.31" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1813" width="0.2" height="15.0" fill="rgb(238,150,41)" rx="2" ry="2" />
<text  x="1170.31" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="981" width="0.2" height="15.0" fill="rgb(236,26,25)" rx="2" ry="2" />
<text  x="204.71" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="469" width="0.2" height="15.0" fill="rgb(230,14,2)" rx="2" ry="2" />
<text  x="1170.31" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="101" width="0.2" height="15.0" fill="rgb(230,62,2)" rx="2" ry="2" />
<text  x="1170.31" y="111.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (7 samples, 0.11%)</title><rect x="32.3" y="2053" width="1.3" height="15.0" fill="rgb(241,30,42)" rx="2" ry="2" />
<text  x="35.31" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="157.1" y="1717" width="0.5" height="15.0" fill="rgb(234,186,36)" rx="2" ry="2" />
<text  x="160.08" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="146.7" y="1701" width="0.2" height="15.0" fill="rgb(236,87,7)" rx="2" ry="2" />
<text  x="149.67" y="1711.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (44 samples, 0.69%)</title><rect x="862.4" y="2037" width="8.1" height="15.0" fill="rgb(238,9,33)" rx="2" ry="2" />
<text  x="865.37" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1461" width="0.5" height="15.0" fill="rgb(237,42,6)" rx="2" ry="2" />
<text  x="75.66" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1365" width="0.2" height="15.0" fill="rgb(231,52,40)" rx="2" ry="2" />
<text  x="130.52" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="201.0" y="1845" width="1.1" height="15.0" fill="rgb(232,35,43)" rx="2" ry="2" />
<text  x="203.96" y="1855.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::clear (3 samples, 0.05%)</title><rect x="623.1" y="1893" width="0.5" height="15.0" fill="rgb(216,192,17)" rx="2" ry="2" />
<text  x="626.06" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1717" width="0.2" height="15.0" fill="rgb(237,162,32)" rx="2" ry="2" />
<text  x="75.48" y="1727.5" ></text>
</g>
<g >
<title>do_futex (10 samples, 0.16%)</title><rect x="35.7" y="1957" width="1.8" height="15.0" fill="rgb(210,0,0)" rx="2" ry="2" />
<text  x="38.66" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="613" width="0.2" height="15.0" fill="rgb(209,87,5)" rx="2" ry="2" />
<text  x="204.89" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1509" width="0.4" height="15.0" fill="rgb(215,129,39)" rx="2" ry="2" />
<text  x="130.89" y="1519.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.06%)</title><rect x="167.3" y="1589" width="0.8" height="15.0" fill="rgb(249,22,32)" rx="2" ry="2" />
<text  x="170.31" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="1301" width="0.2" height="15.0" fill="rgb(225,213,38)" rx="2" ry="2" />
<text  x="204.71" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1493" width="0.2" height="15.0" fill="rgb(233,201,1)" rx="2" ry="2" />
<text  x="160.08" y="1503.5" ></text>
</g>
<g >
<title>alloc_pages_vma (27 samples, 0.43%)</title><rect x="427.4" y="1877" width="5.1" height="15.0" fill="rgb(226,197,18)" rx="2" ry="2" />
<text  x="430.44" y="1887.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (1 samples, 0.02%)</title><rect x="602.0" y="1909" width="0.2" height="15.0" fill="rgb(223,32,13)" rx="2" ry="2" />
<text  x="605.05" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="341" width="0.2" height="15.0" fill="rgb(249,10,28)" rx="2" ry="2" />
<text  x="1170.31" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1509" width="0.5" height="15.0" fill="rgb(239,113,12)" rx="2" ry="2" />
<text  x="1170.87" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="597" width="0.2" height="15.0" fill="rgb(239,161,30)" rx="2" ry="2" />
<text  x="1170.50" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1509" width="0.2" height="15.0" fill="rgb(234,142,44)" rx="2" ry="2" />
<text  x="1170.50" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1317" width="0.2" height="15.0" fill="rgb(250,188,51)" rx="2" ry="2" />
<text  x="1170.50" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="421" width="0.2" height="15.0" fill="rgb(250,87,26)" rx="2" ry="2" />
<text  x="204.89" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (43 samples, 0.68%)</title><rect x="176.0" y="1685" width="8.0" height="15.0" fill="rgb(214,19,0)" rx="2" ry="2" />
<text  x="179.05" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1829" width="0.2" height="15.0" fill="rgb(241,44,0)" rx="2" ry="2" />
<text  x="1170.50" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="190.9" y="1749" width="0.2" height="15.0" fill="rgb(213,82,10)" rx="2" ry="2" />
<text  x="193.92" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (36 samples, 0.57%)</title><rect x="184.2" y="1717" width="6.7" height="15.0" fill="rgb(250,185,20)" rx="2" ry="2" />
<text  x="187.23" y="1727.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="719.4" y="1781" width="0.2" height="15.0" fill="rgb(240,146,22)" rx="2" ry="2" />
<text  x="722.38" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.3" y="1621" width="0.4" height="15.0" fill="rgb(209,108,16)" rx="2" ry="2" />
<text  x="130.33" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1765" width="0.2" height="15.0" fill="rgb(205,88,15)" rx="2" ry="2" />
<text  x="1170.50" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream (1 samples, 0.02%)</title><rect x="888.4" y="2005" width="0.2" height="15.0" fill="rgb(245,125,46)" rx="2" ry="2" />
<text  x="891.40" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1349" width="0.2" height="15.0" fill="rgb(223,54,42)" rx="2" ry="2" />
<text  x="1170.50" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1045" width="0.5" height="15.0" fill="rgb(251,28,32)" rx="2" ry="2" />
<text  x="75.66" y="1055.5" ></text>
</g>
<g >
<title>clear_page_erms (11 samples, 0.17%)</title><rect x="421.1" y="1829" width="2.1" height="15.0" fill="rgb(250,181,20)" rx="2" ry="2" />
<text  x="424.12" y="1839.5" ></text>
</g>
<g >
<title>futex_wake (2 samples, 0.03%)</title><rect x="596.5" y="1957" width="0.3" height="15.0" fill="rgb(226,59,29)" rx="2" ry="2" />
<text  x="599.47" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.3" y="1173" width="0.2" height="15.0" fill="rgb(213,102,52)" rx="2" ry="2" />
<text  x="160.27" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1397" width="0.1" height="15.0" fill="rgb(220,143,48)" rx="2" ry="2" />
<text  x="204.15" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="965" width="0.2" height="15.0" fill="rgb(225,209,8)" rx="2" ry="2" />
<text  x="130.52" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1077" width="0.2" height="15.0" fill="rgb(207,191,4)" rx="2" ry="2" />
<text  x="1170.69" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1413" width="0.5" height="15.0" fill="rgb(233,12,45)" rx="2" ry="2" />
<text  x="75.66" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1013" width="0.4" height="15.0" fill="rgb(219,42,29)" rx="2" ry="2" />
<text  x="130.89" y="1023.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="719.4" y="1765" width="0.2" height="15.0" fill="rgb(237,80,14)" rx="2" ry="2" />
<text  x="722.38" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="245" width="0.2" height="15.0" fill="rgb(226,70,16)" rx="2" ry="2" />
<text  x="204.89" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="126.6" y="1813" width="0.2" height="15.0" fill="rgb(213,93,16)" rx="2" ry="2" />
<text  x="129.59" y="1823.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (1 samples, 0.02%)</title><rect x="593.9" y="1973" width="0.1" height="15.0" fill="rgb(214,16,32)" rx="2" ry="2" />
<text  x="596.86" y="1983.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="34.0" y="2037" width="0.2" height="15.0" fill="rgb(208,123,4)" rx="2" ry="2" />
<text  x="36.99" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1301" width="0.2" height="15.0" fill="rgb(248,50,48)" rx="2" ry="2" />
<text  x="1170.50" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1365" width="0.1" height="15.0" fill="rgb(231,117,9)" rx="2" ry="2" />
<text  x="204.15" y="1375.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (6 samples, 0.09%)</title><rect x="74.7" y="2021" width="1.1" height="15.0" fill="rgb(216,211,32)" rx="2" ry="2" />
<text  x="77.71" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1509" width="0.2" height="15.0" fill="rgb(210,130,47)" rx="2" ry="2" />
<text  x="160.08" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="277" width="0.2" height="15.0" fill="rgb(230,5,4)" rx="2" ry="2" />
<text  x="1170.50" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="245" width="0.2" height="15.0" fill="rgb(228,15,20)" rx="2" ry="2" />
<text  x="204.34" y="255.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (1 samples, 0.02%)</title><rect x="320.0" y="1989" width="0.2" height="15.0" fill="rgb(231,147,40)" rx="2" ry="2" />
<text  x="322.97" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1877" width="0.5" height="15.0" fill="rgb(252,229,37)" rx="2" ry="2" />
<text  x="1170.87" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="869" width="0.2" height="15.0" fill="rgb(206,222,36)" rx="2" ry="2" />
<text  x="131.07" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.7" y="1477" width="0.4" height="15.0" fill="rgb(243,185,15)" rx="2" ry="2" />
<text  x="204.71" y="1487.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (5 samples, 0.08%)</title><rect x="424.1" y="1861" width="0.9" height="15.0" fill="rgb(228,124,45)" rx="2" ry="2" />
<text  x="427.10" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1077" width="0.5" height="15.0" fill="rgb(254,121,36)" rx="2" ry="2" />
<text  x="1170.87" y="1087.5" ></text>
</g>
<g >
<title>generic_file_read_iter (4 samples, 0.06%)</title><rect x="910.5" y="1909" width="0.8" height="15.0" fill="rgb(238,11,20)" rx="2" ry="2" />
<text  x="913.53" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1253" width="0.2" height="15.0" fill="rgb(222,29,47)" rx="2" ry="2" />
<text  x="160.27" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="277" width="0.2" height="15.0" fill="rgb(216,0,16)" rx="2" ry="2" />
<text  x="204.89" y="287.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="130.7" y="1573" width="0.3" height="15.0" fill="rgb(226,3,37)" rx="2" ry="2" />
<text  x="133.68" y="1583.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="649.1" y="1877" width="0.5" height="15.0" fill="rgb(210,181,6)" rx="2" ry="2" />
<text  x="652.09" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1061" width="0.5" height="15.0" fill="rgb(214,115,54)" rx="2" ry="2" />
<text  x="75.66" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (216 samples, 3.40%)</title><rect x="160.1" y="1877" width="40.1" height="15.0" fill="rgb(209,147,54)" rx="2" ry="2" />
<text  x="163.06" y="1887.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1797" width="0.2" height="15.0" fill="rgb(247,166,14)" rx="2" ry="2" />
<text  x="1170.50" y="1807.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::push_back (3 samples, 0.05%)</title><rect x="594.4" y="2005" width="0.6" height="15.0" fill="rgb(214,182,37)" rx="2" ry="2" />
<text  x="597.42" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="949" width="0.2" height="15.0" fill="rgb(240,48,14)" rx="2" ry="2" />
<text  x="204.34" y="959.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 0.09%)</title><rect x="31.0" y="1941" width="1.1" height="15.0" fill="rgb(233,204,31)" rx="2" ry="2" />
<text  x="34.01" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="229" width="0.2" height="15.0" fill="rgb(216,96,13)" rx="2" ry="2" />
<text  x="204.89" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="933" width="0.2" height="15.0" fill="rgb(219,172,29)" rx="2" ry="2" />
<text  x="204.89" y="943.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::str[abi:cxx11]@plt (2 samples, 0.03%)</title><rect x="603.2" y="1909" width="0.3" height="15.0" fill="rgb(234,82,53)" rx="2" ry="2" />
<text  x="606.16" y="1919.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="593.5" y="1813" width="0.2" height="15.0" fill="rgb(234,111,51)" rx="2" ry="2" />
<text  x="596.49" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (28 samples, 0.44%)</title><rect x="129.2" y="1621" width="5.2" height="15.0" fill="rgb(209,149,17)" rx="2" ry="2" />
<text  x="132.19" y="1631.5" ></text>
</g>
<g >
<title>malloc (12 samples, 0.19%)</title><rect x="870.5" y="2037" width="2.3" height="15.0" fill="rgb(231,81,33)" rx="2" ry="2" />
<text  x="873.55" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="917" width="0.2" height="15.0" fill="rgb(217,41,7)" rx="2" ry="2" />
<text  x="1170.50" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="949" width="0.1" height="15.0" fill="rgb(212,51,18)" rx="2" ry="2" />
<text  x="160.45" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_read (6 samples, 0.09%)</title><rect x="78.2" y="1989" width="1.2" height="15.0" fill="rgb(221,107,40)" rx="2" ry="2" />
<text  x="81.24" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="613" width="0.2" height="15.0" fill="rgb(235,51,19)" rx="2" ry="2" />
<text  x="1170.69" y="623.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="117" width="0.4" height="15.0" fill="rgb(243,15,14)" rx="2" ry="2" />
<text  x="75.85" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="613" width="0.5" height="15.0" fill="rgb(237,127,28)" rx="2" ry="2" />
<text  x="1170.87" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1029" width="0.1" height="15.0" fill="rgb(229,40,34)" rx="2" ry="2" />
<text  x="160.45" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="277" width="0.4" height="15.0" fill="rgb(234,87,53)" rx="2" ry="2" />
<text  x="75.85" y="287.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="433.0" y="1845" width="0.2" height="15.0" fill="rgb(239,106,50)" rx="2" ry="2" />
<text  x="436.02" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="917" width="0.2" height="15.0" fill="rgb(248,8,30)" rx="2" ry="2" />
<text  x="131.07" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (44 samples, 0.69%)</title><rect x="175.9" y="1765" width="8.1" height="15.0" fill="rgb(229,72,38)" rx="2" ry="2" />
<text  x="178.86" y="1775.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="134.6" y="1701" width="0.2" height="15.0" fill="rgb(248,196,38)" rx="2" ry="2" />
<text  x="137.58" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="188.5" y="1653" width="0.2" height="15.0" fill="rgb(252,177,15)" rx="2" ry="2" />
<text  x="191.51" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="127.1" y="1669" width="0.6" height="15.0" fill="rgb(225,133,4)" rx="2" ry="2" />
<text  x="130.14" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1365" width="0.2" height="15.0" fill="rgb(207,176,7)" rx="2" ry="2" />
<text  x="160.08" y="1375.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.03%)</title><rect x="450.3" y="1893" width="0.4" height="15.0" fill="rgb(248,20,52)" rx="2" ry="2" />
<text  x="453.32" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="200.2" y="1861" width="0.2" height="15.0" fill="rgb(241,212,29)" rx="2" ry="2" />
<text  x="203.22" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="2021" width="0.5" height="15.0" fill="rgb(248,47,54)" rx="2" ry="2" />
<text  x="1170.87" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="126.4" y="1765" width="0.2" height="15.0" fill="rgb(240,13,3)" rx="2" ry="2" />
<text  x="129.40" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="1269" width="0.2" height="15.0" fill="rgb(221,57,28)" rx="2" ry="2" />
<text  x="204.89" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1893" width="0.2" height="15.0" fill="rgb(252,154,29)" rx="2" ry="2" />
<text  x="1170.69" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.3" y="2053" width="0.6" height="15.0" fill="rgb(247,216,49)" rx="2" ry="2" />
<text  x="1170.31" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1125" width="0.2" height="15.0" fill="rgb(222,217,25)" rx="2" ry="2" />
<text  x="130.52" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1669" width="0.4" height="15.0" fill="rgb(213,113,22)" rx="2" ry="2" />
<text  x="130.89" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1509" width="0.2" height="15.0" fill="rgb(227,128,53)" rx="2" ry="2" />
<text  x="130.52" y="1519.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="78.1" y="2021" width="0.1" height="15.0" fill="rgb(253,177,24)" rx="2" ry="2" />
<text  x="81.06" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1381" width="0.2" height="15.0" fill="rgb(217,111,44)" rx="2" ry="2" />
<text  x="160.27" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (28 samples, 0.44%)</title><rect x="129.2" y="1637" width="5.2" height="15.0" fill="rgb(243,211,20)" rx="2" ry="2" />
<text  x="132.19" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (55 samples, 0.87%)</title><rect x="97.0" y="1765" width="10.2" height="15.0" fill="rgb(240,103,42)" rx="2" ry="2" />
<text  x="100.02" y="1775.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1557" width="0.2" height="15.0" fill="rgb(209,112,54)" rx="2" ry="2" />
<text  x="75.48" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1173" width="0.4" height="15.0" fill="rgb(230,124,21)" rx="2" ry="2" />
<text  x="130.89" y="1183.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="160.2" y="1653" width="0.2" height="15.0" fill="rgb(254,164,42)" rx="2" ry="2" />
<text  x="163.24" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="869" width="0.2" height="15.0" fill="rgb(221,196,18)" rx="2" ry="2" />
<text  x="1170.31" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1909" width="0.2" height="15.0" fill="rgb(217,5,37)" rx="2" ry="2" />
<text  x="1170.69" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="849.7" y="1877" width="0.2" height="15.0" fill="rgb(227,73,20)" rx="2" ry="2" />
<text  x="852.72" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="1061" width="0.2" height="15.0" fill="rgb(227,130,14)" rx="2" ry="2" />
<text  x="204.71" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (19 samples, 0.30%)</title><rect x="146.9" y="1701" width="3.5" height="15.0" fill="rgb(221,42,1)" rx="2" ry="2" />
<text  x="149.85" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (33 samples, 0.52%)</title><rect x="169.0" y="1637" width="6.1" height="15.0" fill="rgb(236,196,36)" rx="2" ry="2" />
<text  x="171.98" y="1647.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (160 samples, 2.52%)</title><rect x="128.3" y="1973" width="29.7" height="15.0" fill="rgb(206,197,39)" rx="2" ry="2" />
<text  x="131.26" y="1983.5" >TA..</text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="74.3" y="2021" width="0.2" height="15.0" fill="rgb(206,2,54)" rx="2" ry="2" />
<text  x="77.34" y="2031.5" ></text>
</g>
<g >
<title>__dynamic_cast (54 samples, 0.85%)</title><rect x="900.3" y="2053" width="10.0" height="15.0" fill="rgb(210,40,42)" rx="2" ry="2" />
<text  x="903.30" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1461" width="0.2" height="15.0" fill="rgb(236,184,7)" rx="2" ry="2" />
<text  x="130.52" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (4 samples, 0.06%)</title><rect x="849.9" y="1893" width="0.8" height="15.0" fill="rgb(251,139,32)" rx="2" ry="2" />
<text  x="852.91" y="1903.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.11%)</title><rect x="176.8" y="1637" width="1.3" height="15.0" fill="rgb(236,119,13)" rx="2" ry="2" />
<text  x="179.79" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="2021" width="0.2" height="15.0" fill="rgb(217,167,29)" rx="2" ry="2" />
<text  x="1170.69" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="421" width="0.2" height="15.0" fill="rgb(210,215,38)" rx="2" ry="2" />
<text  x="204.34" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="853" width="0.2" height="15.0" fill="rgb(212,47,7)" rx="2" ry="2" />
<text  x="204.71" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="437" width="0.2" height="15.0" fill="rgb(240,226,35)" rx="2" ry="2" />
<text  x="1170.69" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="1045" width="0.2" height="15.0" fill="rgb(208,173,29)" rx="2" ry="2" />
<text  x="204.71" y="1055.5" ></text>
</g>
<g >
<title>free_pgtables (1 samples, 0.02%)</title><rect x="592.0" y="1877" width="0.2" height="15.0" fill="rgb(236,65,15)" rx="2" ry="2" />
<text  x="595.00" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (149 samples, 2.35%)</title><rect x="128.6" y="1845" width="27.7" height="15.0" fill="rgb(222,198,0)" rx="2" ry="2" />
<text  x="131.63" y="1855.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1125" width="0.2" height="15.0" fill="rgb(233,181,33)" rx="2" ry="2" />
<text  x="204.34" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1541" width="0.2" height="15.0" fill="rgb(234,14,7)" rx="2" ry="2" />
<text  x="1170.31" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (49 samples, 0.77%)</title><rect x="191.1" y="1765" width="9.1" height="15.0" fill="rgb(220,167,19)" rx="2" ry="2" />
<text  x="194.11" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1813" width="0.2" height="15.0" fill="rgb(238,221,11)" rx="2" ry="2" />
<text  x="1170.50" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="245" width="0.2" height="15.0" fill="rgb(246,26,26)" rx="2" ry="2" />
<text  x="1170.50" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1253" width="0.1" height="15.0" fill="rgb(242,27,19)" rx="2" ry="2" />
<text  x="204.15" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="325" width="0.2" height="15.0" fill="rgb(205,64,8)" rx="2" ry="2" />
<text  x="204.71" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (1 samples, 0.02%)</title><rect x="168.4" y="1637" width="0.2" height="15.0" fill="rgb(228,97,3)" rx="2" ry="2" />
<text  x="171.42" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="837" width="0.2" height="15.0" fill="rgb(231,158,8)" rx="2" ry="2" />
<text  x="204.71" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="949" width="0.2" height="15.0" fill="rgb(247,10,31)" rx="2" ry="2" />
<text  x="160.08" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (44 samples, 0.69%)</title><rect x="118.0" y="1813" width="8.2" height="15.0" fill="rgb(212,136,28)" rx="2" ry="2" />
<text  x="121.03" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="53" width="0.2" height="15.0" fill="rgb(247,214,29)" rx="2" ry="2" />
<text  x="204.34" y="63.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case@plt (1 samples, 0.02%)</title><rect x="770.7" y="1893" width="0.2" height="15.0" fill="rgb(234,107,47)" rx="2" ry="2" />
<text  x="773.70" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1413" width="0.2" height="15.0" fill="rgb(213,151,26)" rx="2" ry="2" />
<text  x="1170.50" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="309" width="0.5" height="15.0" fill="rgb(225,65,52)" rx="2" ry="2" />
<text  x="1170.87" y="319.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (2 samples, 0.03%)</title><rect x="858.6" y="2037" width="0.4" height="15.0" fill="rgb(224,187,44)" rx="2" ry="2" />
<text  x="861.65" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="469" width="0.2" height="15.0" fill="rgb(242,148,39)" rx="2" ry="2" />
<text  x="1170.69" y="479.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="433.0" y="1861" width="0.2" height="15.0" fill="rgb(230,96,44)" rx="2" ry="2" />
<text  x="436.02" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="517" width="0.2" height="15.0" fill="rgb(223,54,38)" rx="2" ry="2" />
<text  x="204.34" y="527.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1119.5" y="2005" width="0.2" height="15.0" fill="rgb(252,132,29)" rx="2" ry="2" />
<text  x="1122.53" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (6 samples, 0.09%)</title><rect x="856.4" y="1941" width="1.1" height="15.0" fill="rgb(247,20,10)" rx="2" ry="2" />
<text  x="859.42" y="1951.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="889.0" y="2005" width="0.1" height="15.0" fill="rgb(254,208,18)" rx="2" ry="2" />
<text  x="891.96" y="2015.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="1051.1" y="2021" width="0.4" height="15.0" fill="rgb(215,154,24)" rx="2" ry="2" />
<text  x="1054.10" y="2031.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.03%)</title><rect x="445.5" y="1957" width="0.4" height="15.0" fill="rgb(213,203,30)" rx="2" ry="2" />
<text  x="448.48" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1525" width="0.2" height="15.0" fill="rgb(214,61,29)" rx="2" ry="2" />
<text  x="160.08" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1093" width="0.1" height="15.0" fill="rgb(214,70,8)" rx="2" ry="2" />
<text  x="160.45" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1381" width="0.2" height="15.0" fill="rgb(238,174,49)" rx="2" ry="2" />
<text  x="160.08" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="421" width="0.2" height="15.0" fill="rgb(245,129,52)" rx="2" ry="2" />
<text  x="204.71" y="431.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="185.9" y="1669" width="0.2" height="15.0" fill="rgb(216,78,21)" rx="2" ry="2" />
<text  x="188.90" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="127.1" y="1685" width="0.6" height="15.0" fill="rgb(226,195,29)" rx="2" ry="2" />
<text  x="130.14" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="453" width="0.5" height="15.0" fill="rgb(229,44,50)" rx="2" ry="2" />
<text  x="1170.87" y="463.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (18 samples, 0.28%)</title><rect x="91.6" y="1925" width="3.4" height="15.0" fill="rgb(231,215,0)" rx="2" ry="2" />
<text  x="94.63" y="1935.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (29 samples, 0.46%)</title><rect x="412.0" y="1957" width="5.4" height="15.0" fill="rgb(230,60,49)" rx="2" ry="2" />
<text  x="415.01" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1797" width="0.5" height="15.0" fill="rgb(251,149,17)" rx="2" ry="2" />
<text  x="1170.87" y="1807.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="596.5" y="1989" width="0.3" height="15.0" fill="rgb(223,203,40)" rx="2" ry="2" />
<text  x="599.47" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (35 samples, 0.55%)</title><rect x="168.6" y="1653" width="6.5" height="15.0" fill="rgb(250,6,12)" rx="2" ry="2" />
<text  x="171.61" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="645" width="0.2" height="15.0" fill="rgb(218,187,22)" rx="2" ry="2" />
<text  x="1170.50" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (1 samples, 0.02%)</title><rect x="126.2" y="1813" width="0.2" height="15.0" fill="rgb(224,221,17)" rx="2" ry="2" />
<text  x="129.21" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1141" width="0.2" height="15.0" fill="rgb(231,105,36)" rx="2" ry="2" />
<text  x="1170.31" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1285" width="0.4" height="15.0" fill="rgb(242,81,37)" rx="2" ry="2" />
<text  x="130.89" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="201.0" y="1893" width="1.1" height="15.0" fill="rgb(222,79,43)" rx="2" ry="2" />
<text  x="203.96" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1157" width="0.1" height="15.0" fill="rgb(234,54,33)" rx="2" ry="2" />
<text  x="204.15" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="933" width="0.5" height="15.0" fill="rgb(247,17,13)" rx="2" ry="2" />
<text  x="1170.87" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="889.1" y="2005" width="0.2" height="15.0" fill="rgb(223,223,34)" rx="2" ry="2" />
<text  x="892.14" y="2015.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (20 samples, 0.32%)</title><rect x="884.3" y="2005" width="3.7" height="15.0" fill="rgb(233,61,3)" rx="2" ry="2" />
<text  x="887.31" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1061" width="0.1" height="15.0" fill="rgb(224,38,18)" rx="2" ry="2" />
<text  x="204.15" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.09%)</title><rect x="78.2" y="2021" width="1.2" height="15.0" fill="rgb(240,51,28)" rx="2" ry="2" />
<text  x="81.24" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (25 samples, 0.39%)</title><rect x="578.4" y="1973" width="4.7" height="15.0" fill="rgb(252,177,5)" rx="2" ry="2" />
<text  x="581.43" y="1983.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (1 samples, 0.02%)</title><rect x="593.9" y="1941" width="0.1" height="15.0" fill="rgb(245,111,15)" rx="2" ry="2" />
<text  x="596.86" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="917" width="0.2" height="15.0" fill="rgb(231,125,40)" rx="2" ry="2" />
<text  x="204.71" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="885" width="0.5" height="15.0" fill="rgb(247,46,42)" rx="2" ry="2" />
<text  x="1170.87" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="677" width="0.2" height="15.0" fill="rgb(243,111,31)" rx="2" ry="2" />
<text  x="1170.50" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="805" width="0.2" height="15.0" fill="rgb(232,102,31)" rx="2" ry="2" />
<text  x="130.52" y="815.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.05%)</title><rect x="80.3" y="1973" width="0.5" height="15.0" fill="rgb(229,0,31)" rx="2" ry="2" />
<text  x="83.29" y="1983.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="136.1" y="1605" width="0.2" height="15.0" fill="rgb(221,87,49)" rx="2" ry="2" />
<text  x="139.07" y="1615.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="888.2" y="2005" width="0.2" height="15.0" fill="rgb(253,77,43)" rx="2" ry="2" />
<text  x="891.21" y="2015.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="593.5" y="1957" width="0.2" height="15.0" fill="rgb(216,130,15)" rx="2" ry="2" />
<text  x="596.49" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="501" width="0.2" height="15.0" fill="rgb(237,194,47)" rx="2" ry="2" />
<text  x="1170.69" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1685" width="0.5" height="15.0" fill="rgb(209,164,43)" rx="2" ry="2" />
<text  x="1170.87" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.7" y="1637" width="0.4" height="15.0" fill="rgb(224,113,45)" rx="2" ry="2" />
<text  x="204.71" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1829" width="0.2" height="15.0" fill="rgb(234,42,15)" rx="2" ry="2" />
<text  x="1170.69" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1557" width="0.2" height="15.0" fill="rgb(235,90,47)" rx="2" ry="2" />
<text  x="130.52" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (27 samples, 0.43%)</title><rect x="97.2" y="1605" width="5.0" height="15.0" fill="rgb(238,20,38)" rx="2" ry="2" />
<text  x="100.21" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="709" width="0.2" height="15.0" fill="rgb(240,84,37)" rx="2" ry="2" />
<text  x="204.89" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="1157" width="0.2" height="15.0" fill="rgb(224,136,17)" rx="2" ry="2" />
<text  x="204.71" y="1167.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="30.6" y="1989" width="0.2" height="15.0" fill="rgb(227,29,54)" rx="2" ry="2" />
<text  x="33.64" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="165" width="0.5" height="15.0" fill="rgb(226,127,47)" rx="2" ry="2" />
<text  x="1170.87" y="175.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt;, 7, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (2 samples, 0.03%)</title><rect x="445.1" y="1957" width="0.4" height="15.0" fill="rgb(242,98,23)" rx="2" ry="2" />
<text  x="448.11" y="1967.5" ></text>
</g>
<g >
<title>__do_page_fault (12 samples, 0.19%)</title><rect x="30.1" y="2005" width="2.2" height="15.0" fill="rgb(246,159,3)" rx="2" ry="2" />
<text  x="33.08" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (1 samples, 0.02%)</title><rect x="593.9" y="2005" width="0.1" height="15.0" fill="rgb(240,77,52)" rx="2" ry="2" />
<text  x="596.86" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="981" width="0.2" height="15.0" fill="rgb(212,218,33)" rx="2" ry="2" />
<text  x="130.52" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="725" width="0.2" height="15.0" fill="rgb(238,85,27)" rx="2" ry="2" />
<text  x="204.89" y="735.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="80.1" y="1941" width="0.2" height="15.0" fill="rgb(233,29,40)" rx="2" ry="2" />
<text  x="83.10" y="1951.5" ></text>
</g>
<g >
<title>std::locale::locale (5 samples, 0.08%)</title><rect x="336.1" y="1989" width="1.0" height="15.0" fill="rgb(227,55,10)" rx="2" ry="2" />
<text  x="339.15" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (41 samples, 0.65%)</title><rect x="417.4" y="1957" width="7.6" height="15.0" fill="rgb(253,153,13)" rx="2" ry="2" />
<text  x="420.40" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (19 samples, 0.30%)</title><rect x="146.9" y="1717" width="3.5" height="15.0" fill="rgb(239,40,28)" rx="2" ry="2" />
<text  x="149.85" y="1727.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10 samples, 0.16%)</title><rect x="604.6" y="1893" width="1.9" height="15.0" fill="rgb(250,78,34)" rx="2" ry="2" />
<text  x="607.65" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (37 samples, 0.58%)</title><rect x="184.0" y="1765" width="6.9" height="15.0" fill="rgb(242,106,4)" rx="2" ry="2" />
<text  x="187.04" y="1775.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="594.4" y="1861" width="0.2" height="15.0" fill="rgb(215,38,43)" rx="2" ry="2" />
<text  x="597.42" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1157" width="0.1" height="15.0" fill="rgb(208,75,53)" rx="2" ry="2" />
<text  x="160.45" y="1167.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (6 samples, 0.09%)</title><rect x="78.2" y="1909" width="1.2" height="15.0" fill="rgb(222,201,17)" rx="2" ry="2" />
<text  x="81.24" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="190.9" y="1781" width="0.2" height="15.0" fill="rgb(233,147,10)" rx="2" ry="2" />
<text  x="193.92" y="1791.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (1 samples, 0.02%)</title><rect x="595.5" y="1973" width="0.2" height="15.0" fill="rgb(223,209,17)" rx="2" ry="2" />
<text  x="598.54" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="164.5" y="1573" width="0.4" height="15.0" fill="rgb(210,159,54)" rx="2" ry="2" />
<text  x="167.52" y="1583.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (5 samples, 0.08%)</title><rect x="621.9" y="1893" width="1.0" height="15.0" fill="rgb(226,157,43)" rx="2" ry="2" />
<text  x="624.94" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="181" width="0.2" height="15.0" fill="rgb(247,22,19)" rx="2" ry="2" />
<text  x="1170.31" y="191.5" ></text>
</g>
<g >
<title>std::locale::locale@plt (1 samples, 0.02%)</title><rect x="590.5" y="1973" width="0.2" height="15.0" fill="rgb(244,109,1)" rx="2" ry="2" />
<text  x="593.52" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="997" width="0.2" height="15.0" fill="rgb(244,6,21)" rx="2" ry="2" />
<text  x="130.52" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="885" width="0.2" height="15.0" fill="rgb(227,140,15)" rx="2" ry="2" />
<text  x="160.08" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (27 samples, 0.43%)</title><rect x="102.2" y="1717" width="5.0" height="15.0" fill="rgb(226,106,17)" rx="2" ry="2" />
<text  x="105.23" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1397" width="0.2" height="15.0" fill="rgb(238,18,44)" rx="2" ry="2" />
<text  x="130.52" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="126.4" y="1749" width="0.2" height="15.0" fill="rgb(228,193,49)" rx="2" ry="2" />
<text  x="129.40" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1317" width="0.2" height="15.0" fill="rgb(209,219,3)" rx="2" ry="2" />
<text  x="1170.31" y="1327.5" ></text>
</g>
<g >
<title>std::istream::get (3 samples, 0.05%)</title><rect x="1188.9" y="2053" width="0.5" height="15.0" fill="rgb(208,180,50)" rx="2" ry="2" />
<text  x="1191.88" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1205" width="0.2" height="15.0" fill="rgb(210,45,49)" rx="2" ry="2" />
<text  x="1170.50" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="613" width="0.2" height="15.0" fill="rgb(208,67,23)" rx="2" ry="2" />
<text  x="204.71" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (44 samples, 0.69%)</title><rect x="118.0" y="1797" width="8.2" height="15.0" fill="rgb(205,200,2)" rx="2" ry="2" />
<text  x="121.03" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="888.2" y="2021" width="0.2" height="15.0" fill="rgb(218,96,38)" rx="2" ry="2" />
<text  x="891.21" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="693" width="0.4" height="15.0" fill="rgb(232,21,54)" rx="2" ry="2" />
<text  x="75.85" y="703.5" ></text>
</g>
<g >
<title>from_json&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (2 samples, 0.03%)</title><rect x="597.6" y="1957" width="0.4" height="15.0" fill="rgb(253,19,13)" rx="2" ry="2" />
<text  x="600.58" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="485" width="0.2" height="15.0" fill="rgb(208,88,37)" rx="2" ry="2" />
<text  x="1170.50" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1141" width="0.2" height="15.0" fill="rgb(216,151,21)" rx="2" ry="2" />
<text  x="130.52" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1269" width="0.2" height="15.0" fill="rgb(214,210,26)" rx="2" ry="2" />
<text  x="130.52" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1941" width="0.2" height="15.0" fill="rgb(243,35,19)" rx="2" ry="2" />
<text  x="1170.31" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1119.5" y="2037" width="0.2" height="15.0" fill="rgb(244,33,24)" rx="2" ry="2" />
<text  x="1122.53" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1365" width="0.5" height="15.0" fill="rgb(243,19,11)" rx="2" ry="2" />
<text  x="1170.87" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="195.8" y="1685" width="0.1" height="15.0" fill="rgb(221,209,38)" rx="2" ry="2" />
<text  x="198.76" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="597" width="0.2" height="15.0" fill="rgb(252,35,38)" rx="2" ry="2" />
<text  x="204.89" y="607.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="173.6" y="1605" width="0.6" height="15.0" fill="rgb(245,67,28)" rx="2" ry="2" />
<text  x="176.63" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.02%)</title><rect x="934.9" y="2021" width="0.2" height="15.0" fill="rgb(205,208,47)" rx="2" ry="2" />
<text  x="937.88" y="2031.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1051.3" y="1957" width="0.2" height="15.0" fill="rgb(208,101,36)" rx="2" ry="2" />
<text  x="1054.29" y="1967.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="218.6" y="1989" width="0.4" height="15.0" fill="rgb(250,13,27)" rx="2" ry="2" />
<text  x="221.63" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="629" width="0.4" height="15.0" fill="rgb(245,72,17)" rx="2" ry="2" />
<text  x="75.85" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="126.4" y="1829" width="0.4" height="15.0" fill="rgb(252,113,16)" rx="2" ry="2" />
<text  x="129.40" y="1839.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (1 samples, 0.02%)</title><rect x="72.8" y="37" width="0.2" height="15.0" fill="rgb(221,85,43)" rx="2" ry="2" />
<text  x="75.85" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1237" width="0.2" height="15.0" fill="rgb(208,8,35)" rx="2" ry="2" />
<text  x="160.08" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="596.5" y="2005" width="0.3" height="15.0" fill="rgb(217,3,42)" rx="2" ry="2" />
<text  x="599.47" y="2015.5" ></text>
</g>
<g >
<title>strlen@plt (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(240,180,37)" rx="2" ry="2" />
<text  x="1192.81" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1717" width="0.5" height="15.0" fill="rgb(232,39,25)" rx="2" ry="2" />
<text  x="75.66" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1701" width="0.5" height="15.0" fill="rgb(240,184,51)" rx="2" ry="2" />
<text  x="75.66" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="485" width="0.4" height="15.0" fill="rgb(233,102,23)" rx="2" ry="2" />
<text  x="75.85" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="677" width="0.2" height="15.0" fill="rgb(244,164,22)" rx="2" ry="2" />
<text  x="131.07" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (8 samples, 0.13%)</title><rect x="1134.0" y="2053" width="1.5" height="15.0" fill="rgb(225,45,16)" rx="2" ry="2" />
<text  x="1137.03" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (23 samples, 0.36%)</title><rect x="162.7" y="1589" width="4.2" height="15.0" fill="rgb(249,54,27)" rx="2" ry="2" />
<text  x="165.66" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.3" y="1509" width="0.3" height="15.0" fill="rgb(211,11,16)" rx="2" ry="2" />
<text  x="160.27" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1141" width="0.5" height="15.0" fill="rgb(221,65,27)" rx="2" ry="2" />
<text  x="75.66" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1413" width="0.2" height="15.0" fill="rgb(220,138,46)" rx="2" ry="2" />
<text  x="1170.69" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="997" width="0.2" height="15.0" fill="rgb(230,224,43)" rx="2" ry="2" />
<text  x="160.08" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="357" width="0.2" height="15.0" fill="rgb(215,229,36)" rx="2" ry="2" />
<text  x="204.89" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (27 samples, 0.43%)</title><rect x="102.2" y="1637" width="5.0" height="15.0" fill="rgb(239,67,15)" rx="2" ry="2" />
<text  x="105.23" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="293" width="0.2" height="15.0" fill="rgb(248,88,26)" rx="2" ry="2" />
<text  x="1170.69" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="805" width="0.2" height="15.0" fill="rgb(250,191,9)" rx="2" ry="2" />
<text  x="204.89" y="815.5" ></text>
</g>
<g >
<title>syscall (13 samples, 0.20%)</title><rect x="35.3" y="2021" width="2.4" height="15.0" fill="rgb(249,1,34)" rx="2" ry="2" />
<text  x="38.29" y="2031.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set_case (1 samples, 0.02%)</title><rect x="602.2" y="1909" width="0.2" height="15.0" fill="rgb(252,48,20)" rx="2" ry="2" />
<text  x="605.23" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.7" y="1365" width="0.4" height="15.0" fill="rgb(246,167,54)" rx="2" ry="2" />
<text  x="204.71" y="1375.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="834.5" y="1829" width="0.2" height="15.0" fill="rgb(235,119,29)" rx="2" ry="2" />
<text  x="837.48" y="1839.5" ></text>
</g>
<g >
<title>copy_page_to_iter (3 samples, 0.05%)</title><rect x="910.7" y="1893" width="0.6" height="15.0" fill="rgb(251,155,5)" rx="2" ry="2" />
<text  x="913.71" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.3" y="1605" width="0.4" height="15.0" fill="rgb(233,155,9)" rx="2" ry="2" />
<text  x="130.33" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.2" y="1589" width="0.3" height="15.0" fill="rgb(223,169,38)" rx="2" ry="2" />
<text  x="204.15" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="72.5" y="1397" width="0.2" height="15.0" fill="rgb(216,110,3)" rx="2" ry="2" />
<text  x="75.48" y="1407.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="192.4" y="1701" width="0.2" height="15.0" fill="rgb(218,67,18)" rx="2" ry="2" />
<text  x="195.41" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="789" width="0.2" height="15.0" fill="rgb(222,226,41)" rx="2" ry="2" />
<text  x="130.52" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1221" width="0.2" height="15.0" fill="rgb(240,219,20)" rx="2" ry="2" />
<text  x="1170.50" y="1231.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (1,354 samples, 21.34%)</title><rect x="340.2" y="1989" width="251.8" height="15.0" fill="rgb(209,79,52)" rx="2" ry="2" />
<text  x="343.24" y="1999.5" >TSlinkClustering::ClusterBatch</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="469" width="0.2" height="15.0" fill="rgb(210,45,38)" rx="2" ry="2" />
<text  x="204.71" y="479.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (16 samples, 0.25%)</title><rect x="889.3" y="2053" width="3.0" height="15.0" fill="rgb(237,169,5)" rx="2" ry="2" />
<text  x="892.33" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1989" width="0.5" height="15.0" fill="rgb(207,175,36)" rx="2" ry="2" />
<text  x="1170.87" y="1999.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (2 samples, 0.03%)</title><rect x="603.5" y="1909" width="0.4" height="15.0" fill="rgb(223,70,52)" rx="2" ry="2" />
<text  x="606.53" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="1269" width="0.2" height="15.0" fill="rgb(227,69,1)" rx="2" ry="2" />
<text  x="204.71" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="405" width="0.2" height="15.0" fill="rgb(252,169,27)" rx="2" ry="2" />
<text  x="204.89" y="415.5" ></text>
</g>
<g >
<title>__libc_read (4 samples, 0.06%)</title><rect x="910.5" y="2053" width="0.8" height="15.0" fill="rgb(240,171,5)" rx="2" ry="2" />
<text  x="913.53" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (6 samples, 0.09%)</title><rect x="90.5" y="1909" width="1.1" height="15.0" fill="rgb(209,198,36)" rx="2" ry="2" />
<text  x="93.51" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="981" width="0.4" height="15.0" fill="rgb(229,70,11)" rx="2" ry="2" />
<text  x="130.89" y="991.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="136.3" y="1605" width="0.1" height="15.0" fill="rgb(206,107,10)" rx="2" ry="2" />
<text  x="139.26" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1333" width="0.2" height="15.0" fill="rgb(220,7,51)" rx="2" ry="2" />
<text  x="130.52" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (82 samples, 1.29%)</title><rect x="160.1" y="1749" width="15.2" height="15.0" fill="rgb(220,140,8)" rx="2" ry="2" />
<text  x="163.06" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="805" width="0.2" height="15.0" fill="rgb(206,106,20)" rx="2" ry="2" />
<text  x="204.71" y="815.5" ></text>
</g>
<g >
<title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="889.1" y="1861" width="0.2" height="15.0" fill="rgb(225,106,29)" rx="2" ry="2" />
<text  x="892.14" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1989" width="0.2" height="15.0" fill="rgb(236,109,33)" rx="2" ry="2" />
<text  x="1170.69" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28 samples, 0.44%)</title><rect x="112.6" y="1749" width="5.2" height="15.0" fill="rgb(235,204,52)" rx="2" ry="2" />
<text  x="115.64" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1109" width="0.2" height="15.0" fill="rgb(229,69,43)" rx="2" ry="2" />
<text  x="204.34" y="1119.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="593.5" y="1829" width="0.2" height="15.0" fill="rgb(210,112,15)" rx="2" ry="2" />
<text  x="596.49" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="325" width="0.5" height="15.0" fill="rgb(237,0,33)" rx="2" ry="2" />
<text  x="1170.87" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="144.3" y="1605" width="0.1" height="15.0" fill="rgb(240,8,49)" rx="2" ry="2" />
<text  x="147.25" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.2" y="1621" width="0.3" height="15.0" fill="rgb(248,38,29)" rx="2" ry="2" />
<text  x="204.15" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (35 samples, 0.55%)</title><rect x="881.5" y="2037" width="6.5" height="15.0" fill="rgb(217,11,11)" rx="2" ry="2" />
<text  x="884.52" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1541" width="0.2" height="15.0" fill="rgb(240,221,12)" rx="2" ry="2" />
<text  x="75.48" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="517" width="0.5" height="15.0" fill="rgb(214,93,16)" rx="2" ry="2" />
<text  x="1170.87" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1029" width="0.2" height="15.0" fill="rgb(216,79,33)" rx="2" ry="2" />
<text  x="204.34" y="1039.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.02%)</title><rect x="934.9" y="2005" width="0.2" height="15.0" fill="rgb(207,185,34)" rx="2" ry="2" />
<text  x="937.88" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.11%)</title><rect x="127.0" y="1893" width="1.3" height="15.0" fill="rgb(207,175,30)" rx="2" ry="2" />
<text  x="129.96" y="1903.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (1 samples, 0.02%)</title><rect x="888.0" y="2037" width="0.2" height="15.0" fill="rgb(224,42,9)" rx="2" ry="2" />
<text  x="891.03" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="565" width="0.2" height="15.0" fill="rgb(239,10,40)" rx="2" ry="2" />
<text  x="1170.69" y="575.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 48, 4, false, false&gt;::operator (29 samples, 0.46%)</title><rect x="412.0" y="1909" width="5.4" height="15.0" fill="rgb(213,182,7)" rx="2" ry="2" />
<text  x="415.01" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1285" width="0.5" height="15.0" fill="rgb(226,215,39)" rx="2" ry="2" />
<text  x="1170.87" y="1295.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="77.5" y="2021" width="0.4" height="15.0" fill="rgb(240,135,48)" rx="2" ry="2" />
<text  x="80.50" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (28 samples, 0.44%)</title><rect x="97.0" y="1701" width="5.2" height="15.0" fill="rgb(250,181,14)" rx="2" ry="2" />
<text  x="100.02" y="1711.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="95.7" y="1925" width="0.4" height="15.0" fill="rgb(239,77,36)" rx="2" ry="2" />
<text  x="98.72" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (15 samples, 0.24%)</title><rect x="114.7" y="1669" width="2.8" height="15.0" fill="rgb(250,77,15)" rx="2" ry="2" />
<text  x="117.69" y="1679.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (5 samples, 0.08%)</title><rect x="861.4" y="2037" width="1.0" height="15.0" fill="rgb(210,123,13)" rx="2" ry="2" />
<text  x="864.44" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="965" width="0.2" height="15.0" fill="rgb(247,182,53)" rx="2" ry="2" />
<text  x="1170.31" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="597" width="0.2" height="15.0" fill="rgb(245,181,27)" rx="2" ry="2" />
<text  x="204.71" y="607.5" ></text>
</g>
<g >
<title>operator new@plt (5 samples, 0.08%)</title><rect x="1124.5" y="2053" width="1.0" height="15.0" fill="rgb(243,8,39)" rx="2" ry="2" />
<text  x="1127.55" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1205" width="0.5" height="15.0" fill="rgb(211,124,14)" rx="2" ry="2" />
<text  x="75.66" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1445" width="0.1" height="15.0" fill="rgb(205,132,41)" rx="2" ry="2" />
<text  x="204.15" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="661" width="0.2" height="15.0" fill="rgb(220,86,29)" rx="2" ry="2" />
<text  x="1170.69" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="581" width="0.2" height="15.0" fill="rgb(205,30,9)" rx="2" ry="2" />
<text  x="1170.50" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="997" width="0.2" height="15.0" fill="rgb(222,10,0)" rx="2" ry="2" />
<text  x="1170.31" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="773" width="0.2" height="15.0" fill="rgb(239,2,49)" rx="2" ry="2" />
<text  x="1170.31" y="783.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1173" width="0.5" height="15.0" fill="rgb(242,10,40)" rx="2" ry="2" />
<text  x="75.66" y="1183.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.09%)</title><rect x="78.2" y="2005" width="1.2" height="15.0" fill="rgb(207,51,51)" rx="2" ry="2" />
<text  x="81.24" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="501" width="0.4" height="15.0" fill="rgb(207,96,6)" rx="2" ry="2" />
<text  x="75.85" y="511.5" ></text>
</g>
<g >
<title>std::locale::locale (2 samples, 0.03%)</title><rect x="590.1" y="1973" width="0.4" height="15.0" fill="rgb(215,168,0)" rx="2" ry="2" />
<text  x="593.14" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="757" width="0.2" height="15.0" fill="rgb(226,195,48)" rx="2" ry="2" />
<text  x="1170.50" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="101" width="0.2" height="15.0" fill="rgb(223,176,44)" rx="2" ry="2" />
<text  x="1170.50" y="111.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="185.7" y="1669" width="0.2" height="15.0" fill="rgb(245,202,39)" rx="2" ry="2" />
<text  x="188.72" y="1679.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="189.6" y="1653" width="0.2" height="15.0" fill="rgb(249,74,12)" rx="2" ry="2" />
<text  x="192.62" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (161 samples, 2.54%)</title><rect x="96.8" y="1925" width="30.0" height="15.0" fill="rgb(225,151,17)" rx="2" ry="2" />
<text  x="99.84" y="1935.5" >st..</text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1477" width="0.2" height="15.0" fill="rgb(243,49,9)" rx="2" ry="2" />
<text  x="75.48" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="901" width="0.5" height="15.0" fill="rgb(216,190,2)" rx="2" ry="2" />
<text  x="75.66" y="911.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="183.5" y="1637" width="0.2" height="15.0" fill="rgb(246,172,40)" rx="2" ry="2" />
<text  x="186.49" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1237" width="0.5" height="15.0" fill="rgb(209,122,8)" rx="2" ry="2" />
<text  x="75.66" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="421" width="0.2" height="15.0" fill="rgb(249,197,0)" rx="2" ry="2" />
<text  x="1170.69" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="277" width="0.2" height="15.0" fill="rgb(206,90,30)" rx="2" ry="2" />
<text  x="1170.31" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="2053" width="0.5" height="15.0" fill="rgb(241,28,16)" rx="2" ry="2" />
<text  x="1170.87" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1301" width="0.2" height="15.0" fill="rgb(230,134,29)" rx="2" ry="2" />
<text  x="204.34" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="1029" width="0.2" height="15.0" fill="rgb(206,83,40)" rx="2" ry="2" />
<text  x="204.89" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="325" width="0.2" height="15.0" fill="rgb(233,175,34)" rx="2" ry="2" />
<text  x="1170.50" y="335.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="97.6" y="1589" width="0.9" height="15.0" fill="rgb(231,105,14)" rx="2" ry="2" />
<text  x="100.58" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1621" width="0.4" height="15.0" fill="rgb(214,185,51)" rx="2" ry="2" />
<text  x="130.89" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="160.1" y="1669" width="0.5" height="15.0" fill="rgb(227,106,5)" rx="2" ry="2" />
<text  x="163.06" y="1679.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="174.4" y="1621" width="0.2" height="15.0" fill="rgb(212,174,54)" rx="2" ry="2" />
<text  x="177.37" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (46 samples, 0.72%)</title><rect x="160.1" y="1717" width="8.5" height="15.0" fill="rgb(243,20,44)" rx="2" ry="2" />
<text  x="163.06" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1125" width="0.2" height="15.0" fill="rgb(231,120,29)" rx="2" ry="2" />
<text  x="1170.50" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.7" y="1557" width="0.4" height="15.0" fill="rgb(241,97,39)" rx="2" ry="2" />
<text  x="204.71" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="453" width="0.2" height="15.0" fill="rgb(215,178,17)" rx="2" ry="2" />
<text  x="204.89" y="463.5" ></text>
</g>
<g >
<title>__exp_finite@plt (1 samples, 0.02%)</title><rect x="910.3" y="2053" width="0.2" height="15.0" fill="rgb(246,198,23)" rx="2" ry="2" />
<text  x="913.34" y="2063.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.02%)</title><rect x="721.6" y="1781" width="0.2" height="15.0" fill="rgb(213,135,22)" rx="2" ry="2" />
<text  x="724.61" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="421" width="0.2" height="15.0" fill="rgb(205,147,38)" rx="2" ry="2" />
<text  x="1170.31" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="200.6" y="1877" width="0.2" height="15.0" fill="rgb(209,126,52)" rx="2" ry="2" />
<text  x="203.59" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="885" width="0.2" height="15.0" fill="rgb(208,147,8)" rx="2" ry="2" />
<text  x="204.34" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (43 samples, 0.68%)</title><rect x="176.0" y="1749" width="8.0" height="15.0" fill="rgb(215,131,34)" rx="2" ry="2" />
<text  x="179.05" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1717" width="0.2" height="15.0" fill="rgb(226,9,16)" rx="2" ry="2" />
<text  x="1170.50" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="112.5" y="1717" width="0.1" height="15.0" fill="rgb(251,140,52)" rx="2" ry="2" />
<text  x="115.46" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1477" width="0.5" height="15.0" fill="rgb(239,6,10)" rx="2" ry="2" />
<text  x="75.66" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="373" width="0.2" height="15.0" fill="rgb(244,10,15)" rx="2" ry="2" />
<text  x="131.07" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="592.2" y="1781" width="0.2" height="15.0" fill="rgb(236,33,17)" rx="2" ry="2" />
<text  x="595.19" y="1791.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="635.7" y="1877" width="0.2" height="15.0" fill="rgb(251,224,27)" rx="2" ry="2" />
<text  x="638.70" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1669" width="0.5" height="15.0" fill="rgb(210,46,51)" rx="2" ry="2" />
<text  x="75.66" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="201.5" y="1765" width="0.6" height="15.0" fill="rgb(244,189,11)" rx="2" ry="2" />
<text  x="204.52" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (97 samples, 1.53%)</title><rect x="128.6" y="1765" width="18.1" height="15.0" fill="rgb(230,41,0)" rx="2" ry="2" />
<text  x="131.63" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1109" width="0.4" height="15.0" fill="rgb(244,51,32)" rx="2" ry="2" />
<text  x="130.89" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1013" width="0.2" height="15.0" fill="rgb(254,208,38)" rx="2" ry="2" />
<text  x="1170.50" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="709" width="0.2" height="15.0" fill="rgb(224,116,38)" rx="2" ry="2" />
<text  x="204.71" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1941" width="0.2" height="15.0" fill="rgb(231,98,52)" rx="2" ry="2" />
<text  x="1170.50" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1493" width="0.2" height="15.0" fill="rgb(249,130,32)" rx="2" ry="2" />
<text  x="130.52" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1781" width="0.2" height="15.0" fill="rgb(213,28,49)" rx="2" ry="2" />
<text  x="1170.69" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1093" width="0.1" height="15.0" fill="rgb(249,210,33)" rx="2" ry="2" />
<text  x="204.15" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1637" width="0.5" height="15.0" fill="rgb(242,124,40)" rx="2" ry="2" />
<text  x="75.66" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::future&lt;std::result_of&lt;Annotate (1 samples, 0.02%)</title><rect x="35.1" y="2021" width="0.2" height="15.0" fill="rgb(208,168,39)" rx="2" ry="2" />
<text  x="38.10" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="2005" width="0.5" height="15.0" fill="rgb(220,156,9)" rx="2" ry="2" />
<text  x="75.66" y="2015.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5 samples, 0.08%)</title><rect x="78.2" y="1861" width="1.0" height="15.0" fill="rgb(211,170,30)" rx="2" ry="2" />
<text  x="81.24" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1813" width="0.5" height="15.0" fill="rgb(242,61,41)" rx="2" ry="2" />
<text  x="75.66" y="1823.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="197.8" y="1701" width="0.2" height="15.0" fill="rgb(214,180,31)" rx="2" ry="2" />
<text  x="200.80" y="1711.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (1 samples, 0.02%)</title><rect x="82.7" y="1941" width="0.2" height="15.0" fill="rgb(241,183,24)" rx="2" ry="2" />
<text  x="85.70" y="1951.5" ></text>
</g>
<g >
<title>handle_mm_fault (13 samples, 0.20%)</title><rect x="719.9" y="1813" width="2.5" height="15.0" fill="rgb(209,181,50)" rx="2" ry="2" />
<text  x="722.93" y="1823.5" ></text>
</g>
<g >
<title>wake_up_q (9 samples, 0.14%)</title><rect x="35.8" y="1925" width="1.7" height="15.0" fill="rgb(228,207,13)" rx="2" ry="2" />
<text  x="38.85" y="1935.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt;, 7, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (1 samples, 0.02%)</title><rect x="212.9" y="1973" width="0.2" height="15.0" fill="rgb(214,173,14)" rx="2" ry="2" />
<text  x="215.86" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="165" width="0.2" height="15.0" fill="rgb(220,177,40)" rx="2" ry="2" />
<text  x="1170.50" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="517" width="0.2" height="15.0" fill="rgb(239,11,0)" rx="2" ry="2" />
<text  x="204.71" y="527.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (2 samples, 0.03%)</title><rect x="765.3" y="1893" width="0.4" height="15.0" fill="rgb(221,171,43)" rx="2" ry="2" />
<text  x="768.30" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="549" width="0.5" height="15.0" fill="rgb(225,41,7)" rx="2" ry="2" />
<text  x="1170.87" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="934.9" y="2037" width="0.2" height="15.0" fill="rgb(239,67,49)" rx="2" ry="2" />
<text  x="937.88" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1397" width="0.5" height="15.0" fill="rgb(224,95,21)" rx="2" ry="2" />
<text  x="1170.87" y="1407.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="202.1" y="1973" width="0.2" height="15.0" fill="rgb(215,99,3)" rx="2" ry="2" />
<text  x="205.08" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="229" width="0.2" height="15.0" fill="rgb(242,109,54)" rx="2" ry="2" />
<text  x="204.71" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1589" width="0.4" height="15.0" fill="rgb(208,95,13)" rx="2" ry="2" />
<text  x="130.89" y="1599.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (6 samples, 0.09%)</title><rect x="824.8" y="1893" width="1.1" height="15.0" fill="rgb(253,63,54)" rx="2" ry="2" />
<text  x="827.81" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1573" width="0.4" height="15.0" fill="rgb(207,229,1)" rx="2" ry="2" />
<text  x="130.89" y="1583.5" ></text>
</g>
<g >
<title>alloc_pages_vma (9 samples, 0.14%)</title><rect x="719.9" y="1781" width="1.7" height="15.0" fill="rgb(217,156,54)" rx="2" ry="2" />
<text  x="722.93" y="1791.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="140.3" y="1605" width="0.2" height="15.0" fill="rgb(245,133,19)" rx="2" ry="2" />
<text  x="143.35" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1173" width="0.2" height="15.0" fill="rgb(241,45,9)" rx="2" ry="2" />
<text  x="1170.31" y="1183.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1813" width="0.2" height="15.0" fill="rgb(223,129,30)" rx="2" ry="2" />
<text  x="75.48" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.49%)</title><rect x="150.4" y="1749" width="5.8" height="15.0" fill="rgb(243,180,5)" rx="2" ry="2" />
<text  x="153.39" y="1759.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="155.0" y="1669" width="0.2" height="15.0" fill="rgb(206,37,44)" rx="2" ry="2" />
<text  x="158.04" y="1679.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.09%)</title><rect x="592.4" y="2005" width="1.1" height="15.0" fill="rgb(238,162,25)" rx="2" ry="2" />
<text  x="595.38" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="127.1" y="1781" width="1.2" height="15.0" fill="rgb(212,217,9)" rx="2" ry="2" />
<text  x="130.14" y="1791.5" ></text>
</g>
<g >
<title>__pte_alloc (1 samples, 0.02%)</title><rect x="862.2" y="1941" width="0.2" height="15.0" fill="rgb(227,204,26)" rx="2" ry="2" />
<text  x="865.18" y="1951.5" ></text>
</g>
<g >
<title>cfree (126 samples, 1.99%)</title><rect x="911.5" y="2053" width="23.4" height="15.0" fill="rgb(250,36,16)" rx="2" ry="2" />
<text  x="914.46" y="2063.5" >c..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.2" y="1605" width="0.3" height="15.0" fill="rgb(239,210,46)" rx="2" ry="2" />
<text  x="204.15" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="741" width="0.4" height="15.0" fill="rgb(216,93,46)" rx="2" ry="2" />
<text  x="75.85" y="751.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="172.5" y="1605" width="0.4" height="15.0" fill="rgb(228,210,49)" rx="2" ry="2" />
<text  x="175.51" y="1615.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.02%)</title><rect x="934.9" y="1957" width="0.2" height="15.0" fill="rgb(232,72,48)" rx="2" ry="2" />
<text  x="937.88" y="1967.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="133.5" y="1557" width="0.2" height="15.0" fill="rgb(238,30,15)" rx="2" ry="2" />
<text  x="136.47" y="1567.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (12 samples, 0.19%)</title><rect x="421.1" y="1845" width="2.3" height="15.0" fill="rgb(246,91,27)" rx="2" ry="2" />
<text  x="424.12" y="1855.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="96.6" y="1941" width="0.2" height="15.0" fill="rgb(230,106,46)" rx="2" ry="2" />
<text  x="99.65" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1013" width="0.2" height="15.0" fill="rgb(237,93,7)" rx="2" ry="2" />
<text  x="1170.31" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="501" width="0.2" height="15.0" fill="rgb(241,168,17)" rx="2" ry="2" />
<text  x="1170.31" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1493" width="0.4" height="15.0" fill="rgb(211,161,28)" rx="2" ry="2" />
<text  x="130.89" y="1503.5" ></text>
</g>
<g >
<title>page_fault (15 samples, 0.24%)</title><rect x="719.6" y="1861" width="2.8" height="15.0" fill="rgb(222,64,3)" rx="2" ry="2" />
<text  x="722.56" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="309" width="0.2" height="15.0" fill="rgb(211,177,5)" rx="2" ry="2" />
<text  x="1170.69" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.7" y="1589" width="0.4" height="15.0" fill="rgb(206,1,21)" rx="2" ry="2" />
<text  x="204.71" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1733" width="0.5" height="15.0" fill="rgb(249,34,36)" rx="2" ry="2" />
<text  x="1170.87" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1445" width="0.2" height="15.0" fill="rgb(229,11,10)" rx="2" ry="2" />
<text  x="160.27" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1189" width="0.2" height="15.0" fill="rgb(242,205,9)" rx="2" ry="2" />
<text  x="1170.69" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (31 samples, 0.49%)</title><rect x="140.5" y="1637" width="5.8" height="15.0" fill="rgb(216,148,12)" rx="2" ry="2" />
<text  x="143.53" y="1647.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="101.3" y="1573" width="0.2" height="15.0" fill="rgb(230,27,50)" rx="2" ry="2" />
<text  x="104.30" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="133" width="0.2" height="15.0" fill="rgb(213,89,3)" rx="2" ry="2" />
<text  x="204.89" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="885" width="0.2" height="15.0" fill="rgb(254,78,8)" rx="2" ry="2" />
<text  x="131.07" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="949" width="0.5" height="15.0" fill="rgb(254,128,13)" rx="2" ry="2" />
<text  x="1170.87" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1941" width="0.5" height="15.0" fill="rgb(250,54,43)" rx="2" ry="2" />
<text  x="1170.87" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (4 samples, 0.06%)</title><rect x="323.7" y="1989" width="0.7" height="15.0" fill="rgb(224,161,36)" rx="2" ry="2" />
<text  x="326.69" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1413" width="0.1" height="15.0" fill="rgb(206,26,2)" rx="2" ry="2" />
<text  x="160.45" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="373" width="0.2" height="15.0" fill="rgb(242,31,10)" rx="2" ry="2" />
<text  x="1170.69" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1669" width="0.2" height="15.0" fill="rgb(245,65,38)" rx="2" ry="2" />
<text  x="1170.69" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1461" width="0.2" height="15.0" fill="rgb(236,50,54)" rx="2" ry="2" />
<text  x="1170.69" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (49 samples, 0.77%)</title><rect x="191.1" y="1781" width="9.1" height="15.0" fill="rgb(254,219,29)" rx="2" ry="2" />
<text  x="194.11" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="325" width="0.2" height="15.0" fill="rgb(219,6,6)" rx="2" ry="2" />
<text  x="1170.69" y="335.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="149" width="0.4" height="15.0" fill="rgb(240,49,19)" rx="2" ry="2" />
<text  x="75.85" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1973" width="0.2" height="15.0" fill="rgb(244,67,39)" rx="2" ry="2" />
<text  x="1170.31" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1653" width="0.2" height="15.0" fill="rgb(212,36,28)" rx="2" ry="2" />
<text  x="1170.31" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="1205" width="0.2" height="15.0" fill="rgb(210,29,23)" rx="2" ry="2" />
<text  x="204.71" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="693" width="0.2" height="15.0" fill="rgb(209,217,43)" rx="2" ry="2" />
<text  x="204.71" y="703.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="218.4" y="1989" width="0.2" height="15.0" fill="rgb(235,180,2)" rx="2" ry="2" />
<text  x="221.44" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1525" width="0.5" height="15.0" fill="rgb(211,150,50)" rx="2" ry="2" />
<text  x="1170.87" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="341" width="0.5" height="15.0" fill="rgb(222,215,31)" rx="2" ry="2" />
<text  x="1170.87" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1285" width="0.2" height="15.0" fill="rgb(223,91,23)" rx="2" ry="2" />
<text  x="1170.69" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (14 samples, 0.22%)</title><rect x="152.6" y="1685" width="2.6" height="15.0" fill="rgb(224,224,8)" rx="2" ry="2" />
<text  x="155.62" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="450.3" y="1957" width="0.4" height="15.0" fill="rgb(221,195,51)" rx="2" ry="2" />
<text  x="453.32" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="581" width="0.2" height="15.0" fill="rgb(226,175,37)" rx="2" ry="2" />
<text  x="131.07" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="156.2" y="1813" width="0.1" height="15.0" fill="rgb(233,215,31)" rx="2" ry="2" />
<text  x="159.15" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1397" width="0.2" height="15.0" fill="rgb(232,69,24)" rx="2" ry="2" />
<text  x="1170.50" y="1407.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.06%)</title><rect x="686.1" y="1877" width="0.7" height="15.0" fill="rgb(253,171,33)" rx="2" ry="2" />
<text  x="689.09" y="1887.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="889.1" y="1957" width="0.2" height="15.0" fill="rgb(239,33,6)" rx="2" ry="2" />
<text  x="892.14" y="1967.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="117.3" y="1653" width="0.2" height="15.0" fill="rgb(208,4,48)" rx="2" ry="2" />
<text  x="120.29" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="837" width="0.2" height="15.0" fill="rgb(214,164,44)" rx="2" ry="2" />
<text  x="130.52" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="677" width="0.2" height="15.0" fill="rgb(224,200,27)" rx="2" ry="2" />
<text  x="204.89" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (7 samples, 0.11%)</title><rect x="127.0" y="1957" width="1.3" height="15.0" fill="rgb(243,58,32)" rx="2" ry="2" />
<text  x="129.96" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="501" width="0.2" height="15.0" fill="rgb(242,208,18)" rx="2" ry="2" />
<text  x="204.89" y="511.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="677" width="0.4" height="15.0" fill="rgb(219,5,34)" rx="2" ry="2" />
<text  x="75.85" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="105.4" y="1605" width="0.2" height="15.0" fill="rgb(207,164,31)" rx="2" ry="2" />
<text  x="108.39" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="661" width="0.5" height="15.0" fill="rgb(221,2,29)" rx="2" ry="2" />
<text  x="1170.87" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="901" width="0.5" height="15.0" fill="rgb(250,181,4)" rx="2" ry="2" />
<text  x="1170.87" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="1189" width="0.2" height="15.0" fill="rgb(222,99,42)" rx="2" ry="2" />
<text  x="204.89" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="485" width="0.5" height="15.0" fill="rgb(246,123,30)" rx="2" ry="2" />
<text  x="1170.87" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1413" width="0.2" height="15.0" fill="rgb(249,47,40)" rx="2" ry="2" />
<text  x="160.08" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="277" width="0.2" height="15.0" fill="rgb(222,109,53)" rx="2" ry="2" />
<text  x="204.71" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="200.4" y="1797" width="0.2" height="15.0" fill="rgb(211,103,37)" rx="2" ry="2" />
<text  x="203.41" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1077" width="0.5" height="15.0" fill="rgb(243,223,34)" rx="2" ry="2" />
<text  x="75.66" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="149" width="0.5" height="15.0" fill="rgb(215,87,35)" rx="2" ry="2" />
<text  x="1170.87" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1269" width="0.2" height="15.0" fill="rgb(247,201,24)" rx="2" ry="2" />
<text  x="1170.50" y="1279.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="198.0" y="1701" width="0.2" height="15.0" fill="rgb(248,131,30)" rx="2" ry="2" />
<text  x="200.99" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1413" width="0.2" height="15.0" fill="rgb(232,126,14)" rx="2" ry="2" />
<text  x="1170.31" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="126.4" y="1813" width="0.2" height="15.0" fill="rgb(224,107,35)" rx="2" ry="2" />
<text  x="129.40" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1317" width="0.2" height="15.0" fill="rgb(213,77,17)" rx="2" ry="2" />
<text  x="160.08" y="1327.5" ></text>
</g>
<g >
<title>__do_page_fault (30 samples, 0.47%)</title><rect x="419.4" y="1909" width="5.6" height="15.0" fill="rgb(215,145,36)" rx="2" ry="2" />
<text  x="422.45" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="277" width="0.2" height="15.0" fill="rgb(227,167,41)" rx="2" ry="2" />
<text  x="131.07" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (26 samples, 0.41%)</title><rect x="193.0" y="1701" width="4.8" height="15.0" fill="rgb(248,112,35)" rx="2" ry="2" />
<text  x="195.97" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (160 samples, 2.52%)</title><rect x="97.0" y="1909" width="29.8" height="15.0" fill="rgb(220,43,3)" rx="2" ry="2" />
<text  x="100.02" y="1919.5" >st..</text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="174.2" y="1621" width="0.2" height="15.0" fill="rgb(211,140,19)" rx="2" ry="2" />
<text  x="177.19" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (27 samples, 0.43%)</title><rect x="107.2" y="1653" width="5.1" height="15.0" fill="rgb(244,66,54)" rx="2" ry="2" />
<text  x="110.25" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1333" width="0.4" height="15.0" fill="rgb(211,9,34)" rx="2" ry="2" />
<text  x="130.89" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="293" width="0.2" height="15.0" fill="rgb(251,193,6)" rx="2" ry="2" />
<text  x="204.71" y="303.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="155.2" y="1685" width="0.4" height="15.0" fill="rgb(240,35,40)" rx="2" ry="2" />
<text  x="158.22" y="1695.5" ></text>
</g>
<g >
<title>unlock_page (1 samples, 0.02%)</title><rect x="889.1" y="1813" width="0.2" height="15.0" fill="rgb(208,153,48)" rx="2" ry="2" />
<text  x="892.14" y="1823.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (22 samples, 0.35%)</title><rect x="33.6" y="2053" width="4.1" height="15.0" fill="rgb(219,210,13)" rx="2" ry="2" />
<text  x="36.61" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="949" width="0.2" height="15.0" fill="rgb(213,210,28)" rx="2" ry="2" />
<text  x="1170.31" y="959.5" ></text>
</g>
<g >
<title>__munmap (2 samples, 0.03%)</title><rect x="450.3" y="1973" width="0.4" height="15.0" fill="rgb(241,104,7)" rx="2" ry="2" />
<text  x="453.32" y="1983.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="647.8" y="1861" width="0.2" height="15.0" fill="rgb(231,189,0)" rx="2" ry="2" />
<text  x="650.79" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1061" width="0.2" height="15.0" fill="rgb(218,42,39)" rx="2" ry="2" />
<text  x="1170.69" y="1071.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (1 samples, 0.02%)</title><rect x="857.5" y="1957" width="0.2" height="15.0" fill="rgb(242,214,19)" rx="2" ry="2" />
<text  x="860.53" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1109" width="0.1" height="15.0" fill="rgb(207,84,8)" rx="2" ry="2" />
<text  x="160.45" y="1119.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (1 samples, 0.02%)</title><rect x="593.9" y="1989" width="0.1" height="15.0" fill="rgb(209,37,27)" rx="2" ry="2" />
<text  x="596.86" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (32 samples, 0.50%)</title><rect x="140.5" y="1653" width="6.0" height="15.0" fill="rgb(225,158,10)" rx="2" ry="2" />
<text  x="143.53" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="127.7" y="1685" width="0.6" height="15.0" fill="rgb(228,111,47)" rx="2" ry="2" />
<text  x="130.70" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="122.5" y="1685" width="0.4" height="15.0" fill="rgb(218,125,6)" rx="2" ry="2" />
<text  x="125.50" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1845" width="0.2" height="15.0" fill="rgb(224,203,2)" rx="2" ry="2" />
<text  x="1170.50" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1333" width="0.5" height="15.0" fill="rgb(212,224,34)" rx="2" ry="2" />
<text  x="1170.87" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="549" width="0.2" height="15.0" fill="rgb(216,182,51)" rx="2" ry="2" />
<text  x="131.07" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="201.0" y="1765" width="0.5" height="15.0" fill="rgb(223,169,8)" rx="2" ry="2" />
<text  x="203.96" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (3 samples, 0.05%)</title><rect x="649.6" y="1877" width="0.6" height="15.0" fill="rgb(219,53,43)" rx="2" ry="2" />
<text  x="652.65" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1749" width="0.5" height="15.0" fill="rgb(217,136,25)" rx="2" ry="2" />
<text  x="1170.87" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="933" width="0.2" height="15.0" fill="rgb(236,151,2)" rx="2" ry="2" />
<text  x="130.52" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="592.0" y="1957" width="0.4" height="15.0" fill="rgb(247,42,11)" rx="2" ry="2" />
<text  x="595.00" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="485" width="0.2" height="15.0" fill="rgb(239,164,10)" rx="2" ry="2" />
<text  x="204.71" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="173.3" y="1605" width="0.3" height="15.0" fill="rgb(250,175,28)" rx="2" ry="2" />
<text  x="176.26" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="157.1" y="1589" width="0.5" height="15.0" fill="rgb(225,58,43)" rx="2" ry="2" />
<text  x="160.08" y="1599.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="592.2" y="1829" width="0.2" height="15.0" fill="rgb(231,47,12)" rx="2" ry="2" />
<text  x="595.19" y="1839.5" ></text>
</g>
<g >
<title>futex_wake (10 samples, 0.16%)</title><rect x="35.7" y="1941" width="1.8" height="15.0" fill="rgb(208,92,16)" rx="2" ry="2" />
<text  x="38.66" y="1951.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::~num_put (1 samples, 0.02%)</title><rect x="888.2" y="2037" width="0.2" height="15.0" fill="rgb(235,33,34)" rx="2" ry="2" />
<text  x="891.21" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="533" width="0.5" height="15.0" fill="rgb(253,41,51)" rx="2" ry="2" />
<text  x="1170.87" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1845" width="0.2" height="15.0" fill="rgb(241,129,8)" rx="2" ry="2" />
<text  x="1170.69" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="821" width="0.2" height="15.0" fill="rgb(238,142,35)" rx="2" ry="2" />
<text  x="204.71" y="831.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (3 samples, 0.05%)</title><rect x="94.4" y="1893" width="0.6" height="15.0" fill="rgb(207,201,51)" rx="2" ry="2" />
<text  x="97.42" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1109" width="0.5" height="15.0" fill="rgb(218,4,49)" rx="2" ry="2" />
<text  x="1170.87" y="1119.5" ></text>
</g>
<g >
<title>swake_up_one (1 samples, 0.02%)</title><rect x="719.4" y="1749" width="0.2" height="15.0" fill="rgb(239,223,23)" rx="2" ry="2" />
<text  x="722.38" y="1759.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="72.1" y="2021" width="0.2" height="15.0" fill="rgb(235,210,48)" rx="2" ry="2" />
<text  x="75.11" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1157" width="0.5" height="15.0" fill="rgb(248,110,18)" rx="2" ry="2" />
<text  x="75.66" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="741" width="0.5" height="15.0" fill="rgb(209,52,34)" rx="2" ry="2" />
<text  x="1170.87" y="751.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="140.5" y="1621" width="1.0" height="15.0" fill="rgb(208,208,24)" rx="2" ry="2" />
<text  x="143.53" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="805" width="0.4" height="15.0" fill="rgb(246,162,6)" rx="2" ry="2" />
<text  x="75.85" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="613" width="0.2" height="15.0" fill="rgb(232,178,8)" rx="2" ry="2" />
<text  x="130.52" y="623.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (232 samples, 3.66%)</title><rect x="159.5" y="1989" width="43.1" height="15.0" fill="rgb(213,205,17)" rx="2" ry="2" />
<text  x="162.50" y="1999.5" >TAge..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="197" width="0.2" height="15.0" fill="rgb(247,71,27)" rx="2" ry="2" />
<text  x="1170.50" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="146.5" y="1733" width="0.2" height="15.0" fill="rgb(217,187,38)" rx="2" ry="2" />
<text  x="149.48" y="1743.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="592.2" y="1813" width="0.2" height="15.0" fill="rgb(242,105,51)" rx="2" ry="2" />
<text  x="595.19" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (151 samples, 2.38%)</title><rect x="128.6" y="1893" width="28.1" height="15.0" fill="rgb(226,54,4)" rx="2" ry="2" />
<text  x="131.63" y="1903.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (44 samples, 0.69%)</title><rect x="118.0" y="1781" width="8.2" height="15.0" fill="rgb(218,81,51)" rx="2" ry="2" />
<text  x="121.03" y="1791.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.09%)</title><rect x="194.6" y="1685" width="1.2" height="15.0" fill="rgb(244,33,24)" rx="2" ry="2" />
<text  x="197.64" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="1301" width="0.2" height="15.0" fill="rgb(252,105,54)" rx="2" ry="2" />
<text  x="204.89" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="981" width="0.2" height="15.0" fill="rgb(209,116,50)" rx="2" ry="2" />
<text  x="204.34" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (43 samples, 0.68%)</title><rect x="176.0" y="1717" width="8.0" height="15.0" fill="rgb(231,179,26)" rx="2" ry="2" />
<text  x="179.05" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::underflow (1 samples, 0.02%)</title><rect x="1145.7" y="2053" width="0.2" height="15.0" fill="rgb(253,125,11)" rx="2" ry="2" />
<text  x="1148.75" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.03%)</title><rect x="874.8" y="2005" width="0.4" height="15.0" fill="rgb(232,184,14)" rx="2" ry="2" />
<text  x="877.83" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1413" width="0.2" height="15.0" fill="rgb(209,195,6)" rx="2" ry="2" />
<text  x="130.52" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (162 samples, 2.55%)</title><rect x="96.8" y="1957" width="30.2" height="15.0" fill="rgb(254,28,46)" rx="2" ry="2" />
<text  x="99.84" y="1967.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1189" width="0.2" height="15.0" fill="rgb(225,188,14)" rx="2" ry="2" />
<text  x="1170.50" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="453" width="0.2" height="15.0" fill="rgb(223,90,1)" rx="2" ry="2" />
<text  x="204.71" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1397" width="0.2" height="15.0" fill="rgb(243,189,22)" rx="2" ry="2" />
<text  x="160.08" y="1407.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="79.2" y="1829" width="0.2" height="15.0" fill="rgb(233,142,8)" rx="2" ry="2" />
<text  x="82.17" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (4 samples, 0.06%)</title><rect x="874.1" y="2037" width="0.7" height="15.0" fill="rgb(251,165,30)" rx="2" ry="2" />
<text  x="877.08" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1429" width="0.2" height="15.0" fill="rgb(241,169,22)" rx="2" ry="2" />
<text  x="75.48" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="789" width="0.4" height="15.0" fill="rgb(249,107,12)" rx="2" ry="2" />
<text  x="75.85" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="885" width="0.2" height="15.0" fill="rgb(224,44,27)" rx="2" ry="2" />
<text  x="1170.69" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1157" width="0.2" height="15.0" fill="rgb(230,31,16)" rx="2" ry="2" />
<text  x="130.52" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="156.3" y="1781" width="0.2" height="15.0" fill="rgb(236,148,23)" rx="2" ry="2" />
<text  x="159.34" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (3 samples, 0.05%)</title><rect x="648.5" y="1861" width="0.6" height="15.0" fill="rgb(218,64,0)" rx="2" ry="2" />
<text  x="651.53" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="175.3" y="1749" width="0.4" height="15.0" fill="rgb(234,188,3)" rx="2" ry="2" />
<text  x="178.30" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (31 samples, 0.49%)</title><rect x="134.8" y="1701" width="5.7" height="15.0" fill="rgb(220,170,34)" rx="2" ry="2" />
<text  x="137.77" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.2" y="1669" width="0.3" height="15.0" fill="rgb(248,198,50)" rx="2" ry="2" />
<text  x="204.15" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="405" width="0.2" height="15.0" fill="rgb(241,134,17)" rx="2" ry="2" />
<text  x="204.71" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="741" width="0.2" height="15.0" fill="rgb(236,138,30)" rx="2" ry="2" />
<text  x="1170.69" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (1 samples, 0.02%)</title><rect x="840.6" y="1893" width="0.2" height="15.0" fill="rgb(223,29,0)" rx="2" ry="2" />
<text  x="843.61" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="469" width="0.2" height="15.0" fill="rgb(232,0,35)" rx="2" ry="2" />
<text  x="131.07" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="533" width="0.2" height="15.0" fill="rgb(234,150,0)" rx="2" ry="2" />
<text  x="204.34" y="543.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1509" width="0.2" height="15.0" fill="rgb(224,66,16)" rx="2" ry="2" />
<text  x="75.48" y="1519.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.05%)</title><rect x="721.8" y="1765" width="0.6" height="15.0" fill="rgb(250,22,5)" rx="2" ry="2" />
<text  x="724.79" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="565" width="0.5" height="15.0" fill="rgb(221,93,44)" rx="2" ry="2" />
<text  x="1170.87" y="575.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1621" width="0.2" height="15.0" fill="rgb(207,36,7)" rx="2" ry="2" />
<text  x="75.48" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="101" width="0.5" height="15.0" fill="rgb(250,91,29)" rx="2" ry="2" />
<text  x="1170.87" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="157.1" y="1573" width="0.5" height="15.0" fill="rgb(230,197,14)" rx="2" ry="2" />
<text  x="160.08" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.50%)</title><rect x="72.3" y="2037" width="5.9" height="15.0" fill="rgb(205,194,5)" rx="2" ry="2" />
<text  x="75.29" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.24%)</title><rect x="881.5" y="1989" width="2.8" height="15.0" fill="rgb(224,211,23)" rx="2" ry="2" />
<text  x="884.52" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1269" width="0.4" height="15.0" fill="rgb(214,56,7)" rx="2" ry="2" />
<text  x="130.89" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1701" width="0.2" height="15.0" fill="rgb(209,194,42)" rx="2" ry="2" />
<text  x="1170.50" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (46 samples, 0.72%)</title><rect x="160.1" y="1733" width="8.5" height="15.0" fill="rgb(234,166,46)" rx="2" ry="2" />
<text  x="163.06" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="293" width="0.2" height="15.0" fill="rgb(224,117,54)" rx="2" ry="2" />
<text  x="131.07" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (29 samples, 0.46%)</title><rect x="107.2" y="1749" width="5.4" height="15.0" fill="rgb(236,107,22)" rx="2" ry="2" />
<text  x="110.25" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="533" width="0.4" height="15.0" fill="rgb(227,107,44)" rx="2" ry="2" />
<text  x="75.85" y="543.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (1,406 samples, 22.16%)</title><rect x="596.8" y="2021" width="261.5" height="15.0" fill="rgb(250,124,32)" rx="2" ry="2" />
<text  x="599.84" y="2031.5" >std::__future_base::_State_baseV2:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.7" y="1605" width="0.4" height="15.0" fill="rgb(222,184,36)" rx="2" ry="2" />
<text  x="204.71" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="85" width="0.2" height="15.0" fill="rgb(240,21,40)" rx="2" ry="2" />
<text  x="1170.50" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1381" width="0.1" height="15.0" fill="rgb(207,4,13)" rx="2" ry="2" />
<text  x="204.15" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1189" width="0.1" height="15.0" fill="rgb(214,69,23)" rx="2" ry="2" />
<text  x="160.45" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (31 samples, 0.49%)</title><rect x="150.4" y="1733" width="5.8" height="15.0" fill="rgb(211,152,32)" rx="2" ry="2" />
<text  x="153.39" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1557" width="0.5" height="15.0" fill="rgb(224,84,14)" rx="2" ry="2" />
<text  x="1170.87" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (28 samples, 0.44%)</title><rect x="129.2" y="1605" width="5.2" height="15.0" fill="rgb(214,223,16)" rx="2" ry="2" />
<text  x="132.19" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1093" width="0.2" height="15.0" fill="rgb(231,155,1)" rx="2" ry="2" />
<text  x="204.34" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="789" width="0.2" height="15.0" fill="rgb(209,108,50)" rx="2" ry="2" />
<text  x="1170.31" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="773" width="0.2" height="15.0" fill="rgb(214,225,11)" rx="2" ry="2" />
<text  x="1170.69" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="437" width="0.5" height="15.0" fill="rgb(233,92,7)" rx="2" ry="2" />
<text  x="1170.87" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1893" width="0.5" height="15.0" fill="rgb(228,170,51)" rx="2" ry="2" />
<text  x="1170.87" y="1903.5" ></text>
</g>
<g >
<title>__handle_mm_fault (13 samples, 0.20%)</title><rect x="719.9" y="1797" width="2.5" height="15.0" fill="rgb(243,170,7)" rx="2" ry="2" />
<text  x="722.93" y="1807.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (1,406 samples, 22.16%)</title><rect x="596.8" y="1989" width="261.5" height="15.0" fill="rgb(246,198,35)" rx="2" ry="2" />
<text  x="599.84" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Annotate</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1509" width="0.2" height="15.0" fill="rgb(214,56,36)" rx="2" ry="2" />
<text  x="204.34" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (49 samples, 0.77%)</title><rect x="191.1" y="1749" width="9.1" height="15.0" fill="rgb(212,15,51)" rx="2" ry="2" />
<text  x="194.11" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1013" width="0.2" height="15.0" fill="rgb(242,187,36)" rx="2" ry="2" />
<text  x="1170.69" y="1023.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="95.7" y="1861" width="0.4" height="15.0" fill="rgb(244,113,9)" rx="2" ry="2" />
<text  x="98.72" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="157.1" y="1605" width="0.5" height="15.0" fill="rgb(217,17,1)" rx="2" ry="2" />
<text  x="160.08" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1029" width="0.2" height="15.0" fill="rgb(235,59,45)" rx="2" ry="2" />
<text  x="1170.69" y="1039.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1669" width="0.2" height="15.0" fill="rgb(230,228,3)" rx="2" ry="2" />
<text  x="75.48" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="261" width="0.2" height="15.0" fill="rgb(254,192,0)" rx="2" ry="2" />
<text  x="131.07" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="677" width="0.2" height="15.0" fill="rgb(245,47,51)" rx="2" ry="2" />
<text  x="130.52" y="687.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="77.1" y="2021" width="0.4" height="15.0" fill="rgb(254,207,17)" rx="2" ry="2" />
<text  x="80.13" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1317" width="0.4" height="15.0" fill="rgb(242,130,54)" rx="2" ry="2" />
<text  x="130.89" y="1327.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="111.7" y="1637" width="0.2" height="15.0" fill="rgb(220,47,6)" rx="2" ry="2" />
<text  x="114.71" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1477" width="0.4" height="15.0" fill="rgb(243,219,7)" rx="2" ry="2" />
<text  x="130.89" y="1487.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.02%)</title><rect x="934.9" y="1973" width="0.2" height="15.0" fill="rgb(218,74,2)" rx="2" ry="2" />
<text  x="937.88" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="719.4" y="1813" width="0.2" height="15.0" fill="rgb(254,221,21)" rx="2" ry="2" />
<text  x="722.38" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1541" width="0.2" height="15.0" fill="rgb(231,3,13)" rx="2" ry="2" />
<text  x="160.08" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (166 samples, 2.62%)</title><rect x="160.1" y="1797" width="30.8" height="15.0" fill="rgb(214,151,45)" rx="2" ry="2" />
<text  x="163.06" y="1807.5" >st..</text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1701" width="0.2" height="15.0" fill="rgb(219,122,54)" rx="2" ry="2" />
<text  x="75.48" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="127.1" y="1701" width="0.6" height="15.0" fill="rgb(239,85,16)" rx="2" ry="2" />
<text  x="130.14" y="1711.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (4 samples, 0.06%)</title><rect x="623.6" y="1893" width="0.8" height="15.0" fill="rgb(247,7,24)" rx="2" ry="2" />
<text  x="626.61" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (113 samples, 1.78%)</title><rect x="97.0" y="1797" width="21.0" height="15.0" fill="rgb(237,81,47)" rx="2" ry="2" />
<text  x="100.02" y="1807.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (2 samples, 0.03%)</title><rect x="858.3" y="2037" width="0.3" height="15.0" fill="rgb(214,141,6)" rx="2" ry="2" />
<text  x="861.28" y="2047.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="147.6" y="1653" width="0.4" height="15.0" fill="rgb(235,193,53)" rx="2" ry="2" />
<text  x="150.60" y="1663.5" ></text>
</g>
<g >
<title>handle_mm_fault (8 samples, 0.13%)</title><rect x="30.8" y="1989" width="1.5" height="15.0" fill="rgb(249,48,48)" rx="2" ry="2" />
<text  x="33.83" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="389" width="0.2" height="15.0" fill="rgb(215,155,15)" rx="2" ry="2" />
<text  x="131.07" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="157.1" y="1621" width="0.5" height="15.0" fill="rgb(228,132,12)" rx="2" ry="2" />
<text  x="160.08" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (5 samples, 0.08%)</title><rect x="156.7" y="1941" width="0.9" height="15.0" fill="rgb(211,217,23)" rx="2" ry="2" />
<text  x="159.71" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="156.9" y="1909" width="0.7" height="15.0" fill="rgb(254,222,28)" rx="2" ry="2" />
<text  x="159.90" y="1919.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="423.9" y="1861" width="0.2" height="15.0" fill="rgb(250,89,9)" rx="2" ry="2" />
<text  x="426.91" y="1871.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="647.2" y="1861" width="0.6" height="15.0" fill="rgb(247,87,31)" rx="2" ry="2" />
<text  x="650.23" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.7" y="1653" width="0.4" height="15.0" fill="rgb(207,113,4)" rx="2" ry="2" />
<text  x="204.71" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (2 samples, 0.03%)</title><rect x="93.7" y="1909" width="0.3" height="15.0" fill="rgb(243,134,46)" rx="2" ry="2" />
<text  x="96.67" y="1919.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (4 samples, 0.06%)</title><rect x="76.2" y="2021" width="0.7" height="15.0" fill="rgb(240,158,41)" rx="2" ry="2" />
<text  x="79.20" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1653" width="0.4" height="15.0" fill="rgb(219,200,49)" rx="2" ry="2" />
<text  x="130.89" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1077" width="0.2" height="15.0" fill="rgb(241,153,28)" rx="2" ry="2" />
<text  x="160.08" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="1221" width="0.2" height="15.0" fill="rgb(244,39,12)" rx="2" ry="2" />
<text  x="204.89" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="469" width="0.2" height="15.0" fill="rgb(249,174,18)" rx="2" ry="2" />
<text  x="1170.50" y="479.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (629 samples, 9.91%)</title><rect x="451.2" y="1973" width="117.0" height="15.0" fill="rgb(243,88,3)" rx="2" ry="2" />
<text  x="454.24" y="1983.5" >fasttext::Dens..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="85" width="0.4" height="15.0" fill="rgb(241,97,42)" rx="2" ry="2" />
<text  x="75.85" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="1285" width="0.2" height="15.0" fill="rgb(242,4,41)" rx="2" ry="2" />
<text  x="204.89" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1525" width="0.2" height="15.0" fill="rgb(235,2,31)" rx="2" ry="2" />
<text  x="1170.50" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="201.0" y="1749" width="0.5" height="15.0" fill="rgb(233,147,4)" rx="2" ry="2" />
<text  x="203.96" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="53" width="0.2" height="15.0" fill="rgb(254,164,32)" rx="2" ry="2" />
<text  x="1170.69" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (27 samples, 0.43%)</title><rect x="97.2" y="1685" width="5.0" height="15.0" fill="rgb(238,16,9)" rx="2" ry="2" />
<text  x="100.21" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1173" width="0.1" height="15.0" fill="rgb(239,47,20)" rx="2" ry="2" />
<text  x="204.15" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1013" width="0.2" height="15.0" fill="rgb(230,96,25)" rx="2" ry="2" />
<text  x="160.08" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="261" width="0.5" height="15.0" fill="rgb(220,219,53)" rx="2" ry="2" />
<text  x="1170.87" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform@plt (3 samples, 0.05%)</title><rect x="1147.0" y="2053" width="0.6" height="15.0" fill="rgb(226,137,23)" rx="2" ry="2" />
<text  x="1150.05" y="2063.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="594.4" y="1909" width="0.2" height="15.0" fill="rgb(222,144,49)" rx="2" ry="2" />
<text  x="597.42" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1365" width="0.2" height="15.0" fill="rgb(253,176,35)" rx="2" ry="2" />
<text  x="1170.69" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="757" width="0.5" height="15.0" fill="rgb(225,42,37)" rx="2" ry="2" />
<text  x="1170.87" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="709" width="0.2" height="15.0" fill="rgb(205,202,22)" rx="2" ry="2" />
<text  x="1170.31" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="200.4" y="1813" width="0.2" height="15.0" fill="rgb(217,142,22)" rx="2" ry="2" />
<text  x="203.41" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1077" width="0.2" height="15.0" fill="rgb(229,227,24)" rx="2" ry="2" />
<text  x="204.34" y="1087.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="34.0" y="2021" width="0.2" height="15.0" fill="rgb(231,22,35)" rx="2" ry="2" />
<text  x="36.99" y="2031.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="80.3" y="1877" width="0.4" height="15.0" fill="rgb(216,216,31)" rx="2" ry="2" />
<text  x="83.29" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.03%)</title><rect x="157.6" y="1957" width="0.4" height="15.0" fill="rgb(254,125,38)" rx="2" ry="2" />
<text  x="160.64" y="1967.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1381" width="0.2" height="15.0" fill="rgb(251,130,32)" rx="2" ry="2" />
<text  x="75.48" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="629" width="0.2" height="15.0" fill="rgb(212,226,3)" rx="2" ry="2" />
<text  x="204.34" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1285" width="0.1" height="15.0" fill="rgb(220,162,46)" rx="2" ry="2" />
<text  x="204.15" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="869" width="0.2" height="15.0" fill="rgb(253,79,5)" rx="2" ry="2" />
<text  x="160.08" y="879.5" ></text>
</g>
<g >
<title>__handle_mm_fault (25 samples, 0.39%)</title><rect x="420.4" y="1877" width="4.6" height="15.0" fill="rgb(231,57,6)" rx="2" ry="2" />
<text  x="423.38" y="1887.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="592.2" y="1797" width="0.2" height="15.0" fill="rgb(225,9,0)" rx="2" ry="2" />
<text  x="595.19" y="1807.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="889.1" y="1909" width="0.2" height="15.0" fill="rgb(252,94,2)" rx="2" ry="2" />
<text  x="892.14" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (41 samples, 0.65%)</title><rect x="176.0" y="1653" width="7.7" height="15.0" fill="rgb(213,30,53)" rx="2" ry="2" />
<text  x="179.05" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1525" width="0.2" height="15.0" fill="rgb(223,184,34)" rx="2" ry="2" />
<text  x="1170.31" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="725" width="0.2" height="15.0" fill="rgb(253,30,4)" rx="2" ry="2" />
<text  x="131.07" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.05%)</title><rect x="128.6" y="1685" width="0.6" height="15.0" fill="rgb(227,100,10)" rx="2" ry="2" />
<text  x="131.63" y="1695.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;@plt (2 samples, 0.03%)</title><rect x="338.9" y="1989" width="0.4" height="15.0" fill="rgb(253,227,19)" rx="2" ry="2" />
<text  x="341.93" y="1999.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="171.6" y="1621" width="0.4" height="15.0" fill="rgb(234,180,25)" rx="2" ry="2" />
<text  x="174.59" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="245" width="0.4" height="15.0" fill="rgb(234,170,46)" rx="2" ry="2" />
<text  x="75.85" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.05%)</title><rect x="128.6" y="1669" width="0.6" height="15.0" fill="rgb(228,205,53)" rx="2" ry="2" />
<text  x="131.63" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="853" width="0.4" height="15.0" fill="rgb(220,56,36)" rx="2" ry="2" />
<text  x="75.85" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1349" width="0.2" height="15.0" fill="rgb(228,156,44)" rx="2" ry="2" />
<text  x="160.08" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="156.3" y="1797" width="0.2" height="15.0" fill="rgb(210,159,32)" rx="2" ry="2" />
<text  x="159.34" y="1807.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="150.0" y="1653" width="0.4" height="15.0" fill="rgb(210,98,25)" rx="2" ry="2" />
<text  x="153.02" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1125" width="0.5" height="15.0" fill="rgb(219,117,35)" rx="2" ry="2" />
<text  x="1170.87" y="1135.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (3 samples, 0.05%)</title><rect x="600.2" y="1941" width="0.5" height="15.0" fill="rgb(252,158,10)" rx="2" ry="2" />
<text  x="603.19" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="1317" width="0.2" height="15.0" fill="rgb(227,23,38)" rx="2" ry="2" />
<text  x="204.89" y="1327.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="192.6" y="1701" width="0.2" height="15.0" fill="rgb(208,106,8)" rx="2" ry="2" />
<text  x="195.60" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1493" width="0.2" height="15.0" fill="rgb(254,222,21)" rx="2" ry="2" />
<text  x="1170.69" y="1503.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (27 samples, 0.43%)</title><rect x="427.4" y="1861" width="5.1" height="15.0" fill="rgb(225,175,23)" rx="2" ry="2" />
<text  x="430.44" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (64 samples, 1.01%)</title><rect x="128.6" y="1733" width="11.9" height="15.0" fill="rgb(248,1,27)" rx="2" ry="2" />
<text  x="131.63" y="1743.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="834.5" y="1845" width="0.2" height="15.0" fill="rgb(220,75,12)" rx="2" ry="2" />
<text  x="837.48" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="112.5" y="1701" width="0.1" height="15.0" fill="rgb(241,3,43)" rx="2" ry="2" />
<text  x="115.46" y="1711.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1973" width="0.2" height="15.0" fill="rgb(223,195,53)" rx="2" ry="2" />
<text  x="75.48" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1029" width="0.2" height="15.0" fill="rgb(208,45,15)" rx="2" ry="2" />
<text  x="160.08" y="1039.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1461" width="0.2" height="15.0" fill="rgb(205,37,12)" rx="2" ry="2" />
<text  x="75.48" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1461" width="0.4" height="15.0" fill="rgb(214,35,49)" rx="2" ry="2" />
<text  x="130.89" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="156.9" y="1829" width="0.7" height="15.0" fill="rgb(237,66,45)" rx="2" ry="2" />
<text  x="159.90" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="213" width="0.2" height="15.0" fill="rgb(213,195,39)" rx="2" ry="2" />
<text  x="1170.50" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="165" width="0.2" height="15.0" fill="rgb(211,98,34)" rx="2" ry="2" />
<text  x="204.34" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="127.1" y="1717" width="0.6" height="15.0" fill="rgb(244,25,37)" rx="2" ry="2" />
<text  x="130.14" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="565" width="0.2" height="15.0" fill="rgb(243,186,12)" rx="2" ry="2" />
<text  x="204.89" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1061" width="0.2" height="15.0" fill="rgb(216,81,29)" rx="2" ry="2" />
<text  x="160.08" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (27 samples, 0.43%)</title><rect x="97.2" y="1653" width="5.0" height="15.0" fill="rgb(251,174,35)" rx="2" ry="2" />
<text  x="100.21" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28 samples, 0.44%)</title><rect x="97.0" y="1733" width="5.2" height="15.0" fill="rgb(232,210,25)" rx="2" ry="2" />
<text  x="100.02" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="201.0" y="1909" width="1.1" height="15.0" fill="rgb(237,87,50)" rx="2" ry="2" />
<text  x="203.96" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (42 samples, 0.66%)</title><rect x="160.6" y="1605" width="7.8" height="15.0" fill="rgb(220,11,50)" rx="2" ry="2" />
<text  x="163.61" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="596.3" y="2021" width="0.5" height="15.0" fill="rgb(235,50,47)" rx="2" ry="2" />
<text  x="599.28" y="2031.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.03%)</title><rect x="432.5" y="1845" width="0.3" height="15.0" fill="rgb(225,70,45)" rx="2" ry="2" />
<text  x="435.46" y="1855.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.05%)</title><rect x="71.5" y="1957" width="0.6" height="15.0" fill="rgb(236,148,1)" rx="2" ry="2" />
<text  x="74.55" y="1967.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (31 samples, 0.49%)</title><rect x="1051.5" y="2053" width="5.7" height="15.0" fill="rgb(237,89,28)" rx="2" ry="2" />
<text  x="1054.47" y="2063.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="145.7" y="1621" width="0.2" height="15.0" fill="rgb(234,135,8)" rx="2" ry="2" />
<text  x="148.74" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="184.0" y="1733" width="0.2" height="15.0" fill="rgb(217,106,47)" rx="2" ry="2" />
<text  x="187.04" y="1743.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (14 samples, 0.22%)</title><rect x="575.8" y="1973" width="2.6" height="15.0" fill="rgb(239,190,51)" rx="2" ry="2" />
<text  x="578.83" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="1109" width="0.2" height="15.0" fill="rgb(205,107,16)" rx="2" ry="2" />
<text  x="204.89" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="910.5" y="2037" width="0.8" height="15.0" fill="rgb(210,73,36)" rx="2" ry="2" />
<text  x="913.53" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1029" width="0.2" height="15.0" fill="rgb(253,58,17)" rx="2" ry="2" />
<text  x="1170.50" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="997" width="0.2" height="15.0" fill="rgb(218,131,33)" rx="2" ry="2" />
<text  x="204.71" y="1007.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="593.5" y="1845" width="0.2" height="15.0" fill="rgb(223,16,49)" rx="2" ry="2" />
<text  x="596.49" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (35 samples, 0.55%)</title><rect x="168.6" y="1717" width="6.5" height="15.0" fill="rgb(214,80,27)" rx="2" ry="2" />
<text  x="171.61" y="1727.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="111.5" y="1637" width="0.2" height="15.0" fill="rgb(231,141,14)" rx="2" ry="2" />
<text  x="114.53" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="1205" width="0.2" height="15.0" fill="rgb(208,176,33)" rx="2" ry="2" />
<text  x="204.89" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1493" width="0.5" height="15.0" fill="rgb(219,135,1)" rx="2" ry="2" />
<text  x="1170.87" y="1503.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="101.5" y="1589" width="0.4" height="15.0" fill="rgb(238,74,46)" rx="2" ry="2" />
<text  x="104.48" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="165" width="0.2" height="15.0" fill="rgb(229,49,46)" rx="2" ry="2" />
<text  x="204.89" y="175.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1188.5" y="2053" width="0.2" height="15.0" fill="rgb(219,146,54)" rx="2" ry="2" />
<text  x="1191.51" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="389" width="0.2" height="15.0" fill="rgb(211,198,1)" rx="2" ry="2" />
<text  x="1170.31" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="190.0" y="1669" width="0.2" height="15.0" fill="rgb(238,41,50)" rx="2" ry="2" />
<text  x="192.99" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1829" width="0.5" height="15.0" fill="rgb(206,130,13)" rx="2" ry="2" />
<text  x="1170.87" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="741" width="0.2" height="15.0" fill="rgb(216,123,45)" rx="2" ry="2" />
<text  x="1170.50" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1205" width="0.4" height="15.0" fill="rgb(242,194,39)" rx="2" ry="2" />
<text  x="130.89" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="869" width="0.2" height="15.0" fill="rgb(243,166,8)" rx="2" ry="2" />
<text  x="204.34" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (158 samples, 2.49%)</title><rect x="97.0" y="1893" width="29.4" height="15.0" fill="rgb(241,93,52)" rx="2" ry="2" />
<text  x="100.02" y="1903.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1621" width="0.5" height="15.0" fill="rgb(212,210,11)" rx="2" ry="2" />
<text  x="1170.87" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1909" width="0.2" height="15.0" fill="rgb(209,7,18)" rx="2" ry="2" />
<text  x="1170.31" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="133" width="0.2" height="15.0" fill="rgb(212,59,26)" rx="2" ry="2" />
<text  x="204.34" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="201.0" y="1797" width="1.1" height="15.0" fill="rgb(247,51,23)" rx="2" ry="2" />
<text  x="203.96" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.7" y="1509" width="0.4" height="15.0" fill="rgb(225,59,35)" rx="2" ry="2" />
<text  x="204.71" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="853" width="0.2" height="15.0" fill="rgb(212,109,23)" rx="2" ry="2" />
<text  x="1170.50" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="885" width="0.2" height="15.0" fill="rgb(215,165,16)" rx="2" ry="2" />
<text  x="1170.50" y="895.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="834.5" y="1861" width="0.2" height="15.0" fill="rgb(238,81,33)" rx="2" ry="2" />
<text  x="837.48" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="741" width="0.2" height="15.0" fill="rgb(254,210,51)" rx="2" ry="2" />
<text  x="204.89" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="261" width="0.2" height="15.0" fill="rgb(209,196,11)" rx="2" ry="2" />
<text  x="1170.69" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1189" width="0.1" height="15.0" fill="rgb(253,187,18)" rx="2" ry="2" />
<text  x="204.15" y="1199.5" ></text>
</g>
<g >
<title>pfn_pte (1 samples, 0.02%)</title><rect x="433.2" y="1893" width="0.2" height="15.0" fill="rgb(205,155,42)" rx="2" ry="2" />
<text  x="436.21" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (27 samples, 0.43%)</title><rect x="107.2" y="1669" width="5.1" height="15.0" fill="rgb(242,95,49)" rx="2" ry="2" />
<text  x="110.25" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="213" width="0.4" height="15.0" fill="rgb(216,19,47)" rx="2" ry="2" />
<text  x="75.85" y="223.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="81.2" y="1989" width="0.2" height="15.0" fill="rgb(216,112,15)" rx="2" ry="2" />
<text  x="84.22" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1301" width="0.5" height="15.0" fill="rgb(233,149,4)" rx="2" ry="2" />
<text  x="75.66" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1845" width="0.5" height="15.0" fill="rgb(230,137,50)" rx="2" ry="2" />
<text  x="1170.87" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (81 samples, 1.28%)</title><rect x="936.9" y="2053" width="15.1" height="15.0" fill="rgb(214,228,4)" rx="2" ry="2" />
<text  x="939.93" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="190.9" y="1765" width="0.2" height="15.0" fill="rgb(214,145,27)" rx="2" ry="2" />
<text  x="193.92" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="389" width="0.4" height="15.0" fill="rgb(246,36,5)" rx="2" ry="2" />
<text  x="75.85" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1317" width="0.1" height="15.0" fill="rgb(241,118,26)" rx="2" ry="2" />
<text  x="160.45" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="309" width="0.2" height="15.0" fill="rgb(241,46,34)" rx="2" ry="2" />
<text  x="204.89" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="613" width="0.2" height="15.0" fill="rgb(240,87,48)" rx="2" ry="2" />
<text  x="1170.31" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1733" width="0.2" height="15.0" fill="rgb(241,201,48)" rx="2" ry="2" />
<text  x="1170.69" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1237" width="0.2" height="15.0" fill="rgb(210,101,23)" rx="2" ry="2" />
<text  x="1170.50" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1573" width="0.2" height="15.0" fill="rgb(213,38,50)" rx="2" ry="2" />
<text  x="1170.31" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1221" width="0.2" height="15.0" fill="rgb(251,185,15)" rx="2" ry="2" />
<text  x="130.52" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1189" width="0.2" height="15.0" fill="rgb(230,183,40)" rx="2" ry="2" />
<text  x="1170.31" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="126.2" y="1797" width="0.2" height="15.0" fill="rgb(223,119,12)" rx="2" ry="2" />
<text  x="129.21" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (31 samples, 0.49%)</title><rect x="134.8" y="1637" width="5.7" height="15.0" fill="rgb(205,214,46)" rx="2" ry="2" />
<text  x="137.77" y="1647.5" ></text>
</g>
<g >
<title>cfree (5 samples, 0.08%)</title><rect x="621.0" y="1893" width="0.9" height="15.0" fill="rgb(227,73,16)" rx="2" ry="2" />
<text  x="624.01" y="1903.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.03%)</title><rect x="450.3" y="1845" width="0.4" height="15.0" fill="rgb(233,155,53)" rx="2" ry="2" />
<text  x="453.32" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="432.5" y="1829" width="0.3" height="15.0" fill="rgb(206,98,37)" rx="2" ry="2" />
<text  x="435.46" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="34.2" y="2037" width="0.5" height="15.0" fill="rgb(229,32,6)" rx="2" ry="2" />
<text  x="37.17" y="2047.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (1 samples, 0.02%)</title><rect x="754.3" y="1877" width="0.2" height="15.0" fill="rgb(241,7,33)" rx="2" ry="2" />
<text  x="757.33" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="917" width="0.5" height="15.0" fill="rgb(244,89,51)" rx="2" ry="2" />
<text  x="1170.87" y="927.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="593.7" y="2005" width="0.2" height="15.0" fill="rgb(242,12,25)" rx="2" ry="2" />
<text  x="596.68" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="469" width="0.5" height="15.0" fill="rgb(215,75,46)" rx="2" ry="2" />
<text  x="1170.87" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.08%)</title><rect x="195.9" y="1685" width="1.0" height="15.0" fill="rgb(212,223,10)" rx="2" ry="2" />
<text  x="198.94" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="565" width="0.2" height="15.0" fill="rgb(229,66,21)" rx="2" ry="2" />
<text  x="1170.50" y="575.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (11 samples, 0.17%)</title><rect x="569.3" y="1973" width="2.1" height="15.0" fill="rgb(219,98,45)" rx="2" ry="2" />
<text  x="572.32" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="485" width="0.2" height="15.0" fill="rgb(213,99,5)" rx="2" ry="2" />
<text  x="131.07" y="495.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.09%)</title><rect x="129.6" y="1573" width="1.1" height="15.0" fill="rgb(206,113,22)" rx="2" ry="2" />
<text  x="132.56" y="1583.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="111.3" y="1621" width="0.2" height="15.0" fill="rgb(216,56,54)" rx="2" ry="2" />
<text  x="114.34" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="157.1" y="1765" width="0.5" height="15.0" fill="rgb(223,187,10)" rx="2" ry="2" />
<text  x="160.08" y="1775.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="594.4" y="1829" width="0.2" height="15.0" fill="rgb(215,80,0)" rx="2" ry="2" />
<text  x="597.42" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="981" width="0.1" height="15.0" fill="rgb(251,12,24)" rx="2" ry="2" />
<text  x="160.45" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1013" width="0.1" height="15.0" fill="rgb(252,215,36)" rx="2" ry="2" />
<text  x="160.45" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="901" width="0.2" height="15.0" fill="rgb(250,143,49)" rx="2" ry="2" />
<text  x="204.34" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="677" width="0.2" height="15.0" fill="rgb(249,137,21)" rx="2" ry="2" />
<text  x="1170.69" y="687.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="373" width="0.4" height="15.0" fill="rgb(241,33,29)" rx="2" ry="2" />
<text  x="75.85" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.05%)</title><rect x="80.3" y="1925" width="0.5" height="15.0" fill="rgb(232,223,47)" rx="2" ry="2" />
<text  x="83.29" y="1935.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.03%)</title><rect x="450.3" y="1829" width="0.4" height="15.0" fill="rgb(230,125,9)" rx="2" ry="2" />
<text  x="453.32" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="197" width="0.2" height="15.0" fill="rgb(237,75,39)" rx="2" ry="2" />
<text  x="1170.69" y="207.5" ></text>
</g>
<g >
<title>__strxfrm_l (1 samples, 0.02%)</title><rect x="911.3" y="2053" width="0.2" height="15.0" fill="rgb(218,167,0)" rx="2" ry="2" />
<text  x="914.27" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (32 samples, 0.50%)</title><rect x="140.5" y="1733" width="6.0" height="15.0" fill="rgb(235,192,4)" rx="2" ry="2" />
<text  x="143.53" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1477" width="0.1" height="15.0" fill="rgb(221,223,29)" rx="2" ry="2" />
<text  x="204.15" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="293" width="0.2" height="15.0" fill="rgb(226,126,4)" rx="2" ry="2" />
<text  x="204.34" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1477" width="0.2" height="15.0" fill="rgb(237,44,15)" rx="2" ry="2" />
<text  x="130.52" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="629" width="0.2" height="15.0" fill="rgb(243,215,47)" rx="2" ry="2" />
<text  x="131.07" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (35 samples, 0.55%)</title><rect x="168.6" y="1685" width="6.5" height="15.0" fill="rgb(213,18,3)" rx="2" ry="2" />
<text  x="171.61" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.3" y="1637" width="0.4" height="15.0" fill="rgb(212,93,2)" rx="2" ry="2" />
<text  x="130.33" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="533" width="0.2" height="15.0" fill="rgb(243,6,47)" rx="2" ry="2" />
<text  x="1170.31" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28 samples, 0.44%)</title><rect x="107.2" y="1717" width="5.3" height="15.0" fill="rgb(214,129,44)" rx="2" ry="2" />
<text  x="110.25" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1477" width="0.2" height="15.0" fill="rgb(216,106,13)" rx="2" ry="2" />
<text  x="204.34" y="1487.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1765" width="0.2" height="15.0" fill="rgb(233,127,42)" rx="2" ry="2" />
<text  x="75.48" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (158 samples, 2.49%)</title><rect x="97.0" y="1861" width="29.4" height="15.0" fill="rgb(218,89,22)" rx="2" ry="2" />
<text  x="100.02" y="1871.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1045" width="0.2" height="15.0" fill="rgb(239,178,53)" rx="2" ry="2" />
<text  x="204.34" y="1055.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (9 samples, 0.14%)</title><rect x="719.9" y="1765" width="1.7" height="15.0" fill="rgb(214,128,25)" rx="2" ry="2" />
<text  x="722.93" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1253" width="0.2" height="15.0" fill="rgb(234,2,13)" rx="2" ry="2" />
<text  x="204.34" y="1263.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="82.1" y="1925" width="0.2" height="15.0" fill="rgb(252,215,0)" rx="2" ry="2" />
<text  x="85.15" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="117" width="0.2" height="15.0" fill="rgb(222,165,2)" rx="2" ry="2" />
<text  x="1170.31" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1253" width="0.1" height="15.0" fill="rgb(224,8,0)" rx="2" ry="2" />
<text  x="160.45" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1493" width="0.1" height="15.0" fill="rgb(207,83,22)" rx="2" ry="2" />
<text  x="204.15" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1637" width="0.4" height="15.0" fill="rgb(238,26,21)" rx="2" ry="2" />
<text  x="130.89" y="1647.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (6 samples, 0.09%)</title><rect x="935.8" y="2053" width="1.1" height="15.0" fill="rgb(228,36,48)" rx="2" ry="2" />
<text  x="938.81" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="117" width="0.2" height="15.0" fill="rgb(244,165,16)" rx="2" ry="2" />
<text  x="1170.50" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (43 samples, 0.68%)</title><rect x="176.0" y="1669" width="8.0" height="15.0" fill="rgb(239,84,50)" rx="2" ry="2" />
<text  x="179.05" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="325" width="0.2" height="15.0" fill="rgb(215,24,5)" rx="2" ry="2" />
<text  x="131.07" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="149" width="0.2" height="15.0" fill="rgb(246,1,22)" rx="2" ry="2" />
<text  x="1170.31" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="175.1" y="1717" width="0.2" height="15.0" fill="rgb(251,108,17)" rx="2" ry="2" />
<text  x="178.12" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1269" width="0.1" height="15.0" fill="rgb(211,138,50)" rx="2" ry="2" />
<text  x="204.15" y="1279.5" ></text>
</g>
<g >
<title>cfree (3 samples, 0.05%)</title><rect x="450.7" y="1973" width="0.5" height="15.0" fill="rgb(249,22,51)" rx="2" ry="2" />
<text  x="453.69" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.17%)</title><rect x="35.7" y="2005" width="2.0" height="15.0" fill="rgb(227,159,41)" rx="2" ry="2" />
<text  x="38.66" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1269" width="0.2" height="15.0" fill="rgb(216,142,0)" rx="2" ry="2" />
<text  x="1170.69" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1461" width="0.2" height="15.0" fill="rgb(221,13,16)" rx="2" ry="2" />
<text  x="1170.31" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.3" y="1365" width="0.2" height="15.0" fill="rgb(222,181,41)" rx="2" ry="2" />
<text  x="160.27" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="201.5" y="1669" width="0.6" height="15.0" fill="rgb(242,153,12)" rx="2" ry="2" />
<text  x="204.52" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1285" width="0.2" height="15.0" fill="rgb(232,61,21)" rx="2" ry="2" />
<text  x="204.34" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="533" width="0.2" height="15.0" fill="rgb(253,210,20)" rx="2" ry="2" />
<text  x="131.07" y="543.5" ></text>
</g>
<g >
<title>GetHost (172 samples, 2.71%)</title><rect x="96.3" y="1973" width="32.0" height="15.0" fill="rgb(240,29,52)" rx="2" ry="2" />
<text  x="99.28" y="1983.5" >Ge..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1541" width="0.5" height="15.0" fill="rgb(218,118,50)" rx="2" ry="2" />
<text  x="1170.87" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="126.4" y="1797" width="0.2" height="15.0" fill="rgb(207,83,44)" rx="2" ry="2" />
<text  x="129.40" y="1807.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="834.5" y="1813" width="0.2" height="15.0" fill="rgb(233,28,3)" rx="2" ry="2" />
<text  x="837.48" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1141" width="0.2" height="15.0" fill="rgb(246,91,33)" rx="2" ry="2" />
<text  x="160.08" y="1151.5" ></text>
</g>
<g >
<title>std::locale::operator= (1 samples, 0.02%)</title><rect x="126.8" y="1925" width="0.2" height="15.0" fill="rgb(235,121,11)" rx="2" ry="2" />
<text  x="129.77" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1141" width="0.2" height="15.0" fill="rgb(236,182,32)" rx="2" ry="2" />
<text  x="1170.50" y="1151.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="862.0" y="1973" width="0.4" height="15.0" fill="rgb(241,60,16)" rx="2" ry="2" />
<text  x="864.99" y="1983.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.03%)</title><rect x="423.5" y="1861" width="0.4" height="15.0" fill="rgb(240,84,22)" rx="2" ry="2" />
<text  x="426.54" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="157.1" y="1781" width="0.5" height="15.0" fill="rgb(252,159,30)" rx="2" ry="2" />
<text  x="160.08" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1253" width="0.2" height="15.0" fill="rgb(209,170,15)" rx="2" ry="2" />
<text  x="1170.69" y="1263.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="598.0" y="1957" width="0.1" height="15.0" fill="rgb(234,102,2)" rx="2" ry="2" />
<text  x="600.95" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.7" y="1445" width="0.4" height="15.0" fill="rgb(212,163,20)" rx="2" ry="2" />
<text  x="204.71" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="594.4" y="1941" width="0.2" height="15.0" fill="rgb(244,155,11)" rx="2" ry="2" />
<text  x="597.42" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="757" width="0.2" height="15.0" fill="rgb(218,75,1)" rx="2" ry="2" />
<text  x="204.34" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="593.5" y="1973" width="0.2" height="15.0" fill="rgb(205,181,38)" rx="2" ry="2" />
<text  x="596.49" y="1983.5" ></text>
</g>
<g >
<title>TDocument::TDocument (2 samples, 0.03%)</title><rect x="339.5" y="2005" width="0.4" height="15.0" fill="rgb(218,92,21)" rx="2" ry="2" />
<text  x="342.49" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1317" width="0.2" height="15.0" fill="rgb(231,72,45)" rx="2" ry="2" />
<text  x="160.27" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1589" width="0.5" height="15.0" fill="rgb(243,142,51)" rx="2" ry="2" />
<text  x="1170.87" y="1599.5" ></text>
</g>
<g >
<title>__do_page_fault (15 samples, 0.24%)</title><rect x="719.6" y="1829" width="2.8" height="15.0" fill="rgb(244,73,4)" rx="2" ry="2" />
<text  x="722.56" y="1839.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="189.8" y="1653" width="0.2" height="15.0" fill="rgb(231,176,17)" rx="2" ry="2" />
<text  x="192.81" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1509" width="0.2" height="15.0" fill="rgb(238,209,28)" rx="2" ry="2" />
<text  x="1170.31" y="1519.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.03%)</title><rect x="80.8" y="1989" width="0.4" height="15.0" fill="rgb(245,113,36)" rx="2" ry="2" />
<text  x="83.84" y="1999.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="687.0" y="1877" width="0.2" height="15.0" fill="rgb(229,197,33)" rx="2" ry="2" />
<text  x="690.02" y="1887.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1877" width="0.2" height="15.0" fill="rgb(223,147,0)" rx="2" ry="2" />
<text  x="75.48" y="1887.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (1 samples, 0.02%)</title><rect x="594.4" y="1893" width="0.2" height="15.0" fill="rgb(249,121,50)" rx="2" ry="2" />
<text  x="597.42" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="597" width="0.5" height="15.0" fill="rgb(222,173,4)" rx="2" ry="2" />
<text  x="1170.87" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1093" width="0.2" height="15.0" fill="rgb(247,149,35)" rx="2" ry="2" />
<text  x="130.52" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1045" width="0.2" height="15.0" fill="rgb(234,96,13)" rx="2" ry="2" />
<text  x="1170.31" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (1 samples, 0.02%)</title><rect x="1138.7" y="2053" width="0.2" height="15.0" fill="rgb(223,210,21)" rx="2" ry="2" />
<text  x="1141.68" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (158 samples, 2.49%)</title><rect x="97.0" y="1877" width="29.4" height="15.0" fill="rgb(213,166,20)" rx="2" ry="2" />
<text  x="100.02" y="1887.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="373" width="0.2" height="15.0" fill="rgb(212,87,42)" rx="2" ry="2" />
<text  x="204.34" y="383.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="132.7" y="1557" width="0.6" height="15.0" fill="rgb(205,90,32)" rx="2" ry="2" />
<text  x="135.72" y="1567.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1573" width="0.2" height="15.0" fill="rgb(209,128,15)" rx="2" ry="2" />
<text  x="75.48" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1877" width="0.2" height="15.0" fill="rgb(206,107,33)" rx="2" ry="2" />
<text  x="1170.50" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1525" width="0.2" height="15.0" fill="rgb(233,177,39)" rx="2" ry="2" />
<text  x="130.52" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1445" width="0.2" height="15.0" fill="rgb(227,127,48)" rx="2" ry="2" />
<text  x="1170.50" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="933" width="0.2" height="15.0" fill="rgb(235,29,34)" rx="2" ry="2" />
<text  x="131.07" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.3" y="1477" width="0.3" height="15.0" fill="rgb(211,214,34)" rx="2" ry="2" />
<text  x="160.27" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="869" width="0.2" height="15.0" fill="rgb(233,44,52)" rx="2" ry="2" />
<text  x="1170.50" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="154.5" y="1669" width="0.5" height="15.0" fill="rgb(219,157,27)" rx="2" ry="2" />
<text  x="157.48" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1429" width="0.4" height="15.0" fill="rgb(240,223,14)" rx="2" ry="2" />
<text  x="130.89" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1349" width="0.2" height="15.0" fill="rgb(240,37,52)" rx="2" ry="2" />
<text  x="1170.69" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1989" width="0.2" height="15.0" fill="rgb(233,7,15)" rx="2" ry="2" />
<text  x="1170.50" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1141" width="0.4" height="15.0" fill="rgb(226,55,12)" rx="2" ry="2" />
<text  x="130.89" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="613" width="0.2" height="15.0" fill="rgb(223,16,22)" rx="2" ry="2" />
<text  x="1170.50" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (1 samples, 0.02%)</title><rect x="1133.8" y="2053" width="0.2" height="15.0" fill="rgb(231,71,51)" rx="2" ry="2" />
<text  x="1136.84" y="2063.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.06%)</title><rect x="71.4" y="1973" width="0.7" height="15.0" fill="rgb(205,33,42)" rx="2" ry="2" />
<text  x="74.36" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1013" width="0.2" height="15.0" fill="rgb(230,157,45)" rx="2" ry="2" />
<text  x="204.34" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="805" width="0.5" height="15.0" fill="rgb(240,58,11)" rx="2" ry="2" />
<text  x="1170.87" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="888.6" y="2005" width="0.2" height="15.0" fill="rgb(215,229,0)" rx="2" ry="2" />
<text  x="891.58" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1125" width="0.1" height="15.0" fill="rgb(250,25,13)" rx="2" ry="2" />
<text  x="204.15" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="341" width="0.2" height="15.0" fill="rgb(241,47,20)" rx="2" ry="2" />
<text  x="1170.69" y="351.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (2 samples, 0.03%)</title><rect x="82.3" y="1941" width="0.4" height="15.0" fill="rgb(253,175,7)" rx="2" ry="2" />
<text  x="85.33" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="69" width="0.5" height="15.0" fill="rgb(210,118,22)" rx="2" ry="2" />
<text  x="1170.87" y="79.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1493" width="0.5" height="15.0" fill="rgb(249,160,53)" rx="2" ry="2" />
<text  x="75.66" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="201.0" y="1829" width="1.1" height="15.0" fill="rgb(215,125,14)" rx="2" ry="2" />
<text  x="203.96" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1973" width="0.2" height="15.0" fill="rgb(224,204,6)" rx="2" ry="2" />
<text  x="1170.69" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.06%)</title><rect x="73.4" y="2005" width="0.8" height="15.0" fill="rgb(225,76,22)" rx="2" ry="2" />
<text  x="76.41" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1093" width="0.2" height="15.0" fill="rgb(250,171,29)" rx="2" ry="2" />
<text  x="1170.31" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (149 samples, 2.35%)</title><rect x="128.6" y="1877" width="27.7" height="15.0" fill="rgb(210,119,36)" rx="2" ry="2" />
<text  x="131.63" y="1887.5" >s..</text>
</g>
<g >
<title>TDocument::~TDocument (1 samples, 0.02%)</title><rect x="595.0" y="1989" width="0.2" height="15.0" fill="rgb(250,155,49)" rx="2" ry="2" />
<text  x="597.98" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (151 samples, 2.38%)</title><rect x="128.6" y="1909" width="28.1" height="15.0" fill="rgb(213,205,13)" rx="2" ry="2" />
<text  x="131.63" y="1919.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1445" width="0.5" height="15.0" fill="rgb(205,28,10)" rx="2" ry="2" />
<text  x="1170.87" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="421" width="0.2" height="15.0" fill="rgb(242,131,38)" rx="2" ry="2" />
<text  x="131.07" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="581" width="0.2" height="15.0" fill="rgb(209,194,28)" rx="2" ry="2" />
<text  x="204.71" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="645" width="0.2" height="15.0" fill="rgb(217,137,45)" rx="2" ry="2" />
<text  x="204.71" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="549" width="0.2" height="15.0" fill="rgb(240,161,2)" rx="2" ry="2" />
<text  x="204.34" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="965" width="0.2" height="15.0" fill="rgb(253,164,39)" rx="2" ry="2" />
<text  x="160.08" y="975.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="129.0" y="1621" width="0.2" height="15.0" fill="rgb(224,98,47)" rx="2" ry="2" />
<text  x="132.00" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1157" width="0.2" height="15.0" fill="rgb(214,81,51)" rx="2" ry="2" />
<text  x="1170.31" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="917" width="0.2" height="15.0" fill="rgb(225,227,3)" rx="2" ry="2" />
<text  x="130.52" y="927.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (167 samples, 2.63%)</title><rect x="723.3" y="1877" width="31.0" height="15.0" fill="rgb(226,126,53)" rx="2" ry="2" />
<text  x="726.28" y="1887.5" >on..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="805" width="0.2" height="15.0" fill="rgb(254,123,35)" rx="2" ry="2" />
<text  x="204.34" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1605" width="0.2" height="15.0" fill="rgb(212,45,18)" rx="2" ry="2" />
<text  x="1170.69" y="1615.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (111 samples, 1.75%)</title><rect x="952.0" y="2053" width="20.6" height="15.0" fill="rgb(242,6,16)" rx="2" ry="2" />
<text  x="954.99" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="201.0" y="1941" width="1.1" height="15.0" fill="rgb(228,32,5)" rx="2" ry="2" />
<text  x="203.96" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1493" width="0.2" height="15.0" fill="rgb(241,45,18)" rx="2" ry="2" />
<text  x="204.34" y="1503.5" ></text>
</g>
<g >
<title>syscall (4 samples, 0.06%)</title><rect x="95.3" y="1973" width="0.8" height="15.0" fill="rgb(219,159,5)" rx="2" ry="2" />
<text  x="98.35" y="1983.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="595.0" y="2005" width="0.2" height="15.0" fill="rgb(245,78,42)" rx="2" ry="2" />
<text  x="597.98" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="533" width="0.2" height="15.0" fill="rgb(207,124,16)" rx="2" ry="2" />
<text  x="204.89" y="543.5" ></text>
</g>
<g >
<title>memcmp@plt (7 samples, 0.11%)</title><rect x="1120.5" y="2053" width="1.3" height="15.0" fill="rgb(238,189,36)" rx="2" ry="2" />
<text  x="1123.46" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (117 samples, 1.84%)</title><rect x="128.6" y="1797" width="21.8" height="15.0" fill="rgb(221,178,40)" rx="2" ry="2" />
<text  x="131.63" y="1807.5" >s..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="200.6" y="1861" width="0.2" height="15.0" fill="rgb(229,59,16)" rx="2" ry="2" />
<text  x="203.59" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="69" width="0.2" height="15.0" fill="rgb(213,9,41)" rx="2" ry="2" />
<text  x="204.34" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="357" width="0.2" height="15.0" fill="rgb(221,121,2)" rx="2" ry="2" />
<text  x="1170.50" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1477" width="0.2" height="15.0" fill="rgb(250,168,37)" rx="2" ry="2" />
<text  x="1170.69" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="533" width="0.2" height="15.0" fill="rgb(219,7,21)" rx="2" ry="2" />
<text  x="1170.50" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="133" width="0.4" height="15.0" fill="rgb(233,123,54)" rx="2" ry="2" />
<text  x="75.85" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1157" width="0.2" height="15.0" fill="rgb(229,194,17)" rx="2" ry="2" />
<text  x="160.08" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1349" width="0.2" height="15.0" fill="rgb(206,193,20)" rx="2" ry="2" />
<text  x="1170.31" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (117 samples, 1.84%)</title><rect x="128.6" y="1781" width="21.8" height="15.0" fill="rgb(214,183,52)" rx="2" ry="2" />
<text  x="131.63" y="1791.5" >s..</text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1,330 samples, 20.96%)</title><rect x="606.7" y="1909" width="247.3" height="15.0" fill="rgb(253,102,19)" rx="2" ry="2" />
<text  x="609.69" y="1919.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::locale::operator= (2 samples, 0.03%)</title><rect x="34.4" y="2021" width="0.3" height="15.0" fill="rgb(222,205,15)" rx="2" ry="2" />
<text  x="37.36" y="2031.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8 samples, 0.13%)</title><rect x="30.8" y="1973" width="1.5" height="15.0" fill="rgb(214,129,21)" rx="2" ry="2" />
<text  x="33.83" y="1983.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set_case_region_begin (1 samples, 0.02%)</title><rect x="602.4" y="1909" width="0.2" height="15.0" fill="rgb(206,190,2)" rx="2" ry="2" />
<text  x="605.42" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (148 samples, 2.33%)</title><rect x="128.6" y="1813" width="27.6" height="15.0" fill="rgb(249,205,37)" rx="2" ry="2" />
<text  x="131.63" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1221" width="0.2" height="15.0" fill="rgb(218,206,16)" rx="2" ry="2" />
<text  x="160.08" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (29 samples, 0.46%)</title><rect x="107.2" y="1765" width="5.4" height="15.0" fill="rgb(254,36,43)" rx="2" ry="2" />
<text  x="110.25" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (4,580 samples, 72.17%)</title><rect x="37.7" y="2053" width="851.6" height="15.0" fill="rgb(233,180,8)" rx="2" ry="2" />
<text  x="40.71" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.49%)</title><rect x="150.4" y="1797" width="5.8" height="15.0" fill="rgb(216,212,47)" rx="2" ry="2" />
<text  x="153.39" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="197" width="0.5" height="15.0" fill="rgb(214,10,7)" rx="2" ry="2" />
<text  x="1170.87" y="207.5" ></text>
</g>
<g >
<title>operator delete@plt (3 samples, 0.05%)</title><rect x="1123.1" y="2053" width="0.5" height="15.0" fill="rgb(252,90,14)" rx="2" ry="2" />
<text  x="1126.06" y="2063.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.02%)</title><rect x="594.4" y="1973" width="0.2" height="15.0" fill="rgb(220,71,8)" rx="2" ry="2" />
<text  x="597.42" y="1983.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="156.0" y="1685" width="0.2" height="15.0" fill="rgb(240,194,34)" rx="2" ry="2" />
<text  x="158.97" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="373" width="0.2" height="15.0" fill="rgb(208,145,7)" rx="2" ry="2" />
<text  x="204.71" y="383.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="197.1" y="1685" width="0.1" height="15.0" fill="rgb(248,141,11)" rx="2" ry="2" />
<text  x="200.06" y="1695.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="160.4" y="1653" width="0.2" height="15.0" fill="rgb(251,196,28)" rx="2" ry="2" />
<text  x="163.43" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="421" width="0.5" height="15.0" fill="rgb(223,22,16)" rx="2" ry="2" />
<text  x="1170.87" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="709" width="0.2" height="15.0" fill="rgb(212,173,39)" rx="2" ry="2" />
<text  x="1170.50" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (2 samples, 0.03%)</title><rect x="126.4" y="1877" width="0.4" height="15.0" fill="rgb(227,39,34)" rx="2" ry="2" />
<text  x="129.40" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1221" width="0.5" height="15.0" fill="rgb(215,84,37)" rx="2" ry="2" />
<text  x="1170.87" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="197" width="0.2" height="15.0" fill="rgb(219,50,28)" rx="2" ry="2" />
<text  x="1170.31" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.03%)</title><rect x="592.0" y="1941" width="0.4" height="15.0" fill="rgb(212,74,11)" rx="2" ry="2" />
<text  x="595.00" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1461" width="0.2" height="15.0" fill="rgb(233,103,43)" rx="2" ry="2" />
<text  x="1170.50" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="565" width="0.2" height="15.0" fill="rgb(239,142,21)" rx="2" ry="2" />
<text  x="130.52" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (27 samples, 0.43%)</title><rect x="97.2" y="1621" width="5.0" height="15.0" fill="rgb(243,174,47)" rx="2" ry="2" />
<text  x="100.21" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (16 samples, 0.25%)</title><rect x="1135.7" y="2053" width="3.0" height="15.0" fill="rgb(219,53,20)" rx="2" ry="2" />
<text  x="1138.70" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="741" width="0.2" height="15.0" fill="rgb(206,227,26)" rx="2" ry="2" />
<text  x="204.34" y="751.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (1 samples, 0.02%)</title><rect x="593.9" y="1957" width="0.1" height="15.0" fill="rgb(237,165,24)" rx="2" ry="2" />
<text  x="596.86" y="1967.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="934.9" y="1941" width="0.2" height="15.0" fill="rgb(208,167,7)" rx="2" ry="2" />
<text  x="937.88" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="245" width="0.2" height="15.0" fill="rgb(221,219,19)" rx="2" ry="2" />
<text  x="1170.69" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1157" width="0.2" height="15.0" fill="rgb(215,152,32)" rx="2" ry="2" />
<text  x="160.27" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="190.9" y="1733" width="0.2" height="15.0" fill="rgb(238,34,3)" rx="2" ry="2" />
<text  x="193.92" y="1743.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="862.2" y="1909" width="0.2" height="15.0" fill="rgb(251,164,41)" rx="2" ry="2" />
<text  x="865.18" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1925" width="0.2" height="15.0" fill="rgb(249,224,29)" rx="2" ry="2" />
<text  x="1170.69" y="1935.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="71.7" y="1909" width="0.2" height="15.0" fill="rgb(247,146,26)" rx="2" ry="2" />
<text  x="74.73" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="213" width="0.2" height="15.0" fill="rgb(242,61,19)" rx="2" ry="2" />
<text  x="1170.31" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1573" width="0.2" height="15.0" fill="rgb(229,126,4)" rx="2" ry="2" />
<text  x="1170.69" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1397" width="0.2" height="15.0" fill="rgb(246,35,1)" rx="2" ry="2" />
<text  x="204.34" y="1407.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (4 samples, 0.06%)</title><rect x="166.2" y="1573" width="0.7" height="15.0" fill="rgb(207,71,54)" rx="2" ry="2" />
<text  x="169.19" y="1583.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.13%)</title><rect x="107.4" y="1637" width="1.5" height="15.0" fill="rgb(219,197,0)" rx="2" ry="2" />
<text  x="110.43" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="200.4" y="1845" width="0.2" height="15.0" fill="rgb(207,107,1)" rx="2" ry="2" />
<text  x="203.41" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="661" width="0.2" height="15.0" fill="rgb(250,85,44)" rx="2" ry="2" />
<text  x="131.07" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="156.2" y="1797" width="0.1" height="15.0" fill="rgb(207,68,30)" rx="2" ry="2" />
<text  x="159.15" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="156.3" y="1813" width="0.4" height="15.0" fill="rgb(238,22,39)" rx="2" ry="2" />
<text  x="159.34" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="405" width="0.4" height="15.0" fill="rgb(251,50,3)" rx="2" ry="2" />
<text  x="75.85" y="415.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="469" width="0.4" height="15.0" fill="rgb(225,21,52)" rx="2" ry="2" />
<text  x="75.85" y="479.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1861" width="0.2" height="15.0" fill="rgb(215,229,1)" rx="2" ry="2" />
<text  x="75.48" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1429" width="0.2" height="15.0" fill="rgb(214,196,19)" rx="2" ry="2" />
<text  x="130.52" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="613" width="0.4" height="15.0" fill="rgb(209,62,9)" rx="2" ry="2" />
<text  x="75.85" y="623.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="109.3" y="1637" width="0.2" height="15.0" fill="rgb(209,200,20)" rx="2" ry="2" />
<text  x="112.29" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1957" width="0.2" height="15.0" fill="rgb(231,58,16)" rx="2" ry="2" />
<text  x="1170.69" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (27 samples, 0.43%)</title><rect x="107.2" y="1685" width="5.1" height="15.0" fill="rgb(205,163,8)" rx="2" ry="2" />
<text  x="110.25" y="1695.5" ></text>
</g>
<g >
<title>all (6,346 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(247,59,8)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="719.4" y="1845" width="0.2" height="15.0" fill="rgb(216,141,38)" rx="2" ry="2" />
<text  x="722.38" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="213" width="0.2" height="15.0" fill="rgb(208,108,26)" rx="2" ry="2" />
<text  x="204.89" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="157.1" y="1685" width="0.5" height="15.0" fill="rgb(241,89,42)" rx="2" ry="2" />
<text  x="160.08" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1685" width="0.5" height="15.0" fill="rgb(222,115,49)" rx="2" ry="2" />
<text  x="75.66" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1205" width="0.2" height="15.0" fill="rgb(236,7,38)" rx="2" ry="2" />
<text  x="130.52" y="1215.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (4 samples, 0.06%)</title><rect x="1099.6" y="2053" width="0.8" height="15.0" fill="rgb(249,221,9)" rx="2" ry="2" />
<text  x="1102.63" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (49 samples, 0.77%)</title><rect x="191.1" y="1797" width="9.1" height="15.0" fill="rgb(219,139,29)" rx="2" ry="2" />
<text  x="194.11" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (219 samples, 3.45%)</title><rect x="160.1" y="1925" width="40.7" height="15.0" fill="rgb(207,159,26)" rx="2" ry="2" />
<text  x="163.06" y="1935.5" >std..</text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="175.9" y="1749" width="0.1" height="15.0" fill="rgb(248,198,13)" rx="2" ry="2" />
<text  x="178.86" y="1759.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="2005" width="0.2" height="15.0" fill="rgb(225,116,8)" rx="2" ry="2" />
<text  x="75.48" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="437" width="0.2" height="15.0" fill="rgb(219,68,36)" rx="2" ry="2" />
<text  x="1170.31" y="447.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="174.6" y="1621" width="0.5" height="15.0" fill="rgb(247,131,1)" rx="2" ry="2" />
<text  x="177.56" y="1631.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="934.7" y="2021" width="0.2" height="15.0" fill="rgb(221,27,15)" rx="2" ry="2" />
<text  x="937.70" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="965" width="0.2" height="15.0" fill="rgb(254,68,19)" rx="2" ry="2" />
<text  x="204.34" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1797" width="0.2" height="15.0" fill="rgb(250,111,24)" rx="2" ry="2" />
<text  x="1170.31" y="1807.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (4 samples, 0.06%)</title><rect x="139.6" y="1589" width="0.7" height="15.0" fill="rgb(238,18,31)" rx="2" ry="2" />
<text  x="142.60" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="437" width="0.2" height="15.0" fill="rgb(229,194,28)" rx="2" ry="2" />
<text  x="1170.50" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (58 samples, 0.91%)</title><rect x="754.5" y="1877" width="10.8" height="15.0" fill="rgb(228,125,13)" rx="2" ry="2" />
<text  x="757.52" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="133.3" y="1557" width="0.2" height="15.0" fill="rgb(232,47,45)" rx="2" ry="2" />
<text  x="136.28" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="965" width="0.5" height="15.0" fill="rgb(245,104,5)" rx="2" ry="2" />
<text  x="1170.87" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1381" width="0.4" height="15.0" fill="rgb(219,93,14)" rx="2" ry="2" />
<text  x="130.89" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1301" width="0.2" height="15.0" fill="rgb(243,213,40)" rx="2" ry="2" />
<text  x="1170.31" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.3" y="1397" width="0.2" height="15.0" fill="rgb(216,76,12)" rx="2" ry="2" />
<text  x="160.27" y="1407.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.02%)</title><rect x="450.5" y="1813" width="0.2" height="15.0" fill="rgb(207,119,50)" rx="2" ry="2" />
<text  x="453.50" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1733" width="0.5" height="15.0" fill="rgb(243,46,14)" rx="2" ry="2" />
<text  x="75.66" y="1743.5" ></text>
</g>
<g >
<title>futex_wait (2 samples, 0.03%)</title><rect x="95.7" y="1893" width="0.4" height="15.0" fill="rgb(225,122,21)" rx="2" ry="2" />
<text  x="98.72" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1781" width="0.5" height="15.0" fill="rgb(238,212,16)" rx="2" ry="2" />
<text  x="75.66" y="1791.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="596.3" y="2005" width="0.2" height="15.0" fill="rgb(220,80,10)" rx="2" ry="2" />
<text  x="599.28" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="157.1" y="1669" width="0.5" height="15.0" fill="rgb(225,156,50)" rx="2" ry="2" />
<text  x="160.08" y="1679.5" ></text>
</g>
<g >
<title>do_page_fault (12 samples, 0.19%)</title><rect x="30.1" y="2021" width="2.2" height="15.0" fill="rgb(246,26,8)" rx="2" ry="2" />
<text  x="33.08" y="2031.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.03%)</title><rect x="432.8" y="1877" width="0.4" height="15.0" fill="rgb(254,41,40)" rx="2" ry="2" />
<text  x="435.84" y="1887.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="889.1" y="1925" width="0.2" height="15.0" fill="rgb(209,209,30)" rx="2" ry="2" />
<text  x="892.14" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1637" width="0.2" height="15.0" fill="rgb(238,150,6)" rx="2" ry="2" />
<text  x="75.48" y="1647.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="178.1" y="1637" width="0.4" height="15.0" fill="rgb(246,79,42)" rx="2" ry="2" />
<text  x="181.09" y="1647.5" ></text>
</g>
<g >
<title>write (1 samples, 0.02%)</title><rect x="889.1" y="2037" width="0.2" height="15.0" fill="rgb(216,213,1)" rx="2" ry="2" />
<text  x="892.14" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="181" width="0.5" height="15.0" fill="rgb(249,195,12)" rx="2" ry="2" />
<text  x="1170.87" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1669" width="0.5" height="15.0" fill="rgb(230,164,14)" rx="2" ry="2" />
<text  x="1170.87" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="200.2" y="1877" width="0.2" height="15.0" fill="rgb(217,178,38)" rx="2" ry="2" />
<text  x="203.22" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1205" width="0.2" height="15.0" fill="rgb(214,201,33)" rx="2" ry="2" />
<text  x="204.34" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (3 samples, 0.05%)</title><rect x="1145.2" y="2053" width="0.5" height="15.0" fill="rgb(229,155,4)" rx="2" ry="2" />
<text  x="1148.19" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (26 samples, 0.41%)</title><rect x="120.5" y="1701" width="4.8" height="15.0" fill="rgb(237,67,46)" rx="2" ry="2" />
<text  x="123.45" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="213" width="0.2" height="15.0" fill="rgb(248,210,18)" rx="2" ry="2" />
<text  x="204.34" y="223.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::ArrayWrapper&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (128 samples, 2.02%)</title><rect x="409.8" y="1973" width="23.8" height="15.0" fill="rgb(243,190,6)" rx="2" ry="2" />
<text  x="412.78" y="1983.5" >E..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1029" width="0.2" height="15.0" fill="rgb(225,187,25)" rx="2" ry="2" />
<text  x="130.52" y="1039.5" ></text>
</g>
<g >
<title>handle_mm_fault (25 samples, 0.39%)</title><rect x="420.4" y="1893" width="4.6" height="15.0" fill="rgb(250,219,16)" rx="2" ry="2" />
<text  x="423.38" y="1903.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (2 samples, 0.03%)</title><rect x="595.4" y="2005" width="0.3" height="15.0" fill="rgb(228,211,20)" rx="2" ry="2" />
<text  x="598.35" y="2015.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="106.9" y="1605" width="0.3" height="15.0" fill="rgb(218,23,8)" rx="2" ry="2" />
<text  x="109.88" y="1615.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="71.9" y="1925" width="0.2" height="15.0" fill="rgb(216,37,36)" rx="2" ry="2" />
<text  x="74.92" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.06%)</title><rect x="191.7" y="1701" width="0.7" height="15.0" fill="rgb(232,23,7)" rx="2" ry="2" />
<text  x="194.67" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="373" width="0.2" height="15.0" fill="rgb(239,158,27)" rx="2" ry="2" />
<text  x="204.89" y="383.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="143.9" y="1605" width="0.4" height="15.0" fill="rgb(216,128,21)" rx="2" ry="2" />
<text  x="146.88" y="1615.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.02%)</title><rect x="433.4" y="1893" width="0.2" height="15.0" fill="rgb(241,32,37)" rx="2" ry="2" />
<text  x="436.39" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1109" width="0.5" height="15.0" fill="rgb(236,172,45)" rx="2" ry="2" />
<text  x="75.66" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="949" width="0.2" height="15.0" fill="rgb(251,150,7)" rx="2" ry="2" />
<text  x="1170.69" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1957" width="0.2" height="15.0" fill="rgb(240,182,49)" rx="2" ry="2" />
<text  x="1170.31" y="1967.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1 samples, 0.02%)</title><rect x="856.2" y="1941" width="0.2" height="15.0" fill="rgb(226,30,3)" rx="2" ry="2" />
<text  x="859.23" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="201.0" y="1861" width="1.1" height="15.0" fill="rgb(243,146,30)" rx="2" ry="2" />
<text  x="203.96" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1173" width="0.2" height="15.0" fill="rgb(233,143,51)" rx="2" ry="2" />
<text  x="130.52" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="85" width="0.2" height="15.0" fill="rgb(254,141,12)" rx="2" ry="2" />
<text  x="1170.69" y="95.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="196.9" y="1685" width="0.2" height="15.0" fill="rgb(220,136,18)" rx="2" ry="2" />
<text  x="199.87" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (43 samples, 0.68%)</title><rect x="160.6" y="1701" width="8.0" height="15.0" fill="rgb(234,197,24)" rx="2" ry="2" />
<text  x="163.61" y="1711.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1845" width="0.2" height="15.0" fill="rgb(210,0,35)" rx="2" ry="2" />
<text  x="75.48" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="997" width="0.2" height="15.0" fill="rgb(241,129,17)" rx="2" ry="2" />
<text  x="204.34" y="1007.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (15 samples, 0.24%)</title><rect x="603.9" y="1909" width="2.8" height="15.0" fill="rgb(226,185,23)" rx="2" ry="2" />
<text  x="606.90" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1205" width="0.2" height="15.0" fill="rgb(234,2,0)" rx="2" ry="2" />
<text  x="1170.69" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="117" width="0.2" height="15.0" fill="rgb(223,219,37)" rx="2" ry="2" />
<text  x="204.34" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::construct&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="594.4" y="1989" width="0.2" height="15.0" fill="rgb(213,204,53)" rx="2" ry="2" />
<text  x="597.42" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1509" width="0.2" height="15.0" fill="rgb(212,2,50)" rx="2" ry="2" />
<text  x="1170.69" y="1519.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="857.7" y="1973" width="0.2" height="15.0" fill="rgb(222,11,36)" rx="2" ry="2" />
<text  x="860.72" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="149" width="0.2" height="15.0" fill="rgb(242,119,51)" rx="2" ry="2" />
<text  x="204.34" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28 samples, 0.44%)</title><rect x="129.2" y="1653" width="5.2" height="15.0" fill="rgb(208,21,21)" rx="2" ry="2" />
<text  x="132.19" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1749" width="0.2" height="15.0" fill="rgb(251,97,3)" rx="2" ry="2" />
<text  x="1170.31" y="1759.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (43 samples, 0.68%)</title><rect x="892.3" y="2053" width="8.0" height="15.0" fill="rgb(215,190,2)" rx="2" ry="2" />
<text  x="895.30" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (42 samples, 0.66%)</title><rect x="160.6" y="1621" width="7.8" height="15.0" fill="rgb(243,85,27)" rx="2" ry="2" />
<text  x="163.61" y="1631.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (5 samples, 0.08%)</title><rect x="574.9" y="1973" width="0.9" height="15.0" fill="rgb(239,122,27)" rx="2" ry="2" />
<text  x="577.90" y="1983.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.05%)</title><rect x="125.3" y="1701" width="0.5" height="15.0" fill="rgb(228,113,30)" rx="2" ry="2" />
<text  x="128.29" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="2005" width="0.5" height="15.0" fill="rgb(242,216,53)" rx="2" ry="2" />
<text  x="1170.87" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="485" width="0.2" height="15.0" fill="rgb(247,75,1)" rx="2" ry="2" />
<text  x="1170.31" y="495.5" ></text>
</g>
<g >
<title>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::handle_value&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="82.0" y="1941" width="0.3" height="15.0" fill="rgb(210,50,50)" rx="2" ry="2" />
<text  x="84.96" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="200.8" y="1925" width="0.2" height="15.0" fill="rgb(251,116,50)" rx="2" ry="2" />
<text  x="203.78" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="597" width="0.2" height="15.0" fill="rgb(218,172,11)" rx="2" ry="2" />
<text  x="204.34" y="607.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1829" width="0.2" height="15.0" fill="rgb(251,209,28)" rx="2" ry="2" />
<text  x="75.48" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="309" width="0.2" height="15.0" fill="rgb(231,46,54)" rx="2" ry="2" />
<text  x="1170.50" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="821" width="0.2" height="15.0" fill="rgb(211,92,28)" rx="2" ry="2" />
<text  x="1170.69" y="831.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="309" width="0.4" height="15.0" fill="rgb(241,55,31)" rx="2" ry="2" />
<text  x="75.85" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="2005" width="0.2" height="15.0" fill="rgb(218,197,45)" rx="2" ry="2" />
<text  x="1170.69" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="201.5" y="1733" width="0.6" height="15.0" fill="rgb(250,64,37)" rx="2" ry="2" />
<text  x="204.52" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="645" width="0.2" height="15.0" fill="rgb(242,160,9)" rx="2" ry="2" />
<text  x="131.07" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="309" width="0.2" height="15.0" fill="rgb(242,227,8)" rx="2" ry="2" />
<text  x="1170.31" y="319.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="709" width="0.4" height="15.0" fill="rgb(216,198,6)" rx="2" ry="2" />
<text  x="75.85" y="719.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="158.0" y="1989" width="0.2" height="15.0" fill="rgb(206,37,40)" rx="2" ry="2" />
<text  x="161.01" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (1,406 samples, 22.16%)</title><rect x="596.8" y="2005" width="261.5" height="15.0" fill="rgb(213,113,54)" rx="2" ry="2" />
<text  x="599.84" y="2015.5" >std::_Function_handler&lt;std::unique..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="789" width="0.2" height="15.0" fill="rgb(225,172,3)" rx="2" ry="2" />
<text  x="204.71" y="799.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (5 samples, 0.08%)</title><rect x="124.4" y="1685" width="0.9" height="15.0" fill="rgb(237,154,20)" rx="2" ry="2" />
<text  x="127.36" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="981" width="0.2" height="15.0" fill="rgb(224,151,9)" rx="2" ry="2" />
<text  x="1170.31" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="110.8" y="1621" width="0.5" height="15.0" fill="rgb(242,82,28)" rx="2" ry="2" />
<text  x="113.78" y="1631.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="77.9" y="2021" width="0.2" height="15.0" fill="rgb(215,195,2)" rx="2" ry="2" />
<text  x="80.87" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1861" width="0.5" height="15.0" fill="rgb(215,133,15)" rx="2" ry="2" />
<text  x="75.66" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1029" width="0.5" height="15.0" fill="rgb(206,23,54)" rx="2" ry="2" />
<text  x="1170.87" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1765" width="0.2" height="15.0" fill="rgb(252,224,52)" rx="2" ry="2" />
<text  x="1170.31" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="661" width="0.4" height="15.0" fill="rgb(206,133,29)" rx="2" ry="2" />
<text  x="75.85" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1477" width="0.5" height="15.0" fill="rgb(224,35,46)" rx="2" ry="2" />
<text  x="1170.87" y="1487.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4 samples, 0.06%)</title><rect x="910.5" y="1925" width="0.8" height="15.0" fill="rgb(213,114,24)" rx="2" ry="2" />
<text  x="913.53" y="1935.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (280 samples, 4.41%)</title><rect x="771.6" y="1893" width="52.1" height="15.0" fill="rgb(250,33,37)" rx="2" ry="2" />
<text  x="774.63" y="1903.5" >onmt:..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="190.6" y="1669" width="0.3" height="15.0" fill="rgb(215,10,10)" rx="2" ry="2" />
<text  x="193.55" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1973" width="0.2" height="15.0" fill="rgb(225,117,41)" rx="2" ry="2" />
<text  x="1170.50" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="201.0" y="1733" width="0.5" height="15.0" fill="rgb(235,43,24)" rx="2" ry="2" />
<text  x="203.96" y="1743.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="764.9" y="1861" width="0.4" height="15.0" fill="rgb(240,203,48)" rx="2" ry="2" />
<text  x="767.93" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="277" width="0.2" height="15.0" fill="rgb(245,7,1)" rx="2" ry="2" />
<text  x="1170.69" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="693" width="0.5" height="15.0" fill="rgb(228,183,51)" rx="2" ry="2" />
<text  x="1170.87" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="201.0" y="1717" width="0.5" height="15.0" fill="rgb(218,101,3)" rx="2" ry="2" />
<text  x="203.96" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1461" width="0.2" height="15.0" fill="rgb(225,42,5)" rx="2" ry="2" />
<text  x="160.27" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.13%)</title><rect x="122.9" y="1685" width="1.5" height="15.0" fill="rgb(243,75,42)" rx="2" ry="2" />
<text  x="125.87" y="1695.5" ></text>
</g>
<g >
<title>vfs_read (6 samples, 0.09%)</title><rect x="78.2" y="1957" width="1.2" height="15.0" fill="rgb(219,36,10)" rx="2" ry="2" />
<text  x="81.24" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.2" y="1637" width="0.3" height="15.0" fill="rgb(249,136,23)" rx="2" ry="2" />
<text  x="204.15" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="319.6" y="1941" width="0.4" height="15.0" fill="rgb(220,206,12)" rx="2" ry="2" />
<text  x="322.60" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1365" width="0.5" height="15.0" fill="rgb(227,169,13)" rx="2" ry="2" />
<text  x="75.66" y="1375.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="178.5" y="1637" width="0.2" height="15.0" fill="rgb(228,151,18)" rx="2" ry="2" />
<text  x="181.47" y="1647.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="81.6" y="1973" width="0.2" height="15.0" fill="rgb(224,198,48)" rx="2" ry="2" />
<text  x="84.59" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1381" width="0.2" height="15.0" fill="rgb(221,155,50)" rx="2" ry="2" />
<text  x="204.34" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="146.3" y="1637" width="0.2" height="15.0" fill="rgb(212,86,49)" rx="2" ry="2" />
<text  x="149.30" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="837" width="0.2" height="15.0" fill="rgb(245,195,27)" rx="2" ry="2" />
<text  x="160.08" y="847.5" ></text>
</g>
<g >
<title>operator delete[] (1 samples, 0.02%)</title><rect x="1123.6" y="2053" width="0.2" height="15.0" fill="rgb(219,206,43)" rx="2" ry="2" />
<text  x="1126.62" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="175.7" y="1749" width="0.2" height="15.0" fill="rgb(214,110,23)" rx="2" ry="2" />
<text  x="178.68" y="1759.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1797" width="0.2" height="15.0" fill="rgb(249,109,19)" rx="2" ry="2" />
<text  x="75.48" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="549" width="0.2" height="15.0" fill="rgb(245,77,15)" rx="2" ry="2" />
<text  x="1170.50" y="559.5" ></text>
</g>
<g >
<title>malloc (74 samples, 1.17%)</title><rect x="1106.0" y="2053" width="13.7" height="15.0" fill="rgb(214,42,53)" rx="2" ry="2" />
<text  x="1108.95" y="2063.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="849.7" y="1861" width="0.2" height="15.0" fill="rgb(230,97,1)" rx="2" ry="2" />
<text  x="852.72" y="1871.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="181.4" y="1621" width="0.6" height="15.0" fill="rgb(207,188,30)" rx="2" ry="2" />
<text  x="184.44" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="629" width="0.2" height="15.0" fill="rgb(243,44,2)" rx="2" ry="2" />
<text  x="1170.31" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="933" width="0.2" height="15.0" fill="rgb(222,189,0)" rx="2" ry="2" />
<text  x="1170.50" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="127.1" y="1733" width="0.6" height="15.0" fill="rgb(209,23,23)" rx="2" ry="2" />
<text  x="130.14" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1957" width="0.5" height="15.0" fill="rgb(219,64,38)" rx="2" ry="2" />
<text  x="1170.87" y="1967.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="149.8" y="1653" width="0.2" height="15.0" fill="rgb(233,86,43)" rx="2" ry="2" />
<text  x="152.83" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.50%)</title><rect x="140.5" y="1717" width="6.0" height="15.0" fill="rgb(244,8,42)" rx="2" ry="2" />
<text  x="143.53" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (158 samples, 2.49%)</title><rect x="97.0" y="1845" width="29.4" height="15.0" fill="rgb(224,23,37)" rx="2" ry="2" />
<text  x="100.02" y="1855.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="53" width="0.2" height="15.0" fill="rgb(248,109,16)" rx="2" ry="2" />
<text  x="1170.50" y="63.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1653" width="0.2" height="15.0" fill="rgb(225,212,30)" rx="2" ry="2" />
<text  x="75.48" y="1663.5" ></text>
</g>
<g >
<title>TDocument::PreprocessTextFields (1,392 samples, 21.94%)</title><rect x="598.9" y="1973" width="258.8" height="15.0" fill="rgb(241,122,1)" rx="2" ry="2" />
<text  x="601.88" y="1983.5" >TDocument::PreprocessTextFields</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="885" width="0.2" height="15.0" fill="rgb(253,70,37)" rx="2" ry="2" />
<text  x="204.89" y="895.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="72.1" y="1989" width="0.2" height="15.0" fill="rgb(229,25,12)" rx="2" ry="2" />
<text  x="75.11" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="325" width="0.2" height="15.0" fill="rgb(234,79,54)" rx="2" ry="2" />
<text  x="204.34" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1429" width="0.2" height="15.0" fill="rgb(253,122,3)" rx="2" ry="2" />
<text  x="1170.31" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="229" width="0.4" height="15.0" fill="rgb(243,228,41)" rx="2" ry="2" />
<text  x="75.85" y="239.5" ></text>
</g>
<g >
<title>GetHost (158 samples, 2.49%)</title><rect x="128.3" y="1957" width="29.3" height="15.0" fill="rgb(227,180,30)" rx="2" ry="2" />
<text  x="131.26" y="1967.5" >Ge..</text>
</g>
<g >
<title>std::packaged_task&lt;boost::optional&lt;TDocument&gt;  (1 samples, 0.02%)</title><rect x="96.1" y="1989" width="0.2" height="15.0" fill="rgb(242,145,45)" rx="2" ry="2" />
<text  x="99.09" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1525" width="0.5" height="15.0" fill="rgb(215,10,25)" rx="2" ry="2" />
<text  x="75.66" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1189" width="0.2" height="15.0" fill="rgb(238,108,54)" rx="2" ry="2" />
<text  x="204.34" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1797" width="0.5" height="15.0" fill="rgb(234,122,6)" rx="2" ry="2" />
<text  x="75.66" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (43 samples, 0.68%)</title><rect x="176.0" y="1733" width="8.0" height="15.0" fill="rgb(233,54,21)" rx="2" ry="2" />
<text  x="179.05" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="156.5" y="1797" width="0.2" height="15.0" fill="rgb(230,131,8)" rx="2" ry="2" />
<text  x="159.52" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="1173" width="0.2" height="15.0" fill="rgb(213,79,31)" rx="2" ry="2" />
<text  x="204.89" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1557" width="0.2" height="15.0" fill="rgb(205,146,13)" rx="2" ry="2" />
<text  x="1170.50" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="837" width="0.2" height="15.0" fill="rgb(241,84,41)" rx="2" ry="2" />
<text  x="1170.31" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (1 samples, 0.02%)</title><rect x="888.8" y="2005" width="0.2" height="15.0" fill="rgb(233,143,21)" rx="2" ry="2" />
<text  x="891.77" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="181" width="0.4" height="15.0" fill="rgb(235,46,34)" rx="2" ry="2" />
<text  x="75.85" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="101" width="0.2" height="15.0" fill="rgb(232,127,33)" rx="2" ry="2" />
<text  x="204.34" y="111.5" ></text>
</g>
<g >
<title>do_page_fault (15 samples, 0.24%)</title><rect x="719.6" y="1845" width="2.8" height="15.0" fill="rgb(206,160,42)" rx="2" ry="2" />
<text  x="722.56" y="1855.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.03%)</title><rect x="450.3" y="1861" width="0.4" height="15.0" fill="rgb(210,3,32)" rx="2" ry="2" />
<text  x="453.32" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="115.8" y="1653" width="0.2" height="15.0" fill="rgb(248,170,7)" rx="2" ry="2" />
<text  x="118.80" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="789" width="0.2" height="15.0" fill="rgb(216,109,9)" rx="2" ry="2" />
<text  x="131.07" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="645" width="0.2" height="15.0" fill="rgb(212,96,54)" rx="2" ry="2" />
<text  x="204.89" y="655.5" ></text>
</g>
<g >
<title>strlen@plt (6 samples, 0.09%)</title><rect x="852.9" y="1893" width="1.1" height="15.0" fill="rgb(227,169,46)" rx="2" ry="2" />
<text  x="855.88" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="629" width="0.2" height="15.0" fill="rgb(249,144,25)" rx="2" ry="2" />
<text  x="1170.50" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="200.4" y="1877" width="0.2" height="15.0" fill="rgb(221,142,22)" rx="2" ry="2" />
<text  x="203.41" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="245" width="0.2" height="15.0" fill="rgb(215,193,28)" rx="2" ry="2" />
<text  x="204.71" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="677" width="0.2" height="15.0" fill="rgb(242,145,29)" rx="2" ry="2" />
<text  x="204.71" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.7" y="1573" width="0.4" height="15.0" fill="rgb(247,77,53)" rx="2" ry="2" />
<text  x="204.71" y="1583.5" ></text>
</g>
<g >
<title>handle_mm_fault (37 samples, 0.58%)</title><rect x="426.7" y="1909" width="6.9" height="15.0" fill="rgb(228,204,20)" rx="2" ry="2" />
<text  x="429.70" y="1919.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.03%)</title><rect x="596.5" y="1973" width="0.3" height="15.0" fill="rgb(205,10,6)" rx="2" ry="2" />
<text  x="599.47" y="1983.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="167.1" y="1589" width="0.2" height="15.0" fill="rgb(221,205,26)" rx="2" ry="2" />
<text  x="170.12" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1173" width="0.2" height="15.0" fill="rgb(244,52,11)" rx="2" ry="2" />
<text  x="1170.50" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="533" width="0.2" height="15.0" fill="rgb(232,158,28)" rx="2" ry="2" />
<text  x="204.71" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1141" width="0.2" height="15.0" fill="rgb(247,189,10)" rx="2" ry="2" />
<text  x="204.34" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.7" y="1381" width="0.4" height="15.0" fill="rgb(216,33,3)" rx="2" ry="2" />
<text  x="204.71" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="100.9" y="1573" width="0.2" height="15.0" fill="rgb(250,72,32)" rx="2" ry="2" />
<text  x="103.93" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (23 samples, 0.36%)</title><rect x="178.8" y="1637" width="4.3" height="15.0" fill="rgb(249,97,22)" rx="2" ry="2" />
<text  x="181.84" y="1647.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (1 samples, 0.02%)</title><rect x="597.4" y="1957" width="0.2" height="15.0" fill="rgb(206,156,52)" rx="2" ry="2" />
<text  x="600.40" y="1967.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (22 samples, 0.35%)</title><rect x="446.0" y="1973" width="4.1" height="15.0" fill="rgb(250,217,18)" rx="2" ry="2" />
<text  x="449.04" y="1983.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="594.4" y="1877" width="0.2" height="15.0" fill="rgb(212,41,29)" rx="2" ry="2" />
<text  x="597.42" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="581" width="0.2" height="15.0" fill="rgb(210,218,48)" rx="2" ry="2" />
<text  x="204.34" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.02%)</title><rect x="594.4" y="1845" width="0.2" height="15.0" fill="rgb(218,82,6)" rx="2" ry="2" />
<text  x="597.42" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="565" width="0.4" height="15.0" fill="rgb(213,24,4)" rx="2" ry="2" />
<text  x="75.85" y="575.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="164.1" y="1573" width="0.4" height="15.0" fill="rgb(221,145,24)" rx="2" ry="2" />
<text  x="167.15" y="1583.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.11%)</title><rect x="113.4" y="1669" width="1.3" height="15.0" fill="rgb(212,134,5)" rx="2" ry="2" />
<text  x="116.38" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1653" width="0.2" height="15.0" fill="rgb(225,85,12)" rx="2" ry="2" />
<text  x="1170.69" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1109" width="0.2" height="15.0" fill="rgb(216,95,28)" rx="2" ry="2" />
<text  x="1170.69" y="1119.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1,411 samples, 22.23%)</title><rect x="595.9" y="2037" width="262.4" height="15.0" fill="rgb(220,196,39)" rx="2" ry="2" />
<text  x="598.91" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1077" width="0.2" height="15.0" fill="rgb(248,127,6)" rx="2" ry="2" />
<text  x="1170.31" y="1087.5" ></text>
</g>
<g >
<title>__vfs_read (4 samples, 0.06%)</title><rect x="910.5" y="1957" width="0.8" height="15.0" fill="rgb(212,103,52)" rx="2" ry="2" />
<text  x="913.53" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (27 samples, 0.43%)</title><rect x="102.2" y="1701" width="5.0" height="15.0" fill="rgb(212,70,45)" rx="2" ry="2" />
<text  x="105.23" y="1711.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="82.0" y="1925" width="0.1" height="15.0" fill="rgb(242,137,22)" rx="2" ry="2" />
<text  x="84.96" y="1935.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (6 samples, 0.09%)</title><rect x="769.6" y="1893" width="1.1" height="15.0" fill="rgb(208,135,31)" rx="2" ry="2" />
<text  x="772.58" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (31 samples, 0.49%)</title><rect x="150.4" y="1717" width="5.8" height="15.0" fill="rgb(213,176,4)" rx="2" ry="2" />
<text  x="153.39" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="1029" width="0.2" height="15.0" fill="rgb(242,63,15)" rx="2" ry="2" />
<text  x="204.71" y="1039.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="719.4" y="1829" width="0.2" height="15.0" fill="rgb(210,153,11)" rx="2" ry="2" />
<text  x="722.38" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1925" width="0.2" height="15.0" fill="rgb(224,114,1)" rx="2" ry="2" />
<text  x="1170.50" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="789" width="0.5" height="15.0" fill="rgb(231,75,21)" rx="2" ry="2" />
<text  x="1170.87" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="156.9" y="1925" width="0.7" height="15.0" fill="rgb(221,46,52)" rx="2" ry="2" />
<text  x="159.90" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1109" width="0.2" height="15.0" fill="rgb(219,228,38)" rx="2" ry="2" />
<text  x="1170.31" y="1119.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.03%)</title><rect x="722.0" y="1749" width="0.4" height="15.0" fill="rgb(254,99,19)" rx="2" ry="2" />
<text  x="724.98" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1765" width="0.2" height="15.0" fill="rgb(215,156,50)" rx="2" ry="2" />
<text  x="1170.69" y="1775.5" ></text>
</g>
<g >
<title>TNewsCluster::GetFreshestTimestamp (2 samples, 0.03%)</title><rect x="339.9" y="2005" width="0.3" height="15.0" fill="rgb(244,6,51)" rx="2" ry="2" />
<text  x="342.86" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (27 samples, 0.43%)</title><rect x="102.2" y="1653" width="5.0" height="15.0" fill="rgb(238,52,43)" rx="2" ry="2" />
<text  x="105.23" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (13 samples, 0.20%)</title><rect x="99.1" y="1589" width="2.4" height="15.0" fill="rgb(250,90,42)" rx="2" ry="2" />
<text  x="102.07" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1637" width="0.2" height="15.0" fill="rgb(240,64,21)" rx="2" ry="2" />
<text  x="1170.69" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (20 samples, 0.32%)</title><rect x="136.6" y="1605" width="3.7" height="15.0" fill="rgb(243,48,20)" rx="2" ry="2" />
<text  x="139.63" y="1615.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (2 samples, 0.03%)</title><rect x="168.1" y="1589" width="0.3" height="15.0" fill="rgb(222,227,27)" rx="2" ry="2" />
<text  x="171.05" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="201.5" y="1701" width="0.6" height="15.0" fill="rgb(215,115,51)" rx="2" ry="2" />
<text  x="204.52" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1029" width="0.5" height="15.0" fill="rgb(228,154,9)" rx="2" ry="2" />
<text  x="75.66" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="901" width="0.2" height="15.0" fill="rgb(220,14,46)" rx="2" ry="2" />
<text  x="1170.31" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="629" width="0.5" height="15.0" fill="rgb(207,130,54)" rx="2" ry="2" />
<text  x="1170.87" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1525" width="0.2" height="15.0" fill="rgb(207,119,28)" rx="2" ry="2" />
<text  x="1170.69" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="184.2" y="1685" width="0.2" height="15.0" fill="rgb(223,127,10)" rx="2" ry="2" />
<text  x="187.23" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1861" width="0.2" height="15.0" fill="rgb(206,10,1)" rx="2" ry="2" />
<text  x="1170.69" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="37" width="0.5" height="15.0" fill="rgb(254,76,28)" rx="2" ry="2" />
<text  x="1170.87" y="47.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="849.7" y="1829" width="0.2" height="15.0" fill="rgb(218,201,23)" rx="2" ry="2" />
<text  x="852.72" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="134.4" y="1685" width="0.2" height="15.0" fill="rgb(241,85,14)" rx="2" ry="2" />
<text  x="137.40" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="1013" width="0.2" height="15.0" fill="rgb(241,73,9)" rx="2" ry="2" />
<text  x="204.89" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="261" width="0.2" height="15.0" fill="rgb(208,25,45)" rx="2" ry="2" />
<text  x="1170.50" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="437" width="0.2" height="15.0" fill="rgb(216,64,2)" rx="2" ry="2" />
<text  x="131.07" y="447.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.02%)</title><rect x="934.9" y="1989" width="0.2" height="15.0" fill="rgb(225,201,45)" rx="2" ry="2" />
<text  x="937.88" y="1999.5" ></text>
</g>
<g >
<title>vfs_read (4 samples, 0.06%)</title><rect x="910.5" y="1973" width="0.8" height="15.0" fill="rgb(239,1,46)" rx="2" ry="2" />
<text  x="913.53" y="1983.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.02%)</title><rect x="934.9" y="1893" width="0.2" height="15.0" fill="rgb(244,58,0)" rx="2" ry="2" />
<text  x="937.88" y="1903.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="37.5" y="1941" width="0.2" height="15.0" fill="rgb(244,219,10)" rx="2" ry="2" />
<text  x="40.52" y="1951.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry@plt (1 samples, 0.02%)</title><rect x="589.6" y="1973" width="0.2" height="15.0" fill="rgb(232,124,18)" rx="2" ry="2" />
<text  x="592.59" y="1983.5" ></text>
</g>
<g >
<title>DetectCategory (5 samples, 0.08%)</title><rect x="597.2" y="1973" width="0.9" height="15.0" fill="rgb(213,170,28)" rx="2" ry="2" />
<text  x="600.21" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="517" width="0.2" height="15.0" fill="rgb(249,21,26)" rx="2" ry="2" />
<text  x="1170.69" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (31 samples, 0.49%)</title><rect x="150.4" y="1781" width="5.8" height="15.0" fill="rgb(245,144,37)" rx="2" ry="2" />
<text  x="153.39" y="1791.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (10 samples, 0.16%)</title><rect x="320.2" y="1989" width="1.8" height="15.0" fill="rgb(240,68,18)" rx="2" ry="2" />
<text  x="323.15" y="1999.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="95.7" y="1877" width="0.4" height="15.0" fill="rgb(222,206,23)" rx="2" ry="2" />
<text  x="98.72" y="1887.5" ></text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (71 samples, 1.12%)</title><rect x="81.8" y="1989" width="13.2" height="15.0" fill="rgb(244,192,15)" rx="2" ry="2" />
<text  x="84.77" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (120 samples, 1.89%)</title><rect x="10.0" y="2053" width="22.3" height="15.0" fill="rgb(244,17,21)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >[..</text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1413" width="0.2" height="15.0" fill="rgb(205,134,46)" rx="2" ry="2" />
<text  x="75.48" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1973" width="0.5" height="15.0" fill="rgb(232,132,48)" rx="2" ry="2" />
<text  x="75.66" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="565" width="0.2" height="15.0" fill="rgb(237,52,33)" rx="2" ry="2" />
<text  x="204.34" y="575.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1765" width="0.5" height="15.0" fill="rgb(240,160,16)" rx="2" ry="2" />
<text  x="75.66" y="1775.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="854.0" y="1909" width="0.4" height="15.0" fill="rgb(222,25,38)" rx="2" ry="2" />
<text  x="857.00" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="789" width="0.2" height="15.0" fill="rgb(251,89,6)" rx="2" ry="2" />
<text  x="204.89" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.3" y="1205" width="0.2" height="15.0" fill="rgb(247,152,19)" rx="2" ry="2" />
<text  x="160.27" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find@plt (1 samples, 0.02%)</title><rect x="856.0" y="1909" width="0.2" height="15.0" fill="rgb(254,24,31)" rx="2" ry="2" />
<text  x="859.04" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="1157" width="0.2" height="15.0" fill="rgb(228,83,26)" rx="2" ry="2" />
<text  x="204.89" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1573" width="0.5" height="15.0" fill="rgb(251,82,24)" rx="2" ry="2" />
<text  x="1170.87" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="190.9" y="1717" width="0.2" height="15.0" fill="rgb(220,138,4)" rx="2" ry="2" />
<text  x="193.92" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="437" width="0.2" height="15.0" fill="rgb(233,85,9)" rx="2" ry="2" />
<text  x="204.71" y="447.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="117.5" y="1669" width="0.2" height="15.0" fill="rgb(213,102,23)" rx="2" ry="2" />
<text  x="120.48" y="1679.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="131.0" y="1573" width="0.2" height="15.0" fill="rgb(213,227,43)" rx="2" ry="2" />
<text  x="134.05" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="725" width="0.2" height="15.0" fill="rgb(252,50,50)" rx="2" ry="2" />
<text  x="1170.31" y="735.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (16 samples, 0.25%)</title><rect x="34.7" y="2037" width="3.0" height="15.0" fill="rgb(253,215,27)" rx="2" ry="2" />
<text  x="37.73" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="517" width="0.4" height="15.0" fill="rgb(238,148,0)" rx="2" ry="2" />
<text  x="75.85" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="661" width="0.2" height="15.0" fill="rgb(250,117,33)" rx="2" ry="2" />
<text  x="204.34" y="671.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (46 samples, 0.72%)</title><rect x="826.1" y="1893" width="8.6" height="15.0" fill="rgb(240,19,25)" rx="2" ry="2" />
<text  x="829.11" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="184.0" y="1717" width="0.2" height="15.0" fill="rgb(252,220,32)" rx="2" ry="2" />
<text  x="187.04" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="949" width="0.2" height="15.0" fill="rgb(234,218,45)" rx="2" ry="2" />
<text  x="204.89" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="517" width="0.2" height="15.0" fill="rgb(239,38,36)" rx="2" ry="2" />
<text  x="204.89" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.09%)</title><rect x="164.9" y="1573" width="1.1" height="15.0" fill="rgb(207,146,2)" rx="2" ry="2" />
<text  x="167.89" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1733" width="0.2" height="15.0" fill="rgb(242,31,8)" rx="2" ry="2" />
<text  x="1170.31" y="1743.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1685" width="0.2" height="15.0" fill="rgb(213,3,13)" rx="2" ry="2" />
<text  x="75.48" y="1695.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="593.5" y="1925" width="0.2" height="15.0" fill="rgb(205,169,15)" rx="2" ry="2" />
<text  x="596.49" y="1935.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (1 samples, 0.02%)</title><rect x="593.9" y="1925" width="0.1" height="15.0" fill="rgb(243,208,20)" rx="2" ry="2" />
<text  x="596.86" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="910.5" y="2021" width="0.8" height="15.0" fill="rgb(254,170,31)" rx="2" ry="2" />
<text  x="913.53" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1605" width="0.4" height="15.0" fill="rgb(219,87,0)" rx="2" ry="2" />
<text  x="130.89" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="157.1" y="1749" width="0.5" height="15.0" fill="rgb(239,19,2)" rx="2" ry="2" />
<text  x="160.08" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="437" width="0.4" height="15.0" fill="rgb(216,72,16)" rx="2" ry="2" />
<text  x="75.85" y="447.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="869" width="0.4" height="15.0" fill="rgb(231,207,41)" rx="2" ry="2" />
<text  x="75.85" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1413" width="0.5" height="15.0" fill="rgb(235,149,23)" rx="2" ry="2" />
<text  x="1170.87" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1893" width="0.5" height="15.0" fill="rgb(231,175,41)" rx="2" ry="2" />
<text  x="75.66" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (47 samples, 0.74%)</title><rect x="1168.4" y="2037" width="8.8" height="15.0" fill="rgb(229,132,17)" rx="2" ry="2" />
<text  x="1171.43" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="149" width="0.2" height="15.0" fill="rgb(211,101,48)" rx="2" ry="2" />
<text  x="1170.69" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (28 samples, 0.44%)</title><rect x="129.2" y="1685" width="5.2" height="15.0" fill="rgb(233,114,2)" rx="2" ry="2" />
<text  x="132.19" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="485" width="0.2" height="15.0" fill="rgb(242,44,52)" rx="2" ry="2" />
<text  x="1170.69" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="501" width="0.2" height="15.0" fill="rgb(237,42,12)" rx="2" ry="2" />
<text  x="204.71" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.17%)</title><rect x="35.7" y="1989" width="2.0" height="15.0" fill="rgb(229,152,39)" rx="2" ry="2" />
<text  x="38.66" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1381" width="0.2" height="15.0" fill="rgb(217,56,35)" rx="2" ry="2" />
<text  x="1170.69" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="245" width="0.2" height="15.0" fill="rgb(206,200,48)" rx="2" ry="2" />
<text  x="131.07" y="255.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (25 samples, 0.39%)</title><rect x="1154.5" y="2037" width="4.6" height="15.0" fill="rgb(247,184,17)" rx="2" ry="2" />
<text  x="1157.48" y="2047.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.02%)</title><rect x="594.4" y="1957" width="0.2" height="15.0" fill="rgb(237,48,8)" rx="2" ry="2" />
<text  x="597.42" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="997" width="0.2" height="15.0" fill="rgb(215,169,17)" rx="2" ry="2" />
<text  x="204.89" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="725" width="0.2" height="15.0" fill="rgb(219,59,17)" rx="2" ry="2" />
<text  x="204.71" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.1" y="1445" width="0.2" height="15.0" fill="rgb(241,121,42)" rx="2" ry="2" />
<text  x="160.08" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="821" width="0.2" height="15.0" fill="rgb(233,111,40)" rx="2" ry="2" />
<text  x="131.07" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1653" width="0.2" height="15.0" fill="rgb(219,176,5)" rx="2" ry="2" />
<text  x="1170.50" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1381" width="0.5" height="15.0" fill="rgb(225,82,31)" rx="2" ry="2" />
<text  x="1170.87" y="1391.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="71.7" y="1925" width="0.2" height="15.0" fill="rgb(243,200,20)" rx="2" ry="2" />
<text  x="74.73" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="72.1" y="2005" width="0.2" height="15.0" fill="rgb(249,215,34)" rx="2" ry="2" />
<text  x="75.11" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1877" width="0.2" height="15.0" fill="rgb(250,108,10)" rx="2" ry="2" />
<text  x="1170.31" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="341" width="0.2" height="15.0" fill="rgb(246,155,12)" rx="2" ry="2" />
<text  x="204.71" y="351.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="186.1" y="1669" width="0.5" height="15.0" fill="rgb(205,177,36)" rx="2" ry="2" />
<text  x="189.09" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1829" width="0.5" height="15.0" fill="rgb(233,157,3)" rx="2" ry="2" />
<text  x="75.66" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="1285" width="0.2" height="15.0" fill="rgb(224,70,1)" rx="2" ry="2" />
<text  x="204.71" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="95.7" y="1941" width="0.4" height="15.0" fill="rgb(210,85,16)" rx="2" ry="2" />
<text  x="98.72" y="1951.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="1122.7" y="2053" width="0.4" height="15.0" fill="rgb(243,121,38)" rx="2" ry="2" />
<text  x="1125.69" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1925" width="0.5" height="15.0" fill="rgb(240,58,4)" rx="2" ry="2" />
<text  x="1170.87" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="181" width="0.2" height="15.0" fill="rgb(230,58,33)" rx="2" ry="2" />
<text  x="1170.50" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1221" width="0.4" height="15.0" fill="rgb(243,132,0)" rx="2" ry="2" />
<text  x="130.89" y="1231.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (161 samples, 2.54%)</title><rect x="37.7" y="2037" width="29.9" height="15.0" fill="rgb(221,191,3)" rx="2" ry="2" />
<text  x="40.71" y="2047.5" >Ei..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1317" width="0.5" height="15.0" fill="rgb(206,169,50)" rx="2" ry="2" />
<text  x="1170.87" y="1327.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1120.3" y="2053" width="0.2" height="15.0" fill="rgb(242,51,45)" rx="2" ry="2" />
<text  x="1123.27" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="85" width="0.2" height="15.0" fill="rgb(227,167,11)" rx="2" ry="2" />
<text  x="204.34" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="1461" width="0.2" height="15.0" fill="rgb(211,99,12)" rx="2" ry="2" />
<text  x="160.08" y="1471.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (6 samples, 0.09%)</title><rect x="875.2" y="2005" width="1.1" height="15.0" fill="rgb(232,142,25)" rx="2" ry="2" />
<text  x="878.20" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (3 samples, 0.05%)</title><rect x="1002.2" y="2053" width="0.6" height="15.0" fill="rgb(251,145,10)" rx="2" ry="2" />
<text  x="1005.20" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="1141" width="0.2" height="15.0" fill="rgb(213,38,50)" rx="2" ry="2" />
<text  x="204.89" y="1151.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="37.5" y="1957" width="0.2" height="15.0" fill="rgb(224,107,34)" rx="2" ry="2" />
<text  x="40.52" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="773" width="0.4" height="15.0" fill="rgb(240,162,34)" rx="2" ry="2" />
<text  x="75.85" y="783.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (228 samples, 3.59%)</title><rect x="1057.2" y="2053" width="42.4" height="15.0" fill="rgb(208,69,7)" rx="2" ry="2" />
<text  x="1060.24" y="2063.5" >fas..</text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="588.5" y="1973" width="0.2" height="15.0" fill="rgb(252,38,43)" rx="2" ry="2" />
<text  x="591.47" y="1983.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (189 samples, 2.98%)</title><rect x="687.2" y="1877" width="35.2" height="15.0" fill="rgb(235,18,16)" rx="2" ry="2" />
<text  x="690.21" y="1887.5" >on..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="565" width="0.2" height="15.0" fill="rgb(254,110,37)" rx="2" ry="2" />
<text  x="204.71" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="200.8" y="1909" width="0.2" height="15.0" fill="rgb(237,88,4)" rx="2" ry="2" />
<text  x="203.78" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1061" width="0.4" height="15.0" fill="rgb(233,125,15)" rx="2" ry="2" />
<text  x="130.89" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (42 samples, 0.66%)</title><rect x="160.6" y="1653" width="7.8" height="15.0" fill="rgb(213,75,40)" rx="2" ry="2" />
<text  x="163.61" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="837" width="0.2" height="15.0" fill="rgb(245,29,26)" rx="2" ry="2" />
<text  x="131.07" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="885" width="0.2" height="15.0" fill="rgb(244,9,37)" rx="2" ry="2" />
<text  x="130.52" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="405" width="0.2" height="15.0" fill="rgb(245,209,6)" rx="2" ry="2" />
<text  x="1170.31" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="389" width="0.5" height="15.0" fill="rgb(209,37,45)" rx="2" ry="2" />
<text  x="1170.87" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (27 samples, 0.43%)</title><rect x="102.2" y="1733" width="5.0" height="15.0" fill="rgb(253,99,28)" rx="2" ry="2" />
<text  x="105.23" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="693" width="0.2" height="15.0" fill="rgb(207,175,31)" rx="2" ry="2" />
<text  x="1170.50" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31 samples, 0.49%)</title><rect x="128.6" y="1701" width="5.8" height="15.0" fill="rgb(221,189,36)" rx="2" ry="2" />
<text  x="131.63" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (219 samples, 3.45%)</title><rect x="160.1" y="1909" width="40.7" height="15.0" fill="rgb(252,108,6)" rx="2" ry="2" />
<text  x="163.06" y="1919.5" >std..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (113 samples, 1.78%)</title><rect x="97.0" y="1813" width="21.0" height="15.0" fill="rgb(243,69,5)" rx="2" ry="2" />
<text  x="100.02" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.5" y="1445" width="0.2" height="15.0" fill="rgb(241,104,3)" rx="2" ry="2" />
<text  x="130.52" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.11%)</title><rect x="127.0" y="1925" width="1.3" height="15.0" fill="rgb(224,179,33)" rx="2" ry="2" />
<text  x="129.96" y="1935.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.05%)</title><rect x="721.8" y="1781" width="0.6" height="15.0" fill="rgb(241,119,22)" rx="2" ry="2" />
<text  x="724.79" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1397" width="0.5" height="15.0" fill="rgb(232,180,30)" rx="2" ry="2" />
<text  x="75.66" y="1407.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="592.2" y="1845" width="0.2" height="15.0" fill="rgb(223,101,49)" rx="2" ry="2" />
<text  x="595.19" y="1855.5" ></text>
</g>
<g >
<title>tgnews (6,346 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(241,138,33)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="965" width="0.1" height="15.0" fill="rgb(249,134,2)" rx="2" ry="2" />
<text  x="160.45" y="975.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="103.0" y="1621" width="0.3" height="15.0" fill="rgb(226,133,16)" rx="2" ry="2" />
<text  x="105.97" y="1631.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.08%)</title><rect x="634.8" y="1877" width="0.9" height="15.0" fill="rgb(244,224,49)" rx="2" ry="2" />
<text  x="637.77" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="134.4" y="1669" width="0.2" height="15.0" fill="rgb(238,9,32)" rx="2" ry="2" />
<text  x="137.40" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1301" width="0.2" height="15.0" fill="rgb(248,225,23)" rx="2" ry="2" />
<text  x="1170.69" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1397" width="0.2" height="15.0" fill="rgb(230,212,26)" rx="2" ry="2" />
<text  x="1170.31" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="677" width="0.2" height="15.0" fill="rgb(208,54,48)" rx="2" ry="2" />
<text  x="204.34" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="469" width="0.2" height="15.0" fill="rgb(229,164,17)" rx="2" ry="2" />
<text  x="204.34" y="479.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1013" width="0.5" height="15.0" fill="rgb(233,86,5)" rx="2" ry="2" />
<text  x="75.66" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1397" width="0.1" height="15.0" fill="rgb(230,74,4)" rx="2" ry="2" />
<text  x="160.45" y="1407.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="849.7" y="1845" width="0.2" height="15.0" fill="rgb(234,191,52)" rx="2" ry="2" />
<text  x="852.72" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="357" width="0.2" height="15.0" fill="rgb(251,185,2)" rx="2" ry="2" />
<text  x="1170.69" y="367.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1051.3" y="1973" width="0.2" height="15.0" fill="rgb(235,169,10)" rx="2" ry="2" />
<text  x="1054.29" y="1983.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1909" width="0.2" height="15.0" fill="rgb(236,36,48)" rx="2" ry="2" />
<text  x="75.48" y="1919.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (6 samples, 0.09%)</title><rect x="324.4" y="1989" width="1.1" height="15.0" fill="rgb(213,87,33)" rx="2" ry="2" />
<text  x="327.43" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1157" width="0.2" height="15.0" fill="rgb(243,7,45)" rx="2" ry="2" />
<text  x="1170.69" y="1167.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="592.0" y="1973" width="0.4" height="15.0" fill="rgb(233,55,49)" rx="2" ry="2" />
<text  x="595.00" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1701" width="0.2" height="15.0" fill="rgb(226,125,11)" rx="2" ry="2" />
<text  x="1170.31" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="1237" width="0.2" height="15.0" fill="rgb(208,54,23)" rx="2" ry="2" />
<text  x="204.89" y="1247.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.03%)</title><rect x="635.9" y="1877" width="0.4" height="15.0" fill="rgb(206,72,54)" rx="2" ry="2" />
<text  x="638.89" y="1887.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1925" width="0.2" height="15.0" fill="rgb(254,94,30)" rx="2" ry="2" />
<text  x="75.48" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31 samples, 0.49%)</title><rect x="150.4" y="1765" width="5.8" height="15.0" fill="rgb(226,176,31)" rx="2" ry="2" />
<text  x="153.39" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="597" width="0.2" height="15.0" fill="rgb(251,80,31)" rx="2" ry="2" />
<text  x="130.52" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (9 samples, 0.14%)</title><rect x="854.4" y="1909" width="1.6" height="15.0" fill="rgb(208,57,53)" rx="2" ry="2" />
<text  x="857.37" y="1919.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="32.1" y="1957" width="0.2" height="15.0" fill="rgb(244,180,47)" rx="2" ry="2" />
<text  x="35.13" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="853" width="0.2" height="15.0" fill="rgb(225,104,52)" rx="2" ry="2" />
<text  x="1170.31" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="837" width="0.5" height="15.0" fill="rgb(223,65,4)" rx="2" ry="2" />
<text  x="1170.87" y="847.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (5 samples, 0.08%)</title><rect x="722.4" y="1877" width="0.9" height="15.0" fill="rgb(233,108,54)" rx="2" ry="2" />
<text  x="725.35" y="1887.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (3 samples, 0.05%)</title><rect x="128.6" y="1637" width="0.6" height="15.0" fill="rgb(232,63,35)" rx="2" ry="2" />
<text  x="131.63" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1605" width="0.2" height="15.0" fill="rgb(226,20,51)" rx="2" ry="2" />
<text  x="1170.50" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1365" width="0.1" height="15.0" fill="rgb(232,118,5)" rx="2" ry="2" />
<text  x="160.45" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="181" width="0.2" height="15.0" fill="rgb(226,226,9)" rx="2" ry="2" />
<text  x="1170.69" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="677" width="0.5" height="15.0" fill="rgb(231,131,9)" rx="2" ry="2" />
<text  x="1170.87" y="687.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (1 samples, 0.02%)</title><rect x="445.3" y="1941" width="0.2" height="15.0" fill="rgb(220,96,17)" rx="2" ry="2" />
<text  x="448.29" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="965" width="0.4" height="15.0" fill="rgb(207,208,50)" rx="2" ry="2" />
<text  x="130.89" y="975.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="949" width="0.5" height="15.0" fill="rgb(253,209,51)" rx="2" ry="2" />
<text  x="75.66" y="959.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="103.3" y="1621" width="0.2" height="15.0" fill="rgb(242,212,25)" rx="2" ry="2" />
<text  x="106.34" y="1631.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (159 samples, 2.51%)</title><rect x="972.6" y="2053" width="29.6" height="15.0" fill="rgb(254,130,44)" rx="2" ry="2" />
<text  x="975.63" y="2063.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="37" width="0.2" height="15.0" fill="rgb(222,190,33)" rx="2" ry="2" />
<text  x="1170.31" y="47.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.05%)</title><rect x="910.7" y="1877" width="0.6" height="15.0" fill="rgb(240,9,46)" rx="2" ry="2" />
<text  x="913.71" y="1887.5" ></text>
</g>
<g >
<title>clear_page_erms (6 samples, 0.09%)</title><rect x="31.0" y="1925" width="1.1" height="15.0" fill="rgb(251,24,39)" rx="2" ry="2" />
<text  x="34.01" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1349" width="0.5" height="15.0" fill="rgb(234,191,46)" rx="2" ry="2" />
<text  x="1170.87" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="277" width="0.5" height="15.0" fill="rgb(206,150,8)" rx="2" ry="2" />
<text  x="1170.87" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="183.9" y="1653" width="0.1" height="15.0" fill="rgb(234,90,45)" rx="2" ry="2" />
<text  x="186.86" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.2" y="1557" width="0.3" height="15.0" fill="rgb(238,46,16)" rx="2" ry="2" />
<text  x="204.15" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (16 samples, 0.25%)</title><rect x="187.0" y="1669" width="3.0" height="15.0" fill="rgb(239,155,36)" rx="2" ry="2" />
<text  x="190.02" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="933" width="0.2" height="15.0" fill="rgb(232,174,50)" rx="2" ry="2" />
<text  x="1170.69" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="156.2" y="1765" width="0.1" height="15.0" fill="rgb(215,127,1)" rx="2" ry="2" />
<text  x="159.15" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (13 samples, 0.20%)</title><rect x="131.4" y="1573" width="2.4" height="15.0" fill="rgb(224,16,28)" rx="2" ry="2" />
<text  x="134.42" y="1583.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.03%)</title><rect x="450.3" y="1877" width="0.4" height="15.0" fill="rgb(231,170,33)" rx="2" ry="2" />
<text  x="453.32" y="1887.5" ></text>
</g>
<g >
<title>current_time (1 samples, 0.02%)</title><rect x="79.2" y="1845" width="0.2" height="15.0" fill="rgb(216,45,48)" rx="2" ry="2" />
<text  x="82.17" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1445" width="0.2" height="15.0" fill="rgb(222,155,38)" rx="2" ry="2" />
<text  x="1170.69" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="1061" width="0.2" height="15.0" fill="rgb(218,21,50)" rx="2" ry="2" />
<text  x="204.89" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1717" width="0.2" height="15.0" fill="rgb(205,147,34)" rx="2" ry="2" />
<text  x="1170.31" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="949" width="0.2" height="15.0" fill="rgb(236,57,33)" rx="2" ry="2" />
<text  x="130.52" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (49 samples, 0.77%)</title><rect x="191.1" y="1733" width="9.1" height="15.0" fill="rgb(214,169,52)" rx="2" ry="2" />
<text  x="194.11" y="1743.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (1 samples, 0.02%)</title><rect x="568.2" y="1973" width="0.2" height="15.0" fill="rgb(223,158,22)" rx="2" ry="2" />
<text  x="571.20" y="1983.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="889.1" y="1973" width="0.2" height="15.0" fill="rgb(218,222,1)" rx="2" ry="2" />
<text  x="892.14" y="1983.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="600.7" y="1941" width="0.2" height="15.0" fill="rgb(209,95,40)" rx="2" ry="2" />
<text  x="603.74" y="1951.5" ></text>
</g>
<g >
<title>TDocument::TDocument (6 samples, 0.09%)</title><rect x="79.7" y="1989" width="1.1" height="15.0" fill="rgb(229,212,20)" rx="2" ry="2" />
<text  x="82.73" y="1999.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="889.1" y="1877" width="0.2" height="15.0" fill="rgb(236,30,49)" rx="2" ry="2" />
<text  x="892.14" y="1887.5" ></text>
</g>
<g >
<title>onmt::unicode::cp_to_utf8[abi:cxx11] (2 samples, 0.03%)</title><rect x="636.3" y="1877" width="0.3" height="15.0" fill="rgb(229,200,4)" rx="2" ry="2" />
<text  x="639.26" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="277" width="0.2" height="15.0" fill="rgb(207,50,36)" rx="2" ry="2" />
<text  x="204.34" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.3" y="1589" width="0.4" height="15.0" fill="rgb(209,23,24)" rx="2" ry="2" />
<text  x="130.33" y="1599.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="590.0" y="1973" width="0.1" height="15.0" fill="rgb(224,46,39)" rx="2" ry="2" />
<text  x="592.96" y="1983.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (9 samples, 0.14%)</title><rect x="322.0" y="1989" width="1.7" height="15.0" fill="rgb(206,189,1)" rx="2" ry="2" />
<text  x="325.01" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="179.6" y="1621" width="0.5" height="15.0" fill="rgb(254,209,23)" rx="2" ry="2" />
<text  x="182.58" y="1631.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="934.9" y="1909" width="0.2" height="15.0" fill="rgb(244,122,17)" rx="2" ry="2" />
<text  x="937.88" y="1919.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.03%)</title><rect x="95.7" y="1845" width="0.4" height="15.0" fill="rgb(239,197,50)" rx="2" ry="2" />
<text  x="98.72" y="1855.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.03%)</title><rect x="432.5" y="1877" width="0.3" height="15.0" fill="rgb(227,203,20)" rx="2" ry="2" />
<text  x="435.46" y="1887.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (27 samples, 0.43%)</title><rect x="583.1" y="1973" width="5.0" height="15.0" fill="rgb(224,75,22)" rx="2" ry="2" />
<text  x="586.08" y="1983.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="338.6" y="1989" width="0.3" height="15.0" fill="rgb(227,155,30)" rx="2" ry="2" />
<text  x="341.56" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="168.4" y="1653" width="0.2" height="15.0" fill="rgb(213,132,7)" rx="2" ry="2" />
<text  x="171.42" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="293" width="0.4" height="15.0" fill="rgb(238,34,8)" rx="2" ry="2" />
<text  x="75.85" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (44 samples, 0.69%)</title><rect x="118.0" y="1733" width="8.2" height="15.0" fill="rgb(216,83,12)" rx="2" ry="2" />
<text  x="121.03" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1157" width="0.2" height="15.0" fill="rgb(250,150,27)" rx="2" ry="2" />
<text  x="1170.50" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.2" y="1205" width="0.1" height="15.0" fill="rgb(212,206,35)" rx="2" ry="2" />
<text  x="204.15" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="149" width="0.2" height="15.0" fill="rgb(241,117,36)" rx="2" ry="2" />
<text  x="1170.50" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (34 samples, 0.54%)</title><rect x="1138.9" y="2053" width="6.3" height="15.0" fill="rgb(236,48,26)" rx="2" ry="2" />
<text  x="1141.87" y="2063.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="106.3" y="1605" width="0.6" height="15.0" fill="rgb(249,48,32)" rx="2" ry="2" />
<text  x="109.32" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="661" width="0.2" height="15.0" fill="rgb(227,188,50)" rx="2" ry="2" />
<text  x="1170.50" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="127.1" y="1877" width="1.2" height="15.0" fill="rgb(254,207,10)" rx="2" ry="2" />
<text  x="130.14" y="1887.5" ></text>
</g>
<g >
<title>__errno_location (1 samples, 0.02%)</title><rect x="81.8" y="1941" width="0.2" height="15.0" fill="rgb(240,177,36)" rx="2" ry="2" />
<text  x="84.77" y="1951.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (332 samples, 5.23%)</title><rect x="96.3" y="1989" width="61.7" height="15.0" fill="rgb(240,189,23)" rx="2" ry="2" />
<text  x="99.28" y="1999.5" >Comput..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="128.1" y="741" width="0.2" height="15.0" fill="rgb(244,111,48)" rx="2" ry="2" />
<text  x="131.07" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="1141" width="0.2" height="15.0" fill="rgb(240,214,15)" rx="2" ry="2" />
<text  x="204.71" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="965" width="0.5" height="15.0" fill="rgb(206,52,28)" rx="2" ry="2" />
<text  x="75.66" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="853" width="0.2" height="15.0" fill="rgb(245,85,43)" rx="2" ry="2" />
<text  x="1170.69" y="863.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1941" width="0.5" height="15.0" fill="rgb(254,127,11)" rx="2" ry="2" />
<text  x="75.66" y="1951.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.02%)</title><rect x="420.9" y="1861" width="0.2" height="15.0" fill="rgb(250,13,26)" rx="2" ry="2" />
<text  x="423.94" y="1871.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (619 samples, 9.75%)</title><rect x="650.2" y="1893" width="115.1" height="15.0" fill="rgb(207,10,44)" rx="2" ry="2" />
<text  x="653.20" y="1903.5" >onmt::Tokenize..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="901" width="0.2" height="15.0" fill="rgb(229,6,20)" rx="2" ry="2" />
<text  x="1170.69" y="911.5" ></text>
</g>
<g >
<title>Summarize (975 samples, 15.36%)</title><rect x="158.2" y="2005" width="181.3" height="15.0" fill="rgb(223,98,45)" rx="2" ry="2" />
<text  x="161.20" y="2015.5" >Summarize</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (157 samples, 2.47%)</title><rect x="97.0" y="1829" width="29.2" height="15.0" fill="rgb(251,3,51)" rx="2" ry="2" />
<text  x="100.02" y="1839.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1125" width="0.1" height="15.0" fill="rgb(251,229,7)" rx="2" ry="2" />
<text  x="160.45" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="341" width="0.2" height="15.0" fill="rgb(253,11,50)" rx="2" ry="2" />
<text  x="131.07" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="157.1" y="1733" width="0.5" height="15.0" fill="rgb(232,12,17)" rx="2" ry="2" />
<text  x="160.08" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1445" width="0.2" height="15.0" fill="rgb(209,206,53)" rx="2" ry="2" />
<text  x="204.34" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1237" width="0.5" height="15.0" fill="rgb(234,110,41)" rx="2" ry="2" />
<text  x="1170.87" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="949" width="0.4" height="15.0" fill="rgb(224,37,37)" rx="2" ry="2" />
<text  x="130.89" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.06%)</title><rect x="105.6" y="1605" width="0.7" height="15.0" fill="rgb(247,206,29)" rx="2" ry="2" />
<text  x="108.58" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="725" width="0.2" height="15.0" fill="rgb(213,43,13)" rx="2" ry="2" />
<text  x="130.52" y="735.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1573" width="0.5" height="15.0" fill="rgb(215,93,17)" rx="2" ry="2" />
<text  x="75.66" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1733" width="0.2" height="15.0" fill="rgb(229,36,14)" rx="2" ry="2" />
<text  x="1170.50" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1669" width="0.2" height="15.0" fill="rgb(235,73,20)" rx="2" ry="2" />
<text  x="1170.31" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1157" width="0.5" height="15.0" fill="rgb(227,82,35)" rx="2" ry="2" />
<text  x="1170.87" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.7" y="1621" width="0.4" height="15.0" fill="rgb(228,227,5)" rx="2" ry="2" />
<text  x="204.71" y="1631.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="423.2" y="1829" width="0.2" height="15.0" fill="rgb(248,18,23)" rx="2" ry="2" />
<text  x="426.17" y="1839.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="136.4" y="1605" width="0.2" height="15.0" fill="rgb(225,198,47)" rx="2" ry="2" />
<text  x="139.44" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.5" y="1301" width="0.1" height="15.0" fill="rgb(227,211,4)" rx="2" ry="2" />
<text  x="160.45" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1861" width="0.2" height="15.0" fill="rgb(208,202,8)" rx="2" ry="2" />
<text  x="1170.31" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="201.0" y="1813" width="1.1" height="15.0" fill="rgb(229,221,15)" rx="2" ry="2" />
<text  x="203.96" y="1823.5" ></text>
</g>
<g >
<title>__munmap (2 samples, 0.03%)</title><rect x="592.0" y="1989" width="0.4" height="15.0" fill="rgb(238,123,19)" rx="2" ry="2" />
<text  x="595.00" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="1109" width="0.2" height="15.0" fill="rgb(227,75,45)" rx="2" ry="2" />
<text  x="204.71" y="1119.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="450.1" y="1973" width="0.2" height="15.0" fill="rgb(220,146,10)" rx="2" ry="2" />
<text  x="453.13" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (152 samples, 2.40%)</title><rect x="128.4" y="1941" width="28.3" height="15.0" fill="rgb(238,113,13)" rx="2" ry="2" />
<text  x="131.45" y="1951.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (44 samples, 0.69%)</title><rect x="118.0" y="1765" width="8.2" height="15.0" fill="rgb(252,130,8)" rx="2" ry="2" />
<text  x="121.03" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="156.9" y="1861" width="0.7" height="15.0" fill="rgb(236,112,9)" rx="2" ry="2" />
<text  x="159.90" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (29 samples, 0.46%)</title><rect x="107.2" y="1733" width="5.4" height="15.0" fill="rgb(238,143,36)" rx="2" ry="2" />
<text  x="110.25" y="1743.5" ></text>
</g>
<g >
<title>DetectLanguage[abi:cxx11] (4 samples, 0.06%)</title><rect x="598.1" y="1973" width="0.8" height="15.0" fill="rgb(234,134,23)" rx="2" ry="2" />
<text  x="601.14" y="1983.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (2 samples, 0.03%)</title><rect x="595.4" y="1989" width="0.3" height="15.0" fill="rgb(235,194,26)" rx="2" ry="2" />
<text  x="598.35" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1797" width="0.2" height="15.0" fill="rgb(218,76,36)" rx="2" ry="2" />
<text  x="1170.69" y="1807.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="101.1" y="1573" width="0.2" height="15.0" fill="rgb(251,216,44)" rx="2" ry="2" />
<text  x="104.11" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (84 samples, 1.32%)</title><rect x="97.0" y="1781" width="15.6" height="15.0" fill="rgb(219,184,40)" rx="2" ry="2" />
<text  x="100.02" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1093" width="0.2" height="15.0" fill="rgb(249,0,6)" rx="2" ry="2" />
<text  x="1170.69" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="965" width="0.2" height="15.0" fill="rgb(218,154,13)" rx="2" ry="2" />
<text  x="204.71" y="975.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (56 samples, 0.88%)</title><rect x="1177.2" y="2037" width="10.4" height="15.0" fill="rgb(224,94,52)" rx="2" ry="2" />
<text  x="1180.17" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.11%)</title><rect x="127.0" y="1909" width="1.3" height="15.0" fill="rgb(224,129,39)" rx="2" ry="2" />
<text  x="129.96" y="1919.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1733" width="0.2" height="15.0" fill="rgb(214,60,20)" rx="2" ry="2" />
<text  x="75.48" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="117.8" y="1765" width="0.2" height="15.0" fill="rgb(242,16,39)" rx="2" ry="2" />
<text  x="120.85" y="1775.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="200.2" y="1845" width="0.2" height="15.0" fill="rgb(223,222,38)" rx="2" ry="2" />
<text  x="203.22" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (9 samples, 0.14%)</title><rect x="35.8" y="1893" width="1.7" height="15.0" fill="rgb(230,74,49)" rx="2" ry="2" />
<text  x="38.85" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="773" width="0.5" height="15.0" fill="rgb(236,33,18)" rx="2" ry="2" />
<text  x="1170.87" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (49 samples, 0.77%)</title><rect x="191.1" y="1813" width="9.1" height="15.0" fill="rgb(226,91,39)" rx="2" ry="2" />
<text  x="194.11" y="1823.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.05%)</title><rect x="80.3" y="1909" width="0.5" height="15.0" fill="rgb(210,30,42)" rx="2" ry="2" />
<text  x="83.29" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="934.7" y="1989" width="0.2" height="15.0" fill="rgb(251,66,38)" rx="2" ry="2" />
<text  x="937.70" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="229" width="0.5" height="15.0" fill="rgb(217,86,12)" rx="2" ry="2" />
<text  x="1170.87" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (37 samples, 0.58%)</title><rect x="184.0" y="1781" width="6.9" height="15.0" fill="rgb(238,0,28)" rx="2" ry="2" />
<text  x="187.04" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="146.7" y="1717" width="0.2" height="15.0" fill="rgb(224,158,7)" rx="2" ry="2" />
<text  x="149.67" y="1727.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.03%)</title><rect x="95.7" y="1909" width="0.4" height="15.0" fill="rgb(233,140,12)" rx="2" ry="2" />
<text  x="98.72" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1685" width="0.2" height="15.0" fill="rgb(214,118,54)" rx="2" ry="2" />
<text  x="1170.69" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1013" width="0.2" height="15.0" fill="rgb(253,65,39)" rx="2" ry="2" />
<text  x="130.52" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1221" width="0.2" height="15.0" fill="rgb(226,189,49)" rx="2" ry="2" />
<text  x="1170.31" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1781" width="0.5" height="15.0" fill="rgb(233,168,28)" rx="2" ry="2" />
<text  x="1170.87" y="1791.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.02%)</title><rect x="595.2" y="2005" width="0.2" height="15.0" fill="rgb(224,134,6)" rx="2" ry="2" />
<text  x="598.17" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="597" width="0.2" height="15.0" fill="rgb(232,212,36)" rx="2" ry="2" />
<text  x="1170.69" y="607.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="834.5" y="1877" width="0.2" height="15.0" fill="rgb(240,93,6)" rx="2" ry="2" />
<text  x="837.48" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="588.1" y="1973" width="0.2" height="15.0" fill="rgb(236,108,23)" rx="2" ry="2" />
<text  x="591.10" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (42 samples, 0.66%)</title><rect x="1125.7" y="2053" width="7.8" height="15.0" fill="rgb(241,102,6)" rx="2" ry="2" />
<text  x="1128.66" y="2063.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1051.3" y="1989" width="0.2" height="15.0" fill="rgb(223,107,0)" rx="2" ry="2" />
<text  x="1054.29" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1589" width="0.5" height="15.0" fill="rgb(212,46,35)" rx="2" ry="2" />
<text  x="75.66" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (162 samples, 2.55%)</title><rect x="96.8" y="1941" width="30.2" height="15.0" fill="rgb(218,120,53)" rx="2" ry="2" />
<text  x="99.84" y="1951.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1077" width="0.4" height="15.0" fill="rgb(213,130,48)" rx="2" ry="2" />
<text  x="130.89" y="1087.5" ></text>
</g>
<g >
<title>std::__find_if&lt;std::pair&lt;ENewsCategory, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, __gnu_cxx::__ops::_Iter_pred&lt;void from_json&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (2 samples, 0.03%)</title><rect x="597.6" y="1941" width="0.4" height="15.0" fill="rgb(221,49,10)" rx="2" ry="2" />
<text  x="600.58" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="485" width="0.2" height="15.0" fill="rgb(205,36,12)" rx="2" ry="2" />
<text  x="204.34" y="495.5" ></text>
</g>
<g >
<title>__vfs_read (6 samples, 0.09%)</title><rect x="78.2" y="1941" width="1.2" height="15.0" fill="rgb(212,212,51)" rx="2" ry="2" />
<text  x="81.24" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1445" width="0.5" height="15.0" fill="rgb(234,145,3)" rx="2" ry="2" />
<text  x="75.66" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="1061" width="0.5" height="15.0" fill="rgb(232,182,18)" rx="2" ry="2" />
<text  x="1170.87" y="1071.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (29 samples, 0.46%)</title><rect x="412.0" y="1941" width="5.4" height="15.0" fill="rgb(214,2,53)" rx="2" ry="2" />
<text  x="415.01" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.1" y="853" width="0.2" height="15.0" fill="rgb(208,40,23)" rx="2" ry="2" />
<text  x="160.08" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="869" width="0.2" height="15.0" fill="rgb(235,1,41)" rx="2" ry="2" />
<text  x="204.89" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="157.1" y="1637" width="0.5" height="15.0" fill="rgb(232,46,35)" rx="2" ry="2" />
<text  x="160.08" y="1647.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="80.5" y="1861" width="0.2" height="15.0" fill="rgb(248,227,41)" rx="2" ry="2" />
<text  x="83.47" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1077" width="0.1" height="15.0" fill="rgb(205,161,34)" rx="2" ry="2" />
<text  x="160.45" y="1087.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="154.1" y="1669" width="0.4" height="15.0" fill="rgb(206,116,12)" rx="2" ry="2" />
<text  x="157.11" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="757" width="0.2" height="15.0" fill="rgb(253,215,24)" rx="2" ry="2" />
<text  x="1170.31" y="767.5" ></text>
</g>
<g >
<title>__vfs_write (1 samples, 0.02%)</title><rect x="889.1" y="1941" width="0.2" height="15.0" fill="rgb(212,97,37)" rx="2" ry="2" />
<text  x="892.14" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="1349" width="0.2" height="15.0" fill="rgb(210,118,1)" rx="2" ry="2" />
<text  x="204.34" y="1359.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="139.4" y="1589" width="0.2" height="15.0" fill="rgb(245,161,22)" rx="2" ry="2" />
<text  x="142.42" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (216 samples, 3.40%)</title><rect x="160.1" y="1829" width="40.1" height="15.0" fill="rgb(212,135,7)" rx="2" ry="2" />
<text  x="163.06" y="1839.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1237" width="0.2" height="15.0" fill="rgb(235,200,32)" rx="2" ry="2" />
<text  x="1170.69" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="156.2" y="1781" width="0.1" height="15.0" fill="rgb(208,201,12)" rx="2" ry="2" />
<text  x="159.15" y="1791.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (1 samples, 0.02%)</title><rect x="74.5" y="2021" width="0.2" height="15.0" fill="rgb(243,32,30)" rx="2" ry="2" />
<text  x="77.52" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="229" width="0.2" height="15.0" fill="rgb(212,150,41)" rx="2" ry="2" />
<text  x="1170.31" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1429" width="0.2" height="15.0" fill="rgb(205,143,4)" rx="2" ry="2" />
<text  x="160.27" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1317" width="0.5" height="15.0" fill="rgb(231,118,42)" rx="2" ry="2" />
<text  x="75.66" y="1327.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.02%)</title><rect x="593.5" y="2005" width="0.2" height="15.0" fill="rgb(212,182,18)" rx="2" ry="2" />
<text  x="596.49" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="2037" width="0.5" height="15.0" fill="rgb(233,185,5)" rx="2" ry="2" />
<text  x="1170.87" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.7" y="1045" width="0.2" height="15.0" fill="rgb(209,149,20)" rx="2" ry="2" />
<text  x="1170.69" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1349" width="0.5" height="15.0" fill="rgb(241,28,0)" rx="2" ry="2" />
<text  x="75.66" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.3" y="613" width="0.2" height="15.0" fill="rgb(236,199,51)" rx="2" ry="2" />
<text  x="204.34" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.3" y="1301" width="0.2" height="15.0" fill="rgb(225,156,32)" rx="2" ry="2" />
<text  x="160.27" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1253" width="0.2" height="15.0" fill="rgb(252,125,32)" rx="2" ry="2" />
<text  x="1170.31" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="1221" width="0.2" height="15.0" fill="rgb(247,74,42)" rx="2" ry="2" />
<text  x="204.71" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1125" width="0.4" height="15.0" fill="rgb(234,2,8)" rx="2" ry="2" />
<text  x="130.89" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (28 samples, 0.44%)</title><rect x="129.2" y="1589" width="5.2" height="15.0" fill="rgb(209,92,29)" rx="2" ry="2" />
<text  x="132.19" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="157.3" y="1493" width="0.3" height="15.0" fill="rgb(237,220,11)" rx="2" ry="2" />
<text  x="160.27" y="1503.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="593.5" y="1861" width="0.2" height="15.0" fill="rgb(223,128,38)" rx="2" ry="2" />
<text  x="596.49" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="2005" width="0.2" height="15.0" fill="rgb(211,216,6)" rx="2" ry="2" />
<text  x="1170.31" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.5" y="1349" width="0.2" height="15.0" fill="rgb(246,114,17)" rx="2" ry="2" />
<text  x="130.52" y="1359.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.03%)</title><rect x="450.3" y="1925" width="0.4" height="15.0" fill="rgb(227,19,23)" rx="2" ry="2" />
<text  x="453.32" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="293" width="0.2" height="15.0" fill="rgb(237,21,17)" rx="2" ry="2" />
<text  x="1170.50" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1157" width="0.4" height="15.0" fill="rgb(205,152,39)" rx="2" ry="2" />
<text  x="130.89" y="1167.5" ></text>
</g>
<g >
<title>clear_page_erms (23 samples, 0.36%)</title><rect x="427.6" y="1845" width="4.3" height="15.0" fill="rgb(212,120,21)" rx="2" ry="2" />
<text  x="430.63" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.9" y="1349" width="0.4" height="15.0" fill="rgb(242,85,36)" rx="2" ry="2" />
<text  x="130.89" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="965" width="0.2" height="15.0" fill="rgb(247,52,54)" rx="2" ry="2" />
<text  x="204.89" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1397" width="0.4" height="15.0" fill="rgb(235,58,28)" rx="2" ry="2" />
<text  x="130.89" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="1189" width="0.2" height="15.0" fill="rgb(217,94,48)" rx="2" ry="2" />
<text  x="204.71" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1205" width="0.5" height="15.0" fill="rgb(229,169,34)" rx="2" ry="2" />
<text  x="1170.87" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="725" width="0.2" height="15.0" fill="rgb(206,217,16)" rx="2" ry="2" />
<text  x="204.34" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (1 samples, 0.02%)</title><rect x="606.5" y="1893" width="0.2" height="15.0" fill="rgb(209,128,17)" rx="2" ry="2" />
<text  x="609.51" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="1333" width="0.2" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="204.89" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="201.2" y="1541" width="0.3" height="15.0" fill="rgb(219,69,9)" rx="2" ry="2" />
<text  x="204.15" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="997" width="0.5" height="15.0" fill="rgb(238,110,18)" rx="2" ry="2" />
<text  x="1170.87" y="1007.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="34.2" y="2021" width="0.2" height="15.0" fill="rgb(208,125,36)" rx="2" ry="2" />
<text  x="37.17" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="421" width="0.2" height="15.0" fill="rgb(251,202,45)" rx="2" ry="2" />
<text  x="1170.50" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1269" width="0.5" height="15.0" fill="rgb(213,152,36)" rx="2" ry="2" />
<text  x="1170.87" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="134.4" y="1701" width="0.2" height="15.0" fill="rgb(250,207,10)" rx="2" ry="2" />
<text  x="137.40" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1701" width="0.2" height="15.0" fill="rgb(208,217,15)" rx="2" ry="2" />
<text  x="1170.69" y="1711.5" ></text>
</g>
<g >
<title>Preprocess (1,391 samples, 21.92%)</title><rect x="598.9" y="1957" width="258.6" height="15.0" fill="rgb(223,107,1)" rx="2" ry="2" />
<text  x="601.88" y="1967.5" >Preprocess</text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="74.2" y="2005" width="0.1" height="15.0" fill="rgb(217,49,51)" rx="2" ry="2" />
<text  x="77.15" y="2015.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="593.5" y="1893" width="0.2" height="15.0" fill="rgb(249,205,15)" rx="2" ry="2" />
<text  x="596.49" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.06%)</title><rect x="137.7" y="1589" width="0.8" height="15.0" fill="rgb(208,66,25)" rx="2" ry="2" />
<text  x="140.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (20 samples, 0.32%)</title><rect x="141.8" y="1621" width="3.8" height="15.0" fill="rgb(207,103,35)" rx="2" ry="2" />
<text  x="144.83" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1317" width="0.2" height="15.0" fill="rgb(245,111,3)" rx="2" ry="2" />
<text  x="1170.69" y="1327.5" ></text>
</g>
<g >
<title>ksys_read (6 samples, 0.09%)</title><rect x="78.2" y="1973" width="1.2" height="15.0" fill="rgb(207,166,23)" rx="2" ry="2" />
<text  x="81.24" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="389" width="0.2" height="15.0" fill="rgb(253,42,39)" rx="2" ry="2" />
<text  x="1170.69" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="69" width="0.2" height="15.0" fill="rgb(243,156,14)" rx="2" ry="2" />
<text  x="1170.31" y="79.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.05%)</title><rect x="80.3" y="1957" width="0.5" height="15.0" fill="rgb(228,113,41)" rx="2" ry="2" />
<text  x="83.29" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1045" width="0.2" height="15.0" fill="rgb(206,224,40)" rx="2" ry="2" />
<text  x="1170.50" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1333" width="0.2" height="15.0" fill="rgb(212,41,9)" rx="2" ry="2" />
<text  x="204.34" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.3" y="1541" width="0.3" height="15.0" fill="rgb(251,207,17)" rx="2" ry="2" />
<text  x="160.27" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1893" width="0.2" height="15.0" fill="rgb(236,189,15)" rx="2" ry="2" />
<text  x="1170.50" y="1903.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::str[abi:cxx11] (1 samples, 0.02%)</title><rect x="603.0" y="1909" width="0.2" height="15.0" fill="rgb(231,78,34)" rx="2" ry="2" />
<text  x="605.98" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="1237" width="0.2" height="15.0" fill="rgb(206,15,13)" rx="2" ry="2" />
<text  x="204.71" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="128.6" y="1653" width="0.6" height="15.0" fill="rgb(210,212,21)" rx="2" ry="2" />
<text  x="131.63" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="423.5" y="1813" width="0.2" height="15.0" fill="rgb(213,57,21)" rx="2" ry="2" />
<text  x="426.54" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1589" width="0.2" height="15.0" fill="rgb(216,189,18)" rx="2" ry="2" />
<text  x="1170.31" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (28 samples, 0.44%)</title><rect x="112.6" y="1701" width="5.2" height="15.0" fill="rgb(242,224,0)" rx="2" ry="2" />
<text  x="115.64" y="1711.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (27 samples, 0.43%)</title><rect x="1100.4" y="2053" width="5.0" height="15.0" fill="rgb(205,124,39)" rx="2" ry="2" />
<text  x="1103.38" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="149.3" y="1637" width="0.2" height="15.0" fill="rgb(215,138,32)" rx="2" ry="2" />
<text  x="152.27" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (27 samples, 0.43%)</title><rect x="112.8" y="1685" width="5.0" height="15.0" fill="rgb(232,100,7)" rx="2" ry="2" />
<text  x="115.83" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1781" width="0.2" height="15.0" fill="rgb(218,101,30)" rx="2" ry="2" />
<text  x="1170.50" y="1791.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="160.4" y="1637" width="0.2" height="15.0" fill="rgb(233,172,51)" rx="2" ry="2" />
<text  x="163.43" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (20 samples, 0.32%)</title><rect x="146.7" y="1765" width="3.7" height="15.0" fill="rgb(229,161,6)" rx="2" ry="2" />
<text  x="149.67" y="1775.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="72.5" y="1445" width="0.2" height="15.0" fill="rgb(251,196,0)" rx="2" ry="2" />
<text  x="75.48" y="1455.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.09%)</title><rect x="184.6" y="1669" width="1.1" height="15.0" fill="rgb(231,96,13)" rx="2" ry="2" />
<text  x="187.60" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.7" y="1013" width="0.2" height="15.0" fill="rgb(227,216,42)" rx="2" ry="2" />
<text  x="204.71" y="1023.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="145.6" y="1621" width="0.1" height="15.0" fill="rgb(215,128,48)" rx="2" ry="2" />
<text  x="148.55" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (216 samples, 3.40%)</title><rect x="160.1" y="1845" width="40.1" height="15.0" fill="rgb(226,160,45)" rx="2" ry="2" />
<text  x="163.06" y="1855.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="201.5" y="1749" width="0.6" height="15.0" fill="rgb(240,44,16)" rx="2" ry="2" />
<text  x="204.52" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="389" width="0.2" height="15.0" fill="rgb(248,7,12)" rx="2" ry="2" />
<text  x="204.89" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="213" width="0.5" height="15.0" fill="rgb(230,93,4)" rx="2" ry="2" />
<text  x="1170.87" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="128.1" y="693" width="0.2" height="15.0" fill="rgb(239,39,45)" rx="2" ry="2" />
<text  x="131.07" y="703.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.03%)</title><rect x="432.5" y="1861" width="0.3" height="15.0" fill="rgb(247,4,20)" rx="2" ry="2" />
<text  x="435.46" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.2" y="1349" width="0.1" height="15.0" fill="rgb(232,120,28)" rx="2" ry="2" />
<text  x="204.15" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1141" width="0.5" height="15.0" fill="rgb(218,9,23)" rx="2" ry="2" />
<text  x="1170.87" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (129 samples, 2.03%)</title><rect x="160.1" y="1781" width="23.9" height="15.0" fill="rgb(217,121,41)" rx="2" ry="2" />
<text  x="163.06" y="1791.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.05%)</title><rect x="160.1" y="1701" width="0.5" height="15.0" fill="rgb(221,131,7)" rx="2" ry="2" />
<text  x="163.06" y="1711.5" ></text>
</g>
<g >
<title>__generic_write_end (1 samples, 0.02%)</title><rect x="889.1" y="1829" width="0.2" height="15.0" fill="rgb(216,179,40)" rx="2" ry="2" />
<text  x="892.14" y="1839.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.03%)</title><rect x="862.0" y="2021" width="0.4" height="15.0" fill="rgb(213,152,27)" rx="2" ry="2" />
<text  x="864.99" y="2031.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.11%)</title><rect x="161.2" y="1589" width="1.3" height="15.0" fill="rgb(220,112,13)" rx="2" ry="2" />
<text  x="164.17" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="805" width="0.2" height="15.0" fill="rgb(231,121,51)" rx="2" ry="2" />
<text  x="1170.69" y="815.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.06%)</title><rect x="1123.8" y="2053" width="0.7" height="15.0" fill="rgb(210,178,13)" rx="2" ry="2" />
<text  x="1126.80" y="2063.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="597.8" y="1925" width="0.2" height="15.0" fill="rgb(250,90,0)" rx="2" ry="2" />
<text  x="600.77" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="917" width="0.2" height="15.0" fill="rgb(253,143,19)" rx="2" ry="2" />
<text  x="204.89" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="1573" width="0.2" height="15.0" fill="rgb(212,94,35)" rx="2" ry="2" />
<text  x="1170.50" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="201.2" y="1653" width="0.3" height="15.0" fill="rgb(254,11,16)" rx="2" ry="2" />
<text  x="204.15" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.3" y="1685" width="0.2" height="15.0" fill="rgb(251,166,26)" rx="2" ry="2" />
<text  x="1170.31" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1109" width="0.2" height="15.0" fill="rgb(250,76,44)" rx="2" ry="2" />
<text  x="1170.50" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="549" width="0.2" height="15.0" fill="rgb(235,67,3)" rx="2" ry="2" />
<text  x="1170.69" y="559.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (6 samples, 0.09%)</title><rect x="823.7" y="1893" width="1.1" height="15.0" fill="rgb(234,202,23)" rx="2" ry="2" />
<text  x="826.69" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="821" width="0.2" height="15.0" fill="rgb(207,92,39)" rx="2" ry="2" />
<text  x="1170.50" y="831.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="139.2" y="1589" width="0.2" height="15.0" fill="rgb(209,80,18)" rx="2" ry="2" />
<text  x="142.23" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="853" width="0.2" height="15.0" fill="rgb(234,221,52)" rx="2" ry="2" />
<text  x="204.89" y="863.5" ></text>
</g>
<g >
<title>new_sync_read (4 samples, 0.06%)</title><rect x="910.5" y="1941" width="0.8" height="15.0" fill="rgb(233,97,31)" rx="2" ry="2" />
<text  x="913.53" y="1951.5" ></text>
</g>
<g >
<title>uncharge_batch (1 samples, 0.02%)</title><rect x="592.2" y="1765" width="0.2" height="15.0" fill="rgb(239,66,11)" rx="2" ry="2" />
<text  x="595.19" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="157.3" y="1557" width="0.3" height="15.0" fill="rgb(206,31,42)" rx="2" ry="2" />
<text  x="160.27" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="1749" width="0.2" height="15.0" fill="rgb(249,206,19)" rx="2" ry="2" />
<text  x="1170.50" y="1759.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="591.4" y="1973" width="0.6" height="15.0" fill="rgb(213,201,43)" rx="2" ry="2" />
<text  x="594.45" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.5" y="1461" width="0.1" height="15.0" fill="rgb(246,58,48)" rx="2" ry="2" />
<text  x="160.45" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (35 samples, 0.55%)</title><rect x="168.6" y="1701" width="6.5" height="15.0" fill="rgb(216,213,10)" rx="2" ry="2" />
<text  x="171.61" y="1711.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="133.8" y="1573" width="0.6" height="15.0" fill="rgb(234,186,4)" rx="2" ry="2" />
<text  x="136.84" y="1583.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="37.5" y="1973" width="0.2" height="15.0" fill="rgb(236,24,54)" rx="2" ry="2" />
<text  x="40.52" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.9" y="1045" width="0.4" height="15.0" fill="rgb(231,125,24)" rx="2" ry="2" />
<text  x="130.89" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="725" width="0.4" height="15.0" fill="rgb(221,35,16)" rx="2" ry="2" />
<text  x="75.85" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (31 samples, 0.49%)</title><rect x="134.8" y="1653" width="5.7" height="15.0" fill="rgb(254,214,0)" rx="2" ry="2" />
<text  x="137.77" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="133" width="0.5" height="15.0" fill="rgb(233,102,45)" rx="2" ry="2" />
<text  x="1170.87" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (2 samples, 0.03%)</title><rect x="594.6" y="1989" width="0.4" height="15.0" fill="rgb(251,100,0)" rx="2" ry="2" />
<text  x="597.61" y="1999.5" ></text>
</g>
<g >
<title>page_fault (30 samples, 0.47%)</title><rect x="419.4" y="1941" width="5.6" height="15.0" fill="rgb(241,109,14)" rx="2" ry="2" />
<text  x="422.45" y="1951.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="98.9" y="1589" width="0.2" height="15.0" fill="rgb(239,133,29)" rx="2" ry="2" />
<text  x="101.88" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.7" y="549" width="0.2" height="15.0" fill="rgb(235,148,26)" rx="2" ry="2" />
<text  x="204.71" y="559.5" ></text>
</g>
<g >
<title>new_sync_read (6 samples, 0.09%)</title><rect x="78.2" y="1925" width="1.2" height="15.0" fill="rgb(254,168,53)" rx="2" ry="2" />
<text  x="81.24" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.7" y="1541" width="0.2" height="15.0" fill="rgb(246,42,40)" rx="2" ry="2" />
<text  x="1170.69" y="1551.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (71 samples, 1.12%)</title><rect x="607.8" y="1893" width="13.2" height="15.0" fill="rgb(215,66,45)" rx="2" ry="2" />
<text  x="610.81" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="201.9" y="1077" width="0.2" height="15.0" fill="rgb(219,148,28)" rx="2" ry="2" />
<text  x="204.89" y="1087.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry@plt (1 samples, 0.02%)</title><rect x="336.0" y="1989" width="0.1" height="15.0" fill="rgb(252,99,1)" rx="2" ry="2" />
<text  x="338.96" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="127.1" y="1861" width="1.2" height="15.0" fill="rgb(229,101,47)" rx="2" ry="2" />
<text  x="130.14" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="190.9" y="1797" width="0.2" height="15.0" fill="rgb(239,60,18)" rx="2" ry="2" />
<text  x="193.92" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.3" y="1381" width="0.2" height="15.0" fill="rgb(217,173,23)" rx="2" ry="2" />
<text  x="1170.31" y="1391.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.03%)</title><rect x="592.0" y="1909" width="0.4" height="15.0" fill="rgb(248,148,42)" rx="2" ry="2" />
<text  x="595.00" y="1919.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="166.0" y="1573" width="0.2" height="15.0" fill="rgb(245,24,39)" rx="2" ry="2" />
<text  x="169.01" y="1583.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 0.09%)</title><rect x="31.0" y="1957" width="1.1" height="15.0" fill="rgb(219,214,10)" rx="2" ry="2" />
<text  x="34.01" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (151 samples, 2.38%)</title><rect x="128.6" y="1925" width="28.1" height="15.0" fill="rgb(239,180,8)" rx="2" ry="2" />
<text  x="131.63" y="1935.5" >s..</text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (71 samples, 1.12%)</title><rect x="81.8" y="1973" width="13.2" height="15.0" fill="rgb(234,212,38)" rx="2" ry="2" />
<text  x="84.77" y="1983.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.05%)</title><rect x="80.3" y="1941" width="0.5" height="15.0" fill="rgb(211,83,45)" rx="2" ry="2" />
<text  x="83.29" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="917" width="0.2" height="15.0" fill="rgb(207,69,32)" rx="2" ry="2" />
<text  x="204.34" y="927.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1989" width="0.5" height="15.0" fill="rgb(248,153,9)" rx="2" ry="2" />
<text  x="75.66" y="1999.5" ></text>
</g>
<g >
<title>try_to_wake_up (9 samples, 0.14%)</title><rect x="35.8" y="1909" width="1.7" height="15.0" fill="rgb(241,187,20)" rx="2" ry="2" />
<text  x="38.85" y="1919.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (5 samples, 0.08%)</title><rect x="182.2" y="1621" width="0.9" height="15.0" fill="rgb(207,143,33)" rx="2" ry="2" />
<text  x="185.18" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="1253" width="0.2" height="15.0" fill="rgb(237,178,40)" rx="2" ry="2" />
<text  x="204.89" y="1263.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="594.2" y="1989" width="0.2" height="15.0" fill="rgb(252,203,8)" rx="2" ry="2" />
<text  x="597.24" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.9" y="581" width="0.2" height="15.0" fill="rgb(216,65,43)" rx="2" ry="2" />
<text  x="204.89" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1167.9" y="645" width="0.5" height="15.0" fill="rgb(206,205,30)" rx="2" ry="2" />
<text  x="1170.87" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="201.3" y="1269" width="0.2" height="15.0" fill="rgb(254,197,47)" rx="2" ry="2" />
<text  x="204.34" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1167.5" y="37" width="0.2" height="15.0" fill="rgb(206,157,47)" rx="2" ry="2" />
<text  x="1170.50" y="47.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="72.8" y="453" width="0.4" height="15.0" fill="rgb(239,74,33)" rx="2" ry="2" />
<text  x="75.85" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (2 samples, 0.03%)</title><rect x="96.5" y="1957" width="0.3" height="15.0" fill="rgb(224,15,40)" rx="2" ry="2" />
<text  x="99.46" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="72.7" y="1285" width="0.5" height="15.0" fill="rgb(235,50,26)" rx="2" ry="2" />
<text  x="75.66" y="1295.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (4 samples, 0.06%)</title><rect x="888.4" y="2037" width="0.7" height="15.0" fill="rgb(250,2,50)" rx="2" ry="2" />
<text  x="891.40" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1167.9" y="1045" width="0.5" height="15.0" fill="rgb(208,142,33)" rx="2" ry="2" />
<text  x="1170.87" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1167.5" y="133" width="0.2" height="15.0" fill="rgb(224,214,48)" rx="2" ry="2" />
<text  x="1170.50" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.3" y="1269" width="0.2" height="15.0" fill="rgb(236,64,52)" rx="2" ry="2" />
<text  x="160.27" y="1279.5" ></text>
</g>
</g>
</svg>
